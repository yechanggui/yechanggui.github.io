<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/02/14/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD/"/>
      <url>/2025/02/14/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="预训练模型下载加速"><a href="#预训练模型下载加速" class="headerlink" title="预训练模型下载加速"></a>预训练模型下载加速</h3><ol><li><p>Huggingface_hub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install huggingface_hub</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> huggingface_hub <span class="keyword">import</span> snapshot_download</span><br><span class="line">snapshot_download(repo_id=<span class="string">&quot;ClueAI/ChatYuan-large-v2&quot;</span>, local_dir=<span class="string">&quot;./test&quot;</span>, cache_dir=<span class="string">&#x27;./test&#x27;</span>, local_dir_use_symlinks=<span class="literal">False</span>, force_download=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li><li><p>Paddlenlp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade paddlenlp</span><br><span class="line"></span><br><span class="line"><span class="comment">## docker版本</span></span><br><span class="line">docker pull registry.baidubce.com/paddlepaddle/paddle:2.4.2-gpu-cuda11.7-cudnn8.4-trt8.4</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> paddlenlp.transformers <span class="keyword">import</span> AutoTokenizer, T5ForConditionalGeneration</span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;ClueAI/ChatYuan-large-v1&quot;</span>, from_hf_hub=<span class="literal">False</span>,  cache_dir=<span class="string">&#x27;./data/pretrained_models&#x27;</span>)</span><br><span class="line">model = T5ForConditionalGeneration.from_pretrained(<span class="string">&quot;ClueAI/ChatYuan-large-v1&quot;</span>, from_hf_hub=<span class="literal">False</span>,  cache_dir=<span class="string">&#x27;./data/pretrained_models&#x27;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.paddlepaddle.org.cn/documentation/docs/zh/install/docker/linux-docker.html"></a></p><ol start="3"><li>Modelscope<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch==1.11.0 torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu</span><br><span class="line">git lfs install</span><br><span class="line">git <span class="built_in">clone</span> https://www.modelscope.cn/&lt;namespace&gt;/&lt;model-name&gt;.git</span><br></pre></td></tr></table></figure></li></ol><p><a href="https://www.modelscope.cn/docs/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85">model</a></p><h3 id="镜像站"><a href="#镜像站" class="headerlink" title="镜像站"></a>镜像站</h3><p>HF_ENDPOINT= <a href="https://hf-mirror.com/">https://hf-mirror.com</a> nohup huggingface-cli download –token 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 –local-dir-use-symlinks False –resume-download shenzhi-wang/llama3-70b-chinese-chat –local-dir llama3-70b-chinese-chat</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/%E9%87%8F%E5%8C%96/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
      <url>/2025/02/14/%E9%87%8F%E5%8C%96/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h1><h2 id="收益"><a href="#收益" class="headerlink" title="收益"></a>收益</h2><p>-</p><ul><li>Alpha是投资者获得与市场波动无关的回报</li><li><ul><li>新节点<ul><li>新节点</li></ul></li></ul></li></ul><h2 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch/ES%20%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/"/>
      <url>/2025/02/14/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch/ES%20%E9%80%9F%E6%9F%A5%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p>#ES </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">### 删除</span><br><span class="line">199610-knowledge_base_v0/_delete_by_query/</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;&quot;match&quot;: &#123;&quot;parentid&quot;: &quot;199610-14-849&quot;&#125;&#125;,</span><br><span class="line">        &#123;&quot;match&quot;: &#123;&quot;knowledge_type&quot;: &quot;attachment&quot;&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/python/%E6%9C%AA%E5%91%BD%E5%90%8D/"/>
      <url>/2025/02/14/python/%E6%9C%AA%E5%91%BD%E5%90%8D/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/python/%E6%9C%AA%E5%91%BD%E5%90%8D%201/"/>
      <url>/2025/02/14/python/%E6%9C%AA%E5%91%BD%E5%90%8D%201/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl &#x27;http://127.0.0.1:5000/api/project/knowledge_portal/suggest_knowledge/1_2?page=1&amp;per_page=8&amp;scene=knowledge_base,knowledge_encyclopedia&#x27; \</span><br><span class="line">  -H &#x27;Accept: application/json, text/plain, */*&#x27; \</span><br><span class="line">  -H &#x27;Accept-Language: zh-CN,zh;q=0.9&#x27; \</span><br><span class="line">  -H &#x27;AppAuth: MTk5NjE0XzFfMg==&#x27; \</span><br><span class="line">  -H &#x27;Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MTQ4MjcxMTEsIm5iZiI6MTcxNDgyNzExMSwianRpIjoiOWM5OWYzZDYtM2M1NC00NWRkLThlNjAtZGE3MjAyMWYxNTZjIiwiZXhwIjoxNzE1NDMxOTExLCJpZGVudGl0eSI6WyJhZG1pbiIsbnVsbF0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyIsInVzZXJfY2xhaW1zIjp7InVzZXJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsImxldmVsIjoiXHU4ZDg1XHU3ZWE3XHU3YmExXHU3NDA2XHU1NDU4IiwidXNlcl9uaWNrbmFtZSI6ImFkbWluIiwidXNlcl9pY29uIjoiIiwidXNlcl9jZW50ZXJfaWQiOm51bGx9fQ.gMwpccCHooveXMlHI0R5CH_IFp4WFlv00WC3B3R2UIs&#x27; \</span><br><span class="line">  -H &#x27;Cache-Control: no-cache&#x27; \</span><br><span class="line">  -H &#x27;Connection: keep-alive&#x27; \</span><br><span class="line">  -H &#x27;Cookie: code-server-session=%24argon2id%24v%3D19%24m%3D65536%2Ct%3D3%2Cp%3D4%24PWR%2FdtYB5RCQuLcbC%2FzS0g%24tCmRo2I3mPgVIhhYu5njXxJJpPKluNQMDjLHKzKhfAA; request_session_id_199614_knowledge_base:knowledge_encyclopedia=&quot;dgs-hz#1714727569287474#Kg==#JiZfc2NvcmUmaW52ZXJ0ZWRfb3JkZXI=&quot;; request_session_id_199614_knowledge_base=&quot;dgs-hz#1714895165225086#Kg==#JiZfc2NvcmUmaW52ZXJ0ZWRfb3JkZXI=&quot;&#x27; \</span><br><span class="line">  -H &#x27;Pragma: no-cache&#x27; \</span><br><span class="line">  -H &#x27;Referer: http://172.26.24.124:31288/fronted/&#x27; \</span><br><span class="line">  -H &#x27;Use-Progress: NO&#x27; \</span><br><span class="line">  -H &#x27;User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36&#x27; \</span><br><span class="line">  -H &#x27;X-APP-ID: 199614&#x27; \</span><br><span class="line">  -H &#x27;X-APP-NAME: 1_2&#x27; \</span><br><span class="line">  --insecure</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/linux/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
      <url>/2025/02/14/linux/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/02/14/obsdian/demo/"/>
      <url>/2025/02/14/obsdian/demo/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### [](https://github.com/valentine195/obsidian-admonition/blob/master/README.md#color)Color ###</span><br><span class="line"></span><br><span class="line">The admonition color can be overridden using the `color` parameter. **The color entered must be an RGB triad.**</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color: 200, 200, 200</span><br><span class="line">collapse: True</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 检查</span><br><span class="line">collapse: open</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2025/02/02/linux/Git/"/>
      <url>/2025/02/02/linux/Git/</url>
      
        <content type="html"><![CDATA[<h3 id="Dbcommon-开发指南"><a href="#Dbcommon-开发指南" class="headerlink" title="Dbcommon 开发指南"></a>Dbcommon 开发指南</h3><ol><li>Clone 子仓库</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --init --recursive </span><br></pre></td></tr></table></figure><ol start="2"><li>新建项目分支</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd app/common/db_common</span><br><span class="line">git checkout -b project/&#123;项目名称&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>更新 db common 的 submodule</li></ol><p>4.1 修改. Gitmudles 的指向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[submodule &quot;app/common/db_common&quot;]</span><br><span class="line">path = app/common/db_common</span><br><span class="line">url = ssh://git@git.datagrand.com:58422/Search_Recommend_Department/Intelligent_Search/Pangu_Search/thirdpart/db_common.git</span><br><span class="line">branch = project/nanwang</span><br></pre></td></tr></table></figure><p>4.2 更新子仓库分支指向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --remote</span><br></pre></td></tr></table></figure><ol start="2"><li>检查子仓分支是否指向最新的修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git submodule</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ab测试</title>
      <link href="/2024/11/08/linux/%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/11/08/linux/%E6%80%A7%E8%83%BD%E5%8E%8B%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="ab-测试"><a href="#ab-测试" class="headerlink" title="ab 测试"></a>ab 测试</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd-tools</span><br></pre></td></tr></table></figure><h3 id="2-运行"><a href="#2-运行" class="headerlink" title="2. 运行"></a>2. 运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab -n 100 -c 10 -H &quot;CustomHeader: Value&quot; http://example.com/</span><br></pre></td></tr></table></figure><h4 id="添加-header"><a href="#添加-header" class="headerlink" title="添加 header"></a>添加 header</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ab -n &lt;总请求数&gt; -c &lt;并发数&gt; -T application/json -p &lt;包含JSON数据的文件&gt; -H &quot;CustomHeader: Value&quot; &lt;URL&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>n &lt;总请求数&gt;: 指定要执行的总请求数。</li><li>c &lt;并发数&gt;: 指定并发请求数。</li><li>T application/json: 指定请求的 Content-Type 为 JSON 格式。</li><li>p &lt;包含JSON数据的文件&gt;: 指定包含 JSON 数据的文件。</li><li>H “CustomHeader: Value”: 添加自定义 Header。</li></ul><h3 id="定制脚本"><a href="#定制脚本" class="headerlink" title="定制脚本"></a>定制脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 注意事项</span><br><span class="line">collapse: open</span><br><span class="line"></span><br><span class="line">1.  提前安装`yum install jq `</span><br><span class="line">2. </span><br></pre></td></tr></table></figure><p><code>header.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;headers&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;AppAuth&quot;</span>: <span class="string">&quot;MTk5NjA5X2RhbWVuZ2dvZ29nbw==&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;Authorization&quot;</span>: <span class="string">&quot;Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE3MzEwMzczMzQsIm5iZiI6MTczMTAzNzMzNCwianRpIjoiOWY3OGFiMDAtYmQ0Zi00MzhlLWFlZjYtMWE5YTEyMmE5OGQ4IiwiZXhwIjoxNzMxNjQyMTM0LCJpZGVudGl0eSI6WyJOd19zdTg4IixudWxsXSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIiwidXNlcl9jbGFpbXMiOnsidXNlcmlkIjoxNzMsInVzZXJuYW1lIjoiTndfc3U4OCIsImxldmVsIjoiXHU4ZDg1XHU3ZWE3XHU3YmExXHU3NDA2XHU1NDU4IiwidXNlcl9uaWNrbmFtZSI6Ik53X3N1ODgiLCJ1c2VyX2ljb24iOiIuL2Fzc2V0cy9pbWFnZXMvYXZhdGFyLnN2ZyIsInVzZXJfY2VudGVyX2lkIjpudWxsfX0.qCChOJwu3jZ_0214gZrxH4_JYIIKqUc7MvbdH0-HNZo&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;X-APP-ID&quot;</span>: <span class="string">&quot;199609&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;X-APP-NAME&quot;</span>: <span class="string">&quot;damenggogogo&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;X-SERVICE-TYPE&quot;</span>: <span class="string">&quot;km&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>data.json 用于post请求</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#!/bin/bash</p><p>#请求数量<br>number=$1<br>#并发数量<br>concurrency=$2<br>#接口<br>url=$3</p><h1 id="从-JSON-文件中提取数据"><a href="#从-JSON-文件中提取数据" class="headerlink" title="从 JSON 文件中提取数据"></a>从 JSON 文件中提取数据</h1><p>custom_header=$(jq -r ‘.headers | to_entries | map(“-H &quot; + .key + “:” + .value + “&quot;“) | join(“ “)’ header.json)</p><h1 id="发送-GET-请求"><a href="#发送-GET-请求" class="headerlink" title="发送 GET 请求"></a>发送 GET 请求</h1><p>echo “执行命令: ab -n $number -c $concurrency $custom_header $url”<br>ab -n $number -c $concurrency $custom_header $url</p><h1 id="发送-POST-请求"><a href="#发送-POST-请求" class="headerlink" title="发送 POST 请求"></a>发送 POST 请求</h1><h1 id="ab-n-100-c-10-T-application-json-p-data-json-custom-header-url"><a href="#ab-n-100-c-10-T-application-json-p-data-json-custom-header-url" class="headerlink" title="ab -n 100 -c 10 -T application/json -p data.json $custom_header $url"></a>ab -n 100 -c 10 -T application/json -p data.json $custom_header $url</h1><pre><code>## 脚本使用1. 修改 header json 的数据2. 执行 shell 脚本 bash adtest.sh  1000 400  http://www.baidu.com3. </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s 证书更新</title>
      <link href="/2024/09/09/kubernetes/k8s%20%E8%AF%81%E4%B9%A6%E6%9B%B4%E6%96%B0/"/>
      <url>/2024/09/09/kubernetes/k8s%20%E8%AF%81%E4%B9%A6%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="1-master-查看过期情况"><a href="#1-master-查看过期情况" class="headerlink" title="1. master 查看过期情况"></a>1. master 查看过期情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm certs check-expiration</span><br></pre></td></tr></table></figure><h3 id="2-备份原来的配置"><a href="#2-备份原来的配置" class="headerlink" title="2. 备份原来的配置"></a>2. 备份原来的配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /etc/kubernetes /etc/kubernetes.old</span><br></pre></td></tr></table></figure><h3 id="3-创建新的证书"><a href="#3-创建新的证书" class="headerlink" title="3.  创建新的证书"></a>3.  创建新的证书</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm certs renew all</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://juejin.cn/post/7068909995701567501">解决kubernetes证书过期问题kubernetes证书过期问题 现象 通过 kubeadm 安装 kubernet - 掘金</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux</title>
      <link href="/2024/06/04/linux/NAS%20%E6%8C%82%E8%BD%BD/"/>
      <url>/2024/06/04/linux/NAS%20%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>loki</title>
      <link href="/2024/01/17/python/loki/"/>
      <url>/2024/01/17/python/loki/</url>
      
        <content type="html"><![CDATA[<h3 id="系统性能查询"><a href="#系统性能查询" class="headerlink" title="系统性能查询"></a>系统性能查询</h3><h3 id="qps"><a href="#qps" class="headerlink" title="qps"></a>qps</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(&#123;filename=&quot;/var/log/nginx/access.log&quot;&#125;[5m]))</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/m0_37680131/article/details/134308227">python获取loki日志_loki日志接口-CSDN博客</a></p><p><a href="https://juejin.cn/post/7202557470342316087">10分钟学会使用 Loki 日志聚合系统 - 掘金</a></p><p><a href="https://blog.csdn.net/weixin_44275820/article/details/120548004">loki使用超详细说明-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/2024/01/17/python/marshmallow/"/>
      <url>/2024/01/17/python/marshmallow/</url>
      
        <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 风格检查</title>
      <link href="/2024/01/07/python/python%20%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5/"/>
      <url>/2024/01/07/python/python%20%E9%A3%8E%E6%A0%BC%E6%A3%80%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="Ruff"><a href="#Ruff" class="headerlink" title="Ruff"></a>Ruff</h2><h3 id="不自动-Fix-F401-定义但是没有使用的问题"><a href="#不自动-Fix-F401-定义但是没有使用的问题" class="headerlink" title="不自动 Fix  F401 (定义但是没有使用的问题)"></a>不自动 Fix  <code>F401</code> (定义但是没有使用的问题)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[lint]</span><br><span class="line">unfixable = [&quot;F401&quot;]</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://docs.astral.sh/ruff/configuration/">Configuring Ruff - Ruff</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云 oss</title>
      <link href="/2023/12/15/linux/%E9%98%BF%E9%87%8C%E4%BA%91%20oss/"/>
      <url>/2023/12/15/linux/%E9%98%BF%E9%87%8C%E4%BA%91%20oss/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="406db84ada75fe7a759a1ed74fa8e5988c8d865bc2ca6208fad8c5994be60a7b">a8896663a075a62411bb5095d4322c69af92f13515555639f3f9f4aceff81e91d4d3f46c93b3b6ad89fbe12cead883b2b8833d57ccdae29692146042f39db0d2c295d0b1d28b34a9683d97041626c789ca723876a56ac8bc01e41485a2815d31d58d2c0e7d85f9ca63b957cd4d9202d341041a2fe2b8261aef7df5fb8c1415c5d4e1e91058e8588586077d5a1d8cd7fdbb64fc1ca199708676477d48ceff9d4ab4bd6f788cfaa7f2c512818854193657491ea897f9a8455c235b06be9b3afeae37527ed2326dee4f82143c60402f31e241f7efc870e045f0360ca3cfd661929a4b0f49faa0ae70ddc9bf6852c1533fe4976463356099f259d923c63b6eaefeec9cab060ab84a737cdfb0ae62c49f2d70e4c9021228cb386579d4deac38e6ed96c2057cbdb47141ec8144b74090737b6dd3133d33f55a91287e816f8ce9ff2729f64f2d06dfe4b68493853c7bf5727b7a687d8f94c5cec0983a2954902a2c7f5e4e48d822cf018346b69b6d16789db98e1e34d086bde285fc481e57687f5a63a946c215a38ab9000ad60b7683cac40b450dfab704bb41f3398ee9b6100bad871945f36f8f0f0351d4f5e38c2f14134515637b12adfd6a53911f128a944dbe8edb8409874a20c40986c6780fad9c65d4f912425fe33a9e930cc1267fcde50e2bbeac16bb8e674dc78822477967662cf12e57f87d0ffa35b92731426489d0ff2c5500e00e09c63ef833d5401bea559a92134fe9bb830fde583f8b99906d4e6044d16b474d076b21a72c71083527f4d4d6f96ca16622acd0c33bd1dbee87600c31126823d0fabb1d8b436ed5c358c0233e309a4bad278d951067fd597c2bb58fa7b1f5607d49f8a4c80d089f4ff96d9b6e336c64c48031bc71fa065ca49bda1aa6020a1ee23a0690bb6983879ce9ce784cecef6f77adf5139b64fde18765fd16735ab20b513935e4fd8d8ffd1ce91c0b4f3db61a5f880e16ecf638eecfc366a5de3b1d47f22af968441440824994911f47a134446bf047c20914c88a7c5e8d159f32f18aa2bd9a2e061a74633d0ac1ea2100b8578be7fd75e4dc2b8f659950ff71134a6f0f8773175e653b28e6be6da9ca2c489a56d4bf74b06206d0623f5f10e4c34be99d0f46785c218acd548d8817e96cfc80248e5a7462085a28e548a2ca58fd3e999d66a2d092415af35d3f004bbf467ad19814274d1c409eebbd788d800717015c20558b61db76a297d49a344c26f143dec0d03fff4aa94f36ec2e0f4bd70eca1bf7de15ba3fd45bcc1c2aa8d1f22b0adfb3c0cd68791706d2e89152763bd3f5b7397fa95b331a198a30cd99640d7487a4de4ab066bb0a9d7e0f32edbe446939edbf6f1d1cee85aa020ae436c3f1296523f15df552de1cbb2386b31f16bd4b17defe513ce8f07a3bf6a4886503ee23011d6347b14e1cdc835ac5ee03da35f8a4128491dfc55f64e9144d6459beffb10c00202e63302a3eb607852f1fa7815ca138152f58e7a196a1edde82944c8415a1f4140c94a95cb2aab067a734ee44c68a2aaa278eead720c95cc7ca052d2f228c3056327b5bc3d35c06cc52483dd4992e5cf726dc95e0266b16fea3e9fb10ccdbba0f82e7a8509c016decb6d4d39b525c7a79aef7c839841b0c0b4ff600e66365be8c6f4f4f647c8c3e0c05d5cdb58fa2df4a5ff2666284a828271c4f84318878da890de8ca7de3ddc72097ad2d51e1e4b68fc10f61ad425bd62d521250f6d16dad76f74ad53142bef243df58006c32cc22f84cd0de355cd63dce026a8dc6c360ebc679e63b76ad8fb10a29a97b0901f808bbd962ad0b181a71228c89141d06cccc649aeee7f7cb11594311566d70a1b16f660f6fd5e9c762683944ab5212d79783b63d1d9391d3dd29bd0e03c8acc9e1613626f275fd4d0c91bf075b36252e07b431870526c2b318e0741ba2ac4b82beb53d98c52af4ef4a331dfaccba1aeffd56e08df54010b80c6e855b1f256f0dc1b8cbb551540aa39f485326c57c8c3234f66886383cf4a8b45e98112d57d4b194792df999a1ae775000f0e2ab4ce0f1763b6bbabcc985f9119d8263a40b8e7d78227cac39193652ff6fa6ebe8a08dc574f4d02931733f94b1026155784c9ea6b986beb31e944b1ad827e3df2822634270347a85f5a0cbf652a5b62d503a75975cd35d903e900b91ea074ef47803218675bc681c8a85e6bc26cbfe8725b3e1f83e62d22a22c7ca5ce4fd25b841baa684d00a26be94e683d993443526dab0cd5af8bd1bd41c7e60746fc5491b1cb843dda39b6cb379b4d80b7b240440c18249718b8f7a4eeb9a6bda3516c7fb729b337c940060223fb87b39195a83644f7a830d43b295d3a9889adad0b50eeab349dc8cde3f304cc397c8b4bf6f2ff94c63add8b7df39d69e843d5537defce6f840468f3fbc68064e8efe212b1bd43e73d25be001954e748988811600cb5a41459f0b473d8313f8fa4d225418fee406a6a042feba6c464a0b76171cecd9f496e9e7198d59153290a4dd4b85f0593515289924deccbf0d69d14af169a4d41a4963b961face85377961ee051c80d0698d27e4cdacde7c8a32b5d11fd9de25d3c8793cda52e9eac55b016b0adef029f5adadaa17043cddad3cd20da43cb178218870a6e3236bb45566b64fe1ceffc2df16078bc74c9aabfdade3aee64c1900c75b579ec929383d87f74d3460968adaa8688e5f7276c8d43c8ae7a61abd1441983a14a4367bfd0325e2a21c9948a1c37f20588cd2632ef24ae836cde20087b79f106fc967e6221c5351cb6251e6ede4daad0820f26d8c8733622a2776b3016443455d30ed1e87d7ab93d8d99c0706b2b12e84db8ff208bbdcad39d2c73dffc1f9a265e43c69976d9fab47aedcf21741fbe6fed4287fb7170fa5a58ddcf7e14bcbf7bdc64c2a95c184becce02b13e2b4361829e7ae13106b0cba900f8db286ab8589e145e7d0fb6c199fef5743901fe04bbf541b6c023170db7fdc06153c94e8757d7d84e70468c2131ec15d1a481cca5f73fea4ebc95e23daf520c5bb5a3829846f3acd041001184259a07a52e11581aab21aa3a7436d6585009a14edd5237620211d05b17cdc291d188635c562246ca235cfdf5f8873f8599eb1fb49ddd6490affec18b638aa07d65246bda1431580f62465e66d9ade1f23c266008f4994bfea47293810fdc08dbd864d7b5b15a7033753c7cce37b593e25432dffa07dbebed28eec35a1143013328527942bf1a298fde0b59400d134d1e19e7a2237c3d69f1c153810cb0d5a8909535792d41373b63b456f73737bf46c27acaa3191ed3d62fa5638a611abd474eb88f647f0f26e453e63b8b95ce798ba20938f784e2125363103049e372fc236c1e5d02b98c5b1f5b98f25032054b3fa69a95a1118e8c6b8fb5d89c138891fefa17505f953dfbbaeb14bcac1d6dc09adec667e807f9e3aba5dadd304b14579c5e8ace252223e1cf823cfa56322d40093d9340908a0acdd0807863eaa700d815592ce652577a7cce536c1ce2925eff47a42dd4273b4f968f23269b522ffba</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用yaml</title>
      <link href="/2023/11/28/kubernetes/%E5%B8%B8%E7%94%A8yaml/"/>
      <url>/2023/11/28/kubernetes/%E5%B8%B8%E7%94%A8yaml/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: app-log-logfile</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      project: microservice</span><br><span class="line">      app: nginx-logfile</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        project: microservice</span><br><span class="line">        app: nginx-logfile</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        # 应用容器</span><br><span class="line">        - name: nginx</span><br><span class="line">          image: lizhenliang/nginx-php</span><br><span class="line">          # 将数据卷挂载到日志目录</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: nginx-logs</span><br><span class="line">              mountPath: /usr/local/nginx/logs</span><br><span class="line">          resources:</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 100m</span><br><span class="line">              memory: 100Mi</span><br><span class="line">            limits:</span><br><span class="line">              memory: 500Mi</span><br><span class="line">              cpu: 200m</span><br><span class="line">        # 日志采集器容器</span><br><span class="line">        - name: filebeat</span><br><span class="line">          image: dockerhub.datagrand.com/pangu/filebeat:7.13.2</span><br><span class="line">          # args: [&quot;-c&quot;, &quot;/etc/filebeat.yml&quot;, &quot;-e&quot;]</span><br><span class="line">          resources:</span><br><span class="line">            requests:</span><br><span class="line">              cpu: 100m</span><br><span class="line">              memory: 100Mi</span><br><span class="line">            limits:</span><br><span class="line">              memory: 500Mi</span><br><span class="line">              cpu: 200m</span><br><span class="line">          securityContext:</span><br><span class="line">            runAsUser: 0</span><br><span class="line">          volumeMounts:</span><br><span class="line">            # 挂载filebeat配置文件</span><br><span class="line">            - name: filebeat-config</span><br><span class="line">              mountPath: /usr/share/filebeat/filebeat.yml</span><br><span class="line">              subPath: filebeat.yml</span><br><span class="line">            # 将数据卷挂载到日志目录</span><br><span class="line">            - name: nginx-logs</span><br><span class="line">              mountPath: /usr/local/nginx/logs</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">        - name: datagrand-dockerhub</span><br><span class="line">      # 数据卷共享日志目录</span><br><span class="line">      volumes:</span><br><span class="line">        - name: nginx-logs</span><br><span class="line">          emptyDir: &#123;&#125;</span><br><span class="line">        - name: filebeat-config</span><br><span class="line">          configMap:</span><br><span class="line">            name: filebeat-nginx-config</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: app-log-logfile</span><br><span class="line">spec:</span><br><span class="line">  type: ClusterIP</span><br><span class="line">  ports:</span><br><span class="line">    - port: 80</span><br><span class="line">      protocol: TCP</span><br><span class="line">      targetPort: 80</span><br><span class="line">      # nodePort: 31082</span><br><span class="line">  selector:</span><br><span class="line">    project: microservice</span><br><span class="line">    app: nginx-logfile</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: filebeat-nginx-config</span><br><span class="line"></span><br><span class="line">data:</span><br><span class="line">  # 配置文件保存在ConfigMap</span><br><span class="line">  filebeat.yml: |-</span><br><span class="line">    filebeat.inputs:</span><br><span class="line">      - type: log</span><br><span class="line">        paths:</span><br><span class="line">          - /usr/local/nginx/logs/access.log</span><br><span class="line">        # tags: [&quot;access&quot;]</span><br><span class="line">        fields_under_root: true</span><br><span class="line">        fields:</span><br><span class="line">          project: microservice</span><br><span class="line">          app: nginx</span><br><span class="line"></span><br><span class="line">    setup.ilm.enabled: false</span><br><span class="line">    setup.template.name: &quot;nginx-access&quot;</span><br><span class="line">    setup.template.pattern: &quot;nginx-access-*&quot;</span><br><span class="line"></span><br><span class="line">    output.elasticsearch:</span><br><span class="line">      hosts: [&#x27;172.26.24.59:9207&#x27;]</span><br><span class="line">      username: &quot;elastic&quot;</span><br><span class="line">      password: &quot;datagrand&quot;</span><br><span class="line">      index: &quot;nginx-access-%&#123;+yyyy.MM.dd&#125;&quot;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: busybox</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: busybox</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: busybox</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: busybox</span><br><span class="line">          image: busybox:1.28.4</span><br><span class="line">          command: [&quot;tail&quot;, &quot;-f&quot;, &quot;/dev/null&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongo101</title>
      <link href="/2023/11/02/%E6%95%B0%E6%8D%AE%E5%BA%93/mongo/mongo101/"/>
      <url>/2023/11/02/%E6%95%B0%E6%8D%AE%E5%BA%93/mongo/mongo101/</url>
      
        <content type="html"><![CDATA[<h2 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h2><h3 id="示例一-join-查询"><a href="#示例一-join-查询" class="headerlink" title="示例一: join 查询"></a>示例一: join 查询</h3><h4 id="Test-Data"><a href="#Test-Data" class="headerlink" title="Test Data"></a>Test Data</h4><h5 id="订单数据"><a href="#订单数据" class="headerlink" title="订单数据"></a>订单数据</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="attr">&quot;item&quot;</span> : <span class="string">&quot;almonds&quot;</span>, <span class="attr">&quot;price&quot;</span> : <span class="number">12</span>, <span class="attr">&quot;quantity&quot;</span> : <span class="number">2</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">2</span>, <span class="attr">&quot;item&quot;</span> : <span class="string">&quot;pecans&quot;</span>, <span class="attr">&quot;price&quot;</span> : <span class="number">20</span>, <span class="attr">&quot;quantity&quot;</span> : <span class="number">1</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">3</span>  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="SKU-数据"><a href="#SKU-数据" class="headerlink" title="SKU 数据"></a>SKU 数据</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;almonds&quot;</span>, <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;product 1&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">120</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">2</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;bread&quot;</span>, <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;product 2&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">80</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">3</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;cashews&quot;</span>, <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;product 3&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">60</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">4</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;pecans&quot;</span>, <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;product 4&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">70</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">5</span>, <span class="attr">&quot;sku&quot;</span>: <span class="literal">null</span>, <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;Incomplete&quot;</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">6</span> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202311021502599.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.orders.aggregate([</span><br><span class="line">   &#123;</span><br><span class="line">     $lookup:</span><br><span class="line">       &#123;</span><br><span class="line">         from: &quot;inventory&quot;, </span><br><span class="line">         localField: &quot;item&quot;, </span><br><span class="line">         foreignField: &quot;sku&quot;, </span><br><span class="line">         as: &quot;inventory_docs&quot; </span><br><span class="line">       &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202311021502311.png" alt="image.png"></p><h3 id="示例二：数组-join-，用于查询订单是否还有存货"><a href="#示例二：数组-join-，用于查询订单是否还有存货" class="headerlink" title="示例二：数组 join ，用于查询订单是否还有存货"></a>示例二：数组 join ，用于查询订单是否还有存货</h3><h4 id="Test-Data-1"><a href="#Test-Data-1" class="headerlink" title="Test Data"></a>Test Data</h4><h5 id="订单数据-1"><a href="#订单数据-1" class="headerlink" title="订单数据"></a>订单数据</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="attr">&quot;item&quot;</span> : <span class="string">&quot;MON1003&quot;</span>, <span class="attr">&quot;price&quot;</span> : <span class="number">350</span>, <span class="attr">&quot;quantity&quot;</span> : <span class="number">2</span>, <span class="attr">&quot;specs&quot;</span> :[ <span class="string">&quot;27 inch&quot;</span>, <span class="string">&quot;Retina display&quot;</span>, <span class="string">&quot;1920x1080&quot;</span> ], <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Monitor&quot;</span> &#125;</span><br></pre></td></tr></table></figure><h5 id="SKU-数据-1"><a href="#SKU-数据-1" class="headerlink" title="SKU 数据"></a>SKU 数据</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">1</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;MON1003&quot;</span>, <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Monitor&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">120</span>,<span class="attr">&quot;size&quot;</span> : <span class="string">&quot;27 inch&quot;</span>, <span class="attr">&quot;resolution&quot;</span> : <span class="string">&quot;1920x1080&quot;</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">2</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;MON1012&quot;</span>, <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Monitor&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">85</span>,<span class="attr">&quot;size&quot;</span> : <span class="string">&quot;23 inch&quot;</span>, <span class="attr">&quot;resolution&quot;</span> : <span class="string">&quot;1280x800&quot;</span> &#125;,</span><br><span class="line">   &#123; <span class="attr">&quot;_id&quot;</span> : <span class="number">3</span>, <span class="attr">&quot;sku&quot;</span> : <span class="string">&quot;MON1031&quot;</span>, <span class="attr">&quot;type&quot;</span> : <span class="string">&quot;Monitor&quot;</span>, <span class="attr">&quot;instock&quot;</span> : <span class="number">60</span>,<span class="attr">&quot;size&quot;</span> : <span class="string">&quot;23 inch&quot;</span>, <span class="attr">&quot;display_type&quot;</span> : <span class="string">&quot;LED&quot;</span> &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="mql"><a href="#mql" class="headerlink" title="mql"></a>mql</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    $unwind: &#123;</span><br><span class="line">      path: &quot;$specs&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $lookup: &#123;</span><br><span class="line">      <span class="keyword">from</span>: &quot;inventory&quot;,</span><br><span class="line">      localField: &quot;specs&quot;,</span><br><span class="line">      foreignField: &quot;size&quot;,</span><br><span class="line">      <span class="keyword">as</span>: &quot;inventory_docs&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $<span class="keyword">match</span>: &#123;</span><br><span class="line">      inventory_docs: &#123;</span><br><span class="line">        $ne: [],</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><code>unwind会将数组内的内容拍平生成新的文档(Outputs a new document for each element in a specified array.)</code></p><p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202311021520190.png" alt="image.png"></p><p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202311021525397.png" alt="image.png"></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://www.cnblogs.com/jasonminghao/p/13179629.html">MongoDB 强大查询操作之aggregate - jasonminghao - 博客园</a></li><li><a href="https://www.cnblogs.com/xuliuzai/p/10055535.html">详解MongoDB中的多表关联查询（$lookup） - 东山絮柳仔 - 博客园</a></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://www.mongodb.com/docs/manual/indexes/?utm_source=compass&utm_medium=product#single-field">mongo文档</a></li><li><a href="https://www.mongodb.com/docs/compass/current/import-export/">mongo schema 概念</a></li><li><a href="https://developer.aliyun.com/article/933338">MongoDB系列–深入理解MongoDB聚合（Aggregation ）-阿里云开发者社区</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mongo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux</title>
      <link href="/2023/10/31/linux/tmux/"/>
      <url>/2023/10/31/linux/tmux/</url>
      
        <content type="html"><![CDATA[<h2 id="Tmux-Install"><a href="#Tmux-Install" class="headerlink" title="Tmux Install"></a>Tmux Install</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> sudo yum install http://galaxy4.net/repo/galaxy4-release-7-current.noarch.rpm</span><br><span class="line">sudo yum install tmux</span><br></pre></td></tr></table></figure><h2 id="tmux-plugin-file"><a href="#tmux-plugin-file" class="headerlink" title="tmux plugin file"></a>tmux plugin file</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"># Config reload</span><br><span class="line">bind r source-file ~/.tmux.conf \; display &quot;Tmux config updated&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----- Prefix -----</span><br><span class="line"></span><br><span class="line">unbind-key C-b</span><br><span class="line">set-option -g prefix C-s</span><br><span class="line">bind-key C-s send-prefix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----- Panes -----</span><br><span class="line"></span><br><span class="line"># Key bindings for switching panes</span><br><span class="line">bind -n M-h select-pane -L # left</span><br><span class="line">bind -n M-l select-pane -R # right</span><br><span class="line">bind -n M-k select-pane -U # up</span><br><span class="line">bind -n M-j select-pane -D # down</span><br><span class="line"></span><br><span class="line"># Key bindings for creating panes</span><br><span class="line">#bind-key s split-window -h # horizontal</span><br><span class="line">#bind-key v: split-window -v # verticle</span><br><span class="line"></span><br><span class="line"># Seperator colors for current pane</span><br><span class="line">set-option -g pane-active-border-style fg=blue # foreground</span><br><span class="line"># set-option -g pane-active-border-style bg=white # background</span><br><span class="line"></span><br><span class="line"># Seperator color for other panes</span><br><span class="line">set-option -g pane-border-style fg=cyan # foreground</span><br><span class="line"># set-option -g pane-border-style bg=white # background</span><br><span class="line"></span><br><span class="line"># Key bindings for closing panes</span><br><span class="line">#bind-key 0 kill-pane</span><br><span class="line"></span><br><span class="line"># Key bindings for adjusting panes size</span><br><span class="line">bind-key K resize-pane -U # up</span><br><span class="line">bind-key J resize-pane -D # down</span><br><span class="line">bind-key L resize-pane -R # right</span><br><span class="line">bind-key H resize-pane -L # left</span><br><span class="line">bind-key m resize-pane -Z # maximize</span><br><span class="line"></span><br><span class="line"># Key bindings for navigating between panes</span><br><span class="line">bind-key k select-pane -U # up</span><br><span class="line">bind-key j select-pane -D # down</span><br><span class="line">bind-key l select-pane -R # right</span><br><span class="line">bind-key h select-pane -L # left</span><br><span class="line"></span><br><span class="line"># ----- Status Bar -----</span><br><span class="line"></span><br><span class="line"># Colors for the status bar</span><br><span class="line">set -g status-bg &#x27;black&#x27; # background</span><br><span class="line">set -g status-fg &#x27;white&#x27; # foreground</span><br><span class="line"></span><br><span class="line"># Contents on the right of the status bar</span><br><span class="line">set -g status-right &quot;#[fg=magenta,bold] #&#123;prefix_highlight&#125;#[fg=red,bold]CPU: #&#123;cpu_percentage&#125; #[fg=blue]Battery: #&#123;battery_percentage&#125; #[fg=green]%a %Y:%m:%d %H:%M:%S &quot;</span><br><span class="line">set -g status-interval 1 # refresh every second</span><br><span class="line">set -g status-right-length 100 # maximum length for the right content of the status bar</span><br><span class="line"></span><br><span class="line"># Contents on the left of the status bar</span><br><span class="line">set -g status-left &quot;#[fg=yellow,bold] ❐ #S   &quot; # show the current session</span><br><span class="line">set -g status-left-length 8 # maximum length for the left content of the status bar</span><br><span class="line"></span><br><span class="line"># Position of the status bar</span><br><span class="line"># (top/bottom)</span><br><span class="line">set -g status-position bottom</span><br><span class="line"></span><br><span class="line"># Position of the window status</span><br><span class="line"># (left/centre/right)</span><br><span class="line">set -g status-justify left</span><br><span class="line"></span><br><span class="line"># Color of the status bar message</span><br><span class="line"># bg: background / fg: foreground</span><br><span class="line">set-option -g message-style bg=blue,fg=white</span><br><span class="line"></span><br><span class="line"># Key binding for toggle status bar</span><br><span class="line">#bind-key s set status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----- Windows -----</span><br><span class="line"></span><br><span class="line"># Status format for the current window</span><br><span class="line">setw -g window-status-current-format &#x27;#[fg=blue,bold]✔ #[fg=white,bold]#W&#x27;</span><br><span class="line"></span><br><span class="line"># Status format for other windows</span><br><span class="line">setw -g window-status-format &#x27;#[fg=white]#I #W&#x27;</span><br><span class="line"></span><br><span class="line"># Seperator between each window names</span><br><span class="line">set -wg window-status-separator &#x27;  &#x27;</span><br><span class="line"></span><br><span class="line"># Show alert if other window changes?</span><br><span class="line">setw -g monitor-activity off</span><br><span class="line"></span><br><span class="line"># Should automatically rename other windows based on the current program?</span><br><span class="line">set -g automatic-rename on</span><br><span class="line"></span><br><span class="line"># Key binding for closing windows</span><br><span class="line">bind-key q kill-window</span><br><span class="line"></span><br><span class="line"># Key binding for switching windows</span><br><span class="line">bind-key C-h previous-window</span><br><span class="line">bind-key C-l next-window</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----- More options -----</span><br><span class="line"></span><br><span class="line"># History limit for scrolling back</span><br><span class="line">set -g history-limit 5000</span><br><span class="line"></span><br><span class="line"># Use mouse to switch windows, adjust panes, etc...</span><br><span class="line">set -g mouse on</span><br><span class="line"></span><br><span class="line"># True color support</span><br><span class="line"># (True color support only shows effect if your terminal emulator supports true color)</span><br><span class="line">set -g default-terminal xterm-256color</span><br><span class="line">set-option -ga terminal-overrides &quot;,*256col*:Tc&quot;</span><br><span class="line"></span><br><span class="line"># Delay after escape key is passed into the program</span><br><span class="line">set -s escape-time 0</span><br><span class="line"></span><br><span class="line"># Use vi styled keys for scrolling &amp; copying</span><br><span class="line">set-window-option -g mode-keys vi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----- Plugins -----</span><br><span class="line"></span><br><span class="line"># Tmux plugin manager</span><br><span class="line"># (REQUIRED FOR USING PLUGINS)</span><br><span class="line"># (do not remove)</span><br><span class="line">set -g @plugin &#x27;tmux-plugins/tpm&#x27;</span><br><span class="line">set -g @plugin &#x27;tmux-plugins/tmux-sensible&#x27;</span><br><span class="line"></span><br><span class="line"># Built-in plugins of p-z-l/magicTmux</span><br><span class="line"># (recommended for better experience)</span><br><span class="line">set -g @plugin &#x27;tmux-plugins/tmux-battery&#x27;</span><br><span class="line">set -g @plugin &#x27;tmux-plugins/tmux-cpu&#x27;</span><br><span class="line">set -g @plugin &#x27;tmux-plugins/tmux-prefix-highlight&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># tmux-prefix_highlight configs</span><br><span class="line">set -g @prefix_highlight_fg &#x27;magenta&#x27; # default is &#x27;colour231&#x27;</span><br><span class="line">set -g @prefix_highlight_bg &#x27;black&#x27; # default is &#x27;colour04&#x27;</span><br><span class="line"></span><br><span class="line"># Other plugins choices :</span><br><span class="line"># (&lt;prefix&gt; + I to install/upgrade plugins, tmux will freeze for several seconds during install)</span><br><span class="line"></span><br><span class="line"># Display online status on your status bar:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-online-status&#x27;</span><br><span class="line"></span><br><span class="line"># Restoring windows when starting tmux:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-resurrect&#x27;</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-continuum&#x27;</span><br><span class="line"></span><br><span class="line"># Easy logging and screen capturing for Tmux.</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-logging&#x27;</span><br><span class="line"></span><br><span class="line"># A plugin that enhances tmux search:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-copycat&#x27;</span><br><span class="line"></span><br><span class="line"># Tmux key bindings for quick opening of a highlighted file or url:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-open&#x27;</span><br><span class="line"></span><br><span class="line"># Tmux plugin for copying to system clipboard. Works on OSX, Linux and Cygwin:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-yank&#x27;</span><br><span class="line"></span><br><span class="line"># Tmux plugin to monitor upload and download speed of one or all interfaces:</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-net-speed&#x27;</span><br><span class="line"></span><br><span class="line"># Plugin that counts files on a specific mail directory</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-maildir-counter&#x27;</span><br><span class="line"></span><br><span class="line"># A sidebar with the directory tree for the current path. Tries to make tmux more IDE like.</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-sidebar&#x27;</span><br><span class="line"></span><br><span class="line"># Quickly open any url on your terminal window!</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-urlview&#x27;</span><br><span class="line"></span><br><span class="line"># Quickly open any path on your temrinal window in your $EDITOR of choice!</span><br><span class="line"># set -g @plugin &#x27;jbnicolai/tmux-fpp&#x27;</span><br><span class="line"></span><br><span class="line"># Lightweight tmux utils for manipulating sessions</span><br><span class="line"># set -g @plugin &#x27;tmux-plugins/tmux-sessionist&#x27;</span><br><span class="line"></span><br><span class="line"># Initialize TMUX plugin manager</span><br><span class="line"># (REQUIRED FOR USING PLUGINS)</span><br><span class="line"># (keep this line at the very bottom of tmux.conf)</span><br><span class="line">run -b &#x27;~/.tmux/plugins/tpm/tpm&#x27;</span><br><span class="line">set -g @cpu_temp_format &quot;%2.0f&quot;</span><br><span class="line">set -g @cpu_temp_unit &quot;C&quot;</span><br><span class="line">set -g status-right &#x27;CPU: #&#123;cpu_icon&#125; #&#123;cpu_percentage&#125; TEMP:  #&#123;cpu_temp&#125; | %a %h-%d %H:%M &#x27;</span><br><span class="line"></span><br><span class="line">run-shell ~/.tmux/plugins/tmux-cpu/cpu.tmux</span><br></pre></td></tr></table></figure><h1 id="Tmux-插件"><a href="#Tmux-插件" class="headerlink" title="Tmux 插件"></a>Tmux 插件</h1><h3 id="install-plugins-manager"><a href="#install-plugins-manager" class="headerlink" title="install plugins manager]"></a><a href="https://github.com/tmux-plugins/tpm">install plugins manager</a>]</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm</span><br></pre></td></tr></table></figure><h4 id="Add-Plugins"><a href="#Add-Plugins" class="headerlink" title="Add Plugins"></a>Add Plugins</h4><ol><li>Add new plugin to ~/. Tmux. Conf with set -g @plugin ‘…’</li><li>Press prefix + I (capital i, as in Install) to fetch the plugin.</li></ol><ul><li><a href="https://github.com/tmux-plugins">tmux-plugins · GitHub</a></li></ul><h3 id="List-pulgins"><a href="#List-pulgins" class="headerlink" title="List pulgins"></a>List pulgins</h3><blockquote><p>Press prefix + U</p></blockquote><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux</title>
      <link href="/2023/10/04/linux/linux%20%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98/"/>
      <url>/2023/10/04/linux/linux%20%E6%8C%82%E8%BD%BD%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c52f86462486ddf80145930a85a4af8dfe25a43b9f82e4aef143c124b2a7a9e1">a8896663a075a62411bb5095d4322c699a045991c4bca83378b9b0275aeafd25525bc6243be8a0d453eaa25b3d98cbef71e2f81fdca76087decb6078d7a06c95b4c61d32d32473a044a19de56e1e8e4bb5ce81f25b008f8c79cd89b843d16adf284d81835801e3bdf1b78a53d6ecb0a1164a35e4c2fce62357abffe856420c0361c1d324d3ee164f271e27e8b80b013a02f10dfdf1399b71ba997c92aae323ed2b2ed9e5d455a81536a768bc4794ad2b3e9579e809a6c74048d092e862f323c8364b213b605d14ffccc7ba09bdf95924f2712097b4fb156ce98153d374816bcfbcea26af3c443e0d3f9ec926ebce9193a218d81546001958c00e3a2e1ff617fe968f7960dd2a3a2c0e990650d740bbc84e08c51f31153b2503f74fc57144b52726a369353455d8e13f75bb687bdba1678d07d21e3f63b02dc7b69f2f801b1b03314c8370dd891a998d90367d94109736721982e629706d37ecafea0c237958937a461b9ae2f75865bdd8003a2f63d78a2ffc568ce77a7cedf5ae68954f7db1d00177d2dc1345a10e7f32d75b4c81d7dddb28a8bb1d5392dc530038b10fc137db18718eb532f64351da6618c02285a258cfd12a1d84b7cd7ee958a1d7010e439434d5d6c9441d8d07db56d7004983e3dfda6332e4d21a9dec1a87d35f4aaf97c2a7136d34323fb02567f604c7a26ce941f0978e45dffecb24acd3b9817863c08074e2f0869e0e5b40e5cc054a224b370c48d1ef10dc631002dba2e56d61cc89c1d04b2e18ad493dfb2520d1b2e0af9efbf5150ef64d472b258fd6f6ada0ef5fea6205c608c57654cb0feda9096ca8a359e19a4ee396e153259290ba1041ca7e7869316ad5ed95b7b8f0cbe97a2d1a9b39bb618735f3794174fea354536c4fc0976bde12d16688aa56320802791217094b5513dfe532bc6828a23347fd0f8e9c7a6f67c692b6c38e6b9dff78602b4405e431b2691365d18da2166b1e52a7435c5fa0ac2a2dec9fa92305b1ceb0bf845dacfd6e66e59aad7bde1c02b585de6d8f6d8b0982c8be5b18c025239ee7c77f6e56ad99021457b812ac3039cb1b6ab679c82f033d2bf4a76c9dd140198373eb54b05652f7b296715c6bcf85a96b204f8c181a1e3c20780f8b31ee29ec8971e95519a00ab487243bcd8158697f7e907f89d44128831d4f611abd31d63cbb8de60b6ec5bb70fbe34d5a12afc404adaaaf2b81012cd42ea91cc14452d5638a8216c229e6a768f0ebac739168070a697b5057b4b63e162f15f0ada75fac851091db3d0929ecdec785222b517f86952a09d65bc63ee6cdcddcd1929c943bb3a98e41c82861981ee57683c22c795dad61fde5880500c8866b663fb9759aa2e592549bcbbccfde5515b3f45725195e51fbfb7eed4f7c12279feb2089895c7c2cdeb016bb9e6f8e3f47c52235d5a20296c3045b1fdedac0be8eea1b5cc64dda42c116c85c2fef3e8bf2dc498c53a2a3ad83b6fcbd506922d6d1a631c640bf14ea61e02a8f32a768633812f89485e45508ed9628a30c33283d02338b025b93a0bef9a13552313c297204a126e5d37e58e9facd77ace13945a48bae33c5fb3bb4c2823a8fbccd753dad7e493319f6326c5d4e7d028561694d999b604615ec0867006f43930c8b2e3b5421f0ee5c11d44ad05bb333bad716cb7b9e71c3d148d68d919a75b1d8861581067e2bfc85c9c8f2db2d216b2f8fcf4e0b7dbc199207faf920d9f4d4b3a641ee19a549f088a54c1875b1ce0655b98509f107ae9048fbc03b02955ae4a085e779aae796d81a641a1bd91680858c22f55c5030d5e378aeb3abf23d73fd11b3eb27a90c718250d7775f2baf7e5c860444221ae09f5329107f57de8b7a579c6ceef6da83d286c680a9b049a11d17d1fd08103038ed81489a5fc7f8868fc06c0ce746b7188b7e62f59985f56e38d72f7f4df3476e07579600faff676749e3e365723a454492418120804ad03831fea0e55df4e8e956e1514eec44115b2e321916c98441c883ecc0f4c8862805f38329588b3bf426c57a28d050aed86dfdd76903958adcdbe6ec78be69295cf6acb0d5852402ed34f078e2a6217bfd45aa81db29402a8df2492c0e7fbdde25ba8f7f6d47f9991bfb23417c3233996607d2c98b7593011b3f9c6d360a9f1226e43f08ca5608b63c61d83958b36a06c5e0cffead25f954c75bba2bcb8bef32839bb157183276976090f25157301c0073f47448785434f125a849251bd1ab67541b32a3256ae7476178b12ea4efbf0c39d1f363edae9d7ccae6c0b279e0c4053285f5055b5ca5ddd6258517e1356de6094b05763aceb5f6f1ce21ee4d328727f116bb27de90750a3d89c3cb7d22c163e83c765f835fdab95a7bba0a9a156502099982d19cb442a2dd447b62727cdb17eff5627dad4c6361008c0a4af6921348b87771addf21ee3f1f6c1f27dd84f85aa8637b13a8b9db15e32d46a67b700670fdd76c8ffd5c2554a1586b6903876c326da0e6e5d476bc723d3d024227dc3b7150b341f4bdba3793d1c8174cab97b1438a946e92b4643055c49bef21a18b56dedc081b807a4005d9baf8491b3069df8d6e8876b9256a7a66ceba86e078b231814465de9e782ddad570e401034b56cebb907f39e538abbfe35e9dbaf0f6c371f6888659679a18afad64cab8929fad6230119c7c89670ff17f82be7ccd368358cdc741c4d537a8975a39ce0735c25c749671b44dc57fd5fe885e2769c31ff4700b5d22dbe83c79833eee432144449b987254574a723942f926b391bf8d0d829eed75fcf055bdbe69fb2c64ba78767c208a0735e333a01d7743e716a8b1bc68fd391ce736d151e504bc7c9b2abd301ebc1787f54725f280e3f4c2ad11abe7bacb2e8b30a5700900c24499d35082f8b0b46c6003ab9b50c0f47f70bff9a70c47c84cf7f835a0aec5009d0c6964aa2bee4f199ff65755f57f7c453fa49833431d3ecefb93a426e23f5022096e42e7ec7a4c33b3e1c0b0a59541a5c2e7372b61987030193bd7ab770da989d9357187abb0ee6e7798df153d755b96eafee1b3f3a8db37c4c12cdcfcfa6cf4cf57caae99b2cbb19d37b7564a50b1231754c1cf592aba888f1aae9e529c905b1d5466de97b58f0dc7fb574f51011d4fa7b2ff1828795b0d40abcec6799479773e4890bb449b2ed2a3a8ea99daf831c6fb07d97918b24c1bbae4a2c29a9339e34e8a1a8400df0fa57ac28dd31ec9dcb0ed5fc854c97d88c9ad941479545d39c7f61b4013d348261905c67eeda4adffd1eed760da9099ff826e23543cf7f708198d5c9b73675160e430c9351ace4200d921ecedb3e1d969368e1f716e2f85f9cda56553ebfe4a6792457e2d326c47e86f458e05a4adcc7f8c33cc84fd9cf1ea9e8da54d4974cd23a2c2576d2dfdeb695ab877025b27776d537761e8ed57bfeef298b1e873a77148e86df16b42cfb40f7f4d6cf5bd3b48e6ca233ec78e16225e19b85d0d18a55c5d3a86afa4b8da5a75c08871e441bc7571d7632f6f3568272c294dbf9ede7a9ea013764609d32dcdcf377c25593bd3000918fe824cfa740aad64c3c1171f4d6bb718e46b241930c24efc2d91ed49cd0d91e220b8206d99343b2bf93c65a4fbf36ef9fb61d77283e68be06b0f0c1fbbd7a72f3c43fbe34584</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubsphere踩坑</title>
      <link href="/2023/10/01/kubernetes/kubsphere%E8%B8%A9%E5%9D%91/"/>
      <url>/2023/10/01/kubernetes/kubsphere%E8%B8%A9%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h1 id="邮件无法配置"><a href="#邮件无法配置" class="headerlink" title="邮件无法配置"></a>邮件无法配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">caBundle=$(kubectl get validatingWebhookConfiguration notification-manager-validating-webhook -o jsonpath=<span class="string">&#x27;&#123;.webhooks[0].clientConfig.caBundle&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cat &gt; /tmp/patch.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  conversion:</span></span><br><span class="line"><span class="string">    webhook:</span></span><br><span class="line"><span class="string">      clientConfig:</span></span><br><span class="line"><span class="string">        caBundle: $&#123;caBundle&#125;</span></span><br><span class="line"><span class="string">        service:</span></span><br><span class="line"><span class="string">          namespace: kubesphere-monitoring-system</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">              </span><br><span class="line">kubectl patch crd configs.notification.kubesphere.io --<span class="built_in">type</span>=merge --patch-file /tmp/patch.yaml</span><br><span class="line">kubectl patch crd receivers.notification.kubesphere.io --<span class="built_in">type</span>=merge --patch-file /tmp/patch.yaml</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://ask.kubesphere.io/forum/d/8130-notification-manager/11">notification-manager - KubeSphere 开发者社区</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Containerd</title>
      <link href="/2023/09/13/kubernetes/Containerd/"/>
      <url>/2023/09/13/kubernetes/Containerd/</url>
      
        <content type="html"><![CDATA[<h2 id="containerd-设置私有镜像仓库"><a href="#containerd-设置私有镜像仓库" class="headerlink" title="containerd 设置私有镜像仓库"></a>containerd 设置私有镜像仓库</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>langchain 与 llama分割</title>
      <link href="/2023/08/21/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/langchain%20%E4%B8%8E%20llama%E5%88%86%E5%89%B2/"/>
      <url>/2023/08/21/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/langchain%20%E4%B8%8E%20llama%E5%88%86%E5%89%B2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e94af98e90faea587d6265b1d3704a75f1d29a501db1ed00f584e09b5278684e">c196cafda8389b7d2f2d99a9cfcc9506b3f1aadc88dc45a61d6a502a4672ff8d2a2bc3e9c9e120ffb6efb1604b0791496b0c88dcafe9ca3ed94ea7181235638220823e6ec999fa594bc1df9e341f379d332d6772ad3c35bca19ffb8e0d5f29bc73301f24d436033cd5e61756daa4cfd3b1bf67ad0adfe153d0f9c797f273207786d2ae0c9b9e7a261c0d448b139a7b760318f11830a90005a2036062447833395e381c521d2f59f36325842e48d4ba2d3d698092913034242a58333990bc650b3cfa8c3cb4962040fbe95086f94e0ca976ea2f9eccb7b2c7b00caf641a4c0d8265f6622e6eec82bc1218f26d6e78c4b871016a82b8983350fe1be88128098b996e92b73a52596f4a93c154280c572b0066c6771629fe5f0da684109bd1ee09317f75cc1dbf70294578a38882ee3f0256dc82d4339e50f246f2fdab989cd69867e35984bde917fedfdf38bc7e5baae48a3b96dde167bdf54bef429e6bf849cd3455c8a6c45d5c09e6a26d0c453422c3cea6f750e790580ab4be2160abdc5faf2dec3b22c974453218ce297682f99f116bce477fc813498f48d867be05c488aeb7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 私人 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jupter</title>
      <link href="/2023/08/20/python/jupter/"/>
      <url>/2023/08/20/python/jupter/</url>
      
        <content type="html"><![CDATA[<h3 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a>BUG</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;jupyter.debugJustMyCode&quot;: false</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pydantic</title>
      <link href="/2023/08/12/python/pydantic/"/>
      <url>/2023/08/12/python/pydantic/</url>
      
        <content type="html"><![CDATA[<h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><h3 id="1-泛型原生实例"><a href="#1-泛型原生实例" class="headerlink" title="1 . 泛型原生实例"></a>1 . 泛型原生实例</h3><pre><code>IS = TypeVar(&quot;IS&quot;, bound=IndexStruct) </code></pre><p> 声明一个泛型变量 IS，它应该是 IndexStruct 类或 IndexStruct 类的子类。这样，在使用 IS 类型变量时，可以确保它是与 IndexStruct 类相关的类型。</p><h3 id="2-泛型-pydantic-中使用"><a href="#2-泛型-pydantic-中使用" class="headerlink" title="2.  泛型 pydantic 中使用"></a>2.  泛型 pydantic 中使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">from typing import Generic, TypeVar, Optional, List</span><br><span class="line"></span><br><span class="line">from pydantic import BaseModel, validator, ValidationError</span><br><span class="line">from pydantic.generics import GenericModel</span><br><span class="line"></span><br><span class="line">DataT = TypeVar(&#x27;DataT&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Error(BaseModel):</span><br><span class="line">    code: int</span><br><span class="line">    message: str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DataModel(BaseModel):</span><br><span class="line">    numbers: List[int]</span><br><span class="line">    people: List[str]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Response(GenericModel, Generic[DataT]):</span><br><span class="line">    data: Optional[DataT]</span><br><span class="line">    error: Optional[Error]</span><br><span class="line"></span><br><span class="line">    @validator(&#x27;error&#x27;, always=True)</span><br><span class="line">    def check_consistency(cls, v, values):</span><br><span class="line">        if v is not None and values[&#x27;data&#x27;] is not None:</span><br><span class="line">            raise ValueError(&#x27;must not provide both data and error&#x27;)</span><br><span class="line">        if v is None and values.get(&#x27;data&#x27;) is None:</span><br><span class="line">            raise ValueError(&#x27;must provide data or error&#x27;)</span><br><span class="line">        return v</span><br></pre></td></tr></table></figure><p><code>Response[int]</code> 通过泛型定义来控制类型实例的时候数据的数据类型</p><h3 id="1-要从-GenericModel-继承而不替换实例，类还必须继承自-typing-Generic"><a href="#1-要从-GenericModel-继承而不替换实例，类还必须继承自-typing-Generic" class="headerlink" title="1 要从 GenericModel 继承而不替换实例，类还必须继承自 typing.Generic:"></a>1 要从 GenericModel 继承而不替换实例，类还必须继承自 <code>typing.Generic:</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from typing import TypeVar, Generic</span><br><span class="line">from pydantic.generics import GenericModel</span><br><span class="line"></span><br><span class="line">TypeX = TypeVar(&#x27;TypeX&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class BaseClass(GenericModel, Generic[TypeX]):</span><br><span class="line">    X: TypeX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ChildClass(BaseClass[TypeX], Generic[TypeX]):</span><br><span class="line">    # Inherit from Generic[TypeX]</span><br><span class="line">    pass</span><br><span class="line"># Replace TypeX by int</span><br><span class="line">print(ChildClass[int](X=1))</span><br><span class="line">#&gt; X=1</span><br></pre></td></tr></table></figure><p><code>DO More</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from typing import TypeVar, Generic</span><br><span class="line">from pydantic.generics import GenericModel</span><br><span class="line"></span><br><span class="line">TypeX = TypeVar(&#x27;TypeX&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class BaseClass(GenericModel, Generic[TypeX]):</span><br><span class="line">    X: TypeX</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssl</title>
      <link href="/2023/08/11/linux/ssl/"/>
      <url>/2023/08/11/linux/ssl/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Berico-Technologies/CMF-AMQP-Configuration.git</span><br><span class="line">$ cd CMF-AMQP-Configuration/ssl/</span><br><span class="line"># Greyfoss 为自定义的证书签发机构名称，该脚本会生成一个ca目录，存储证书颁发机构的信息以及签发的证书</span><br><span class="line">$ sh setup_ca.sh Greyfoss</span><br><span class="line"># 生成服务端公钥和私钥 rabbit-server为生成的密钥前缀  123456为该秘钥自定义的密码</span><br><span class="line">$ sh make_server_cert.sh rabbit-server 123456</span><br><span class="line"># 生成客户端公钥和私钥 </span><br><span class="line">$ sh create_client_cert.sh rabbit-client 123456</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/yjw123456/article/details/118609080">RabbitMQ配置SSL_rabbitmq ssl_愤怒的可乐的博客-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>poetry</title>
      <link href="/2023/07/28/python/poetry/"/>
      <url>/2023/07/28/python/poetry/</url>
      
        <content type="html"><![CDATA[<h2 id="Poetry-配置"><a href="#Poetry-配置" class="headerlink" title="Poetry 配置"></a>Poetry 配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">poetry config --list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">poetry config virtualenvs.in-project true #在工程目录下面创建</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Poetry-加速"><a href="#Poetry-加速" class="headerlink" title="Poetry 加速"></a>Poetry 加速</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">poetry source add -d  pip  http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Poetry-加包"><a href="#Poetry-加包" class="headerlink" title="Poetry 加包"></a>Poetry 加包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">poetry add pre-commit -d </span><br><span class="line"># -d 只加到开发环境</span><br><span class="line">poetry add flask-boot-cli --source=dg # 指定源</span><br></pre></td></tr></table></figure><h2 id="Poetry-环境安装"><a href="#Poetry-环境安装" class="headerlink" title="Poetry 环境安装"></a>Poetry 环境安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">poetry add pre-commit -d </span><br><span class="line"># -d 只加到开发环境</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="poetry-发包"><a href="#poetry-发包" class="headerlink" title="poetry 发包"></a>poetry 发包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">poetry build</span><br><span class="line">poetry publish -r DataGrandNexus -u yechanggui -p Y3vMTvC06KQiNpH5eibN</span><br></pre></td></tr></table></figure><h2 id="pyenv"><a href="#pyenv" class="headerlink" title="pyenv"></a>pyenv</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">pyenv -h </span><br><span class="line">Usage: pyenv &lt;command&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Some useful pyenv commands are:</span><br><span class="line">   activate    Activate virtual environment</span><br><span class="line">   commands    List all available pyenv commands</span><br><span class="line">   deactivate   Deactivate virtual environment</span><br><span class="line">   doctor      Verify pyenv installation and development tools to build pythons.</span><br><span class="line">   exec        Run an executable with the selected Python version</span><br><span class="line">   global      Set or show the global Python version(s)</span><br><span class="line">   help        Display help for a command</span><br><span class="line">   hooks       List hook scripts for a given pyenv command</span><br><span class="line">   init        Configure the shell environment for pyenv</span><br><span class="line">   install     Install a Python version using python-build</span><br><span class="line">   latest      Print the latest installed or known version with the given prefix</span><br><span class="line">   local       Set or show the local application-specific Python version(s)</span><br><span class="line">   prefix      Display prefixes for Python versions</span><br><span class="line">   rehash      Rehash pyenv shims (run this after installing executables)</span><br><span class="line">   root        Display the root directory where versions and shims are kept</span><br><span class="line">   shell       Set or show the shell-specific Python version</span><br><span class="line">   shims       List existing pyenv shims</span><br><span class="line">   uninstall   Uninstall Python versions</span><br><span class="line">   update      Update pyenv, its plugins including the list of available versions</span><br><span class="line">   --version   Display the version of pyenv</span><br><span class="line">   version     Show the current Python version(s) and its origin</span><br><span class="line">   version-file   Detect the file that sets the current pyenv version</span><br><span class="line">   version-name   Show the current Python version</span><br><span class="line">   version-origin   Explain how the current Python version is set</span><br><span class="line">   versions    List all Python versions available to pyenv</span><br><span class="line">   virtualenv   Create a Python virtualenv using the pyenv-virtualenv plugin</span><br><span class="line">   virtualenv-delete   Uninstall a specific Python virtualenv</span><br><span class="line">   virtualenv-init   Configure the shell environment for pyenv-virtualenv</span><br><span class="line">   virtualenv-prefix   Display real_prefix for a Python virtualenv version</span><br><span class="line">   virtualenvs   List all Python virtualenvs found in `$PYENV_ROOT/versions/*&#x27;.</span><br><span class="line">   whence      List all Python versions that contain the given executable</span><br><span class="line">   which       Display the full path to an executable</span><br><span class="line"></span><br><span class="line">See `pyenv help &lt;command&gt;&#x27; for information on a specific command.</span><br><span class="line">For full documentation, see: https://github.com/pyenv/pyenv#readme</span><br></pre></td></tr></table></figure><h3 id="查看-虚拟环境列表"><a href="#查看-虚拟环境列表" class="headerlink" title="查看 虚拟环境列表"></a>查看 虚拟环境列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv version</span><br><span class="line">pyenv virtualenvs</span><br></pre></td></tr></table></figure><h3 id="使用虚拟环境"><a href="#使用虚拟环境" class="headerlink" title="使用虚拟环境"></a>使用虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv local 3.9.7</span><br><span class="line">pyenv shell 3.7.5</span><br></pre></td></tr></table></figure><h3 id="Poetry-pyenv-联动"><a href="#Poetry-pyenv-联动" class="headerlink" title="Poetry  pyenv 联动"></a>Poetry  pyenv 联动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">poetry env use 3.8.18  #会自动创建虚拟环境</span><br><span class="line"> poetry install 安装包</span><br></pre></td></tr></table></figure><h3 id="Poetry-conda-联动"><a href="#Poetry-conda-联动" class="headerlink" title="Poetry conda 联动"></a>Poetry conda 联动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://install.python-poetry.org |python</span><br><span class="line">export PATH=&quot;/data/adpt/.local/bin:$PATH&quot;</span><br><span class="line">virtualenvs.create=true</span><br></pre></td></tr></table></figure><h3 id="pre-commt"><a href="#pre-commt" class="headerlink" title="pre-commt"></a>pre-commt</h3><h4 id="vscode-配置自动格式化"><a href="#vscode-配置自动格式化" class="headerlink" title="vscode 配置自动格式化"></a>vscode 配置自动格式化</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;gitlens.advanced.messages&quot;: &#123;</span><br><span class="line">    &quot;suppressGitVersionWarning&quot;: true,</span><br><span class="line">    &quot;suppressLineUncommittedWarning&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;git.ignoreLegacyWarning&quot;: true,</span><br><span class="line">  &quot;workbench.editorAssociations&quot;: &#123;</span><br><span class="line">    &quot;*.ipynb&quot;: &quot;jupyter-notebook&quot;,</span><br><span class="line">    &quot;*.pdf&quot;: &quot;pdf.preview&quot;,</span><br><span class="line">    &quot;*.csv&quot;: &quot;default&quot;,</span><br><span class="line">    &quot;*.md&quot;: &quot;default&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;terminal.integrated.inheritEnv&quot;: false,</span><br><span class="line">  &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;,</span><br><span class="line">  &quot;diffEditor.ignoreTrimWhitespace&quot;: false,</span><br><span class="line">  &quot;editor.minimap.enabled&quot;: false,</span><br><span class="line">  &quot;editor.suggestSelection&quot;: &quot;first&quot;,</span><br><span class="line">  &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,</span><br><span class="line">  &quot;search.followSymlinks&quot;: false,</span><br><span class="line">  &quot;terminal.integrated.gpuAcceleration&quot;: &quot;no&quot;,</span><br><span class="line">  &quot;vs-kubernetes&quot;: &#123;</span><br><span class="line">    &quot;vscode-kubernetes.helm-path.mac&quot;: &quot;/Users/yechanggui/.vs-kubernetes/tools/helm/darwin-amd64/helm&quot;,</span><br><span class="line">    &quot;vscode-kubernetes.kubectl-path.mac&quot;: &quot;/Users/yechanggui/.vs-kubernetes/tools/kubectl/kubectl&quot;,</span><br><span class="line">    &quot;vscode-kubernetes.kubectl-path-linux&quot;: &quot;/root/.local/state/vs-kubernetes/tools/kubectl/kubectl&quot;,</span><br><span class="line">    &quot;vscode-kubernetes.helm-path-linux&quot;: &quot;/root/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm&quot;,</span><br><span class="line">    &quot;vscode-kubernetes.helm-path-mac&quot;: &quot;/Users/yechanggui/.vs-kubernetes/tools/helm/darwin-amd64/helm&quot;,</span><br><span class="line">    &quot;vscode-kubernetes.minikube-path-linux&quot;: &quot;/root/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.largeFileOptimizations&quot;: false,</span><br><span class="line">  &quot;docker.containers.groupBy&quot;: &quot;Networks&quot;,</span><br><span class="line">  &quot;notebook.cellToolbarLocation&quot;: &#123;</span><br><span class="line">    &quot;default&quot;: &quot;right&quot;,</span><br><span class="line">    &quot;jupyter-notebook&quot;: &quot;left&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.renderWhitespace&quot;: &quot;none&quot;,</span><br><span class="line">  &quot;editor.acceptSuggestionOnEnter&quot;: &quot;smart&quot;,</span><br><span class="line">  &quot;bookmarks.sideBar.expanded&quot;: true,</span><br><span class="line">  &quot;explorer.confirmDelete&quot;: false,</span><br><span class="line">  &quot;[python]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">    &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">      &quot;source.fixAll.ruff&quot;: true,</span><br><span class="line">      &quot;source.organizeImports.ruff&quot;: true,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;editor.formatOnType&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;isort.args&quot;: [</span><br><span class="line">    &quot;--profile&quot;,</span><br><span class="line">    &quot;black&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;editor.inlineSuggest.enabled&quot;: true,</span><br><span class="line">  &quot;github.copilot.enable&quot;: &#123;</span><br><span class="line">    &quot;*&quot;: true,</span><br><span class="line">    &quot;yaml&quot;: true,</span><br><span class="line">    &quot;plaintext&quot;: true,</span><br><span class="line">    &quot;markdown&quot;: true,</span><br><span class="line">    &quot;python&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;vscode-office.autoTheme&quot;: true,</span><br><span class="line">  &quot;cSpell.userWords&quot;: [</span><br><span class="line">    &quot;arango&quot;,</span><br><span class="line">    &quot;arangodb&quot;,</span><br><span class="line">    &quot;Arrango&quot;,</span><br><span class="line">    &quot;caozhi&quot;,</span><br><span class="line">    &quot;datagrand&quot;,</span><br><span class="line">    &quot;dgfs&quot;,</span><br><span class="line">    &quot;KBQA&quot;,</span><br><span class="line">    &quot;langchain&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;files.exclude&quot;: &#123;</span><br><span class="line">    &quot;**/__pycache__&quot;: true,</span><br><span class="line">    &quot;**/.git&quot;: false</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;liveServer.settings.donotShowInfoMsg&quot;: true,</span><br><span class="line">  &quot;docker.containers.label&quot;: &quot;Compose Project Name&quot;,</span><br><span class="line">  &quot;editor.tabCompletion&quot;: &quot;on&quot;,</span><br><span class="line">  &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;, // 设置编辑器的默认格式化工具为 prettier</span><br><span class="line">  &quot;[javascript]&quot;: &#123;</span><br><span class="line">    // 根据语言设置其对应的默认格式化工具</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;, // 设置 javascript 的默认格式化工具为 prettier</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true // 保存的时候自动格式化</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;notebook.lineNumbers&quot;: &quot;on&quot;,</span><br><span class="line">  &quot;notebook.output.textLineLimit&quot;: 1000,</span><br><span class="line">  &quot;jupyter.experiments.optInto&quot;: [],</span><br><span class="line">  &quot;security.workspace.trust.enabled&quot;: false,</span><br><span class="line">  &quot;[json]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;[jsonc]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;workbench.colorCustomizations&quot;: &#123;&#125;,</span><br><span class="line">  &quot;remote.SSH.useLocalServer&quot;: false,</span><br><span class="line">  &quot;remote.SSH.remotePlatform&quot;: &#123;</span><br><span class="line">    &quot;tenxun&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;hd010-yecg&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;xuni&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;waisan&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;hd010&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;hd011&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;hd011-yecg&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;shengyang-217&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;dl3&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;dc-deploy&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;dl4&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;master-deploy&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;master&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;hd012&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;waisan-public&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;qianyi&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;ford-pro&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;master-k8s&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;pangu-dev&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;fiks&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;work-station&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;dg-workstation&quot;: &quot;linux&quot;,</span><br><span class="line">    &quot;work-station-ipv4&quot;: &quot;linux&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;update.showReleaseNotes&quot;: false,</span><br><span class="line">  &quot;update.mode&quot;: &quot;manual&quot;,</span><br><span class="line">  &quot;hediet.vscode-drawio.resizeImages&quot;: null,</span><br><span class="line">  &quot;workbench.colorTheme&quot;: &quot;Monokai&quot;,</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  &quot;python.analysis.autoImportCompletions&quot;: true,</span><br><span class="line">  &quot;jupyter.askForKernelRestart&quot;: false,</span><br><span class="line">  &quot;debug.javascript.breakOnConditionalError&quot;: true,</span><br><span class="line">  &quot;redhat.telemetry.enabled&quot;: true,</span><br><span class="line">  &quot;terminal.integrated.defaultProfile.linux&quot;: &quot;zsh&quot;,</span><br><span class="line">  &quot;python.linting.pylintArgs&quot;: [</span><br><span class="line">    &quot;--max-line-length=80&quot;,</span><br><span class="line">    &quot;--disable=W0142,W0403,W0613,W0232,R0903,R0913,C0103,R0914,C0304,F0401,W0402,E1101,W0614,C0111,C0301&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pre-commit run --all-files # 检查所有文件</span><br><span class="line">pre-commit install # 初始化</span><br><span class="line">pre-commit install --hook-type pre-commit --hook-type commit-msg --config ~/.pre-commit-config.yaml --overwrite # 通过 ~/.pre-commit-config.yaml文件初始化</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="pip-包打包"><a href="#pip-包打包" class="headerlink" title="pip 包打包"></a>pip 包打包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">## 方法一 发tar包</span><br><span class="line">python setup.py sdist build # 同时跑build</span><br><span class="line">python setup.py sdist upload</span><br><span class="line">python setup.py sdist upload -r repo </span><br><span class="line"></span><br><span class="line">## 方法二 发wheel包</span><br><span class="line">python setup.py bdist_wheel --universal</span><br><span class="line">python setup.py bdist_wheel upload</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="poetry-export"><a href="#poetry-export" class="headerlink" title="poetry export"></a>poetry export</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">poetry export -f requirements.txt --without-urls  --without-hashes |awk &#x27;&#123; print $1 &#125;&#x27; FS=&#x27;;&#x27; &gt; requirements.txt </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Poetry-下载慢"><a href="#Poetry-下载慢" class="headerlink" title="Poetry 下载慢"></a>Poetry 下载慢</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://zhuanlan.zhihu.com/p/110721747">Python包管理之poetry基本使用 - 知乎</a><br><a href="https://www.cnblogs.com/liuzhongkun/p/16797346.html#tid-rhf2JB">强大的包管理器Poetry - Kenny_LZK - 博客园</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux</title>
      <link href="/2023/07/17/linux/linux%20%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2023/07/17/linux/linux%20%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="系统监控"><a href="#系统监控" class="headerlink" title="系统监控"></a>系统监控</h2><h3 id="ps-按照内存排序-显示前十个-现实内存用-mb-ps"><a href="#ps-按照内存排序-显示前十个-现实内存用-mb-ps" class="headerlink" title="ps 按照内存排序 显示前十个 现实内存用 mb #ps"></a>ps 按照内存排序 显示前十个 现实内存用 mb #ps</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ps aux --sort=-%mem | head -n 20 | awk &#x27;&#123;print $0, &quot;Memory Usage (MB): &quot;($4*$6)/1024&#125;&#x27; </span><br></pre></td></tr></table></figure><h3 id="docker-内存使用统计。-docker"><a href="#docker-内存使用统计。-docker" class="headerlink" title="docker 内存使用统计。 #docker"></a>docker 内存使用统计。 #docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stats --no-stream --format &quot;table &#123;&#123;.Name&#125;&#125;\t&#123;&#123;.MemUsage&#125;&#125;\t&#123;&#123;.MemPerc&#125;&#125;&quot; | sort -k 2 -hr | head -n 11 | awk &#x27;&#123;print $0, &quot;Memory Usage (MB): &quot;($2~/([0-9.]+[GMKB])/?($2~/([0-9.]+G)/?($2*1024):( $2~/([0-9.]+M)/?$2:($2/1024))):$2)&#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步</title>
      <link href="/2023/07/15/python/%E5%BC%82%E6%AD%A5/"/>
      <url>/2023/07/15/python/%E5%BC%82%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<hr><p>created: 2023-07-15 T23:44:25 (UTC +08:00)<br>Tags: []<br>source: <a href="https://wiki.datagrand.com/pages/viewpage.action?pageId=23334434">https://wiki.datagrand.com/pages/viewpage.action?pageId=23334434</a><br>Author: 张越</p><hr><h1 id="浅谈-Python-异步编程-张越-达观-WIKI"><a href="#浅谈-Python-异步编程-张越-达观-WIKI" class="headerlink" title="浅谈 Python 异步编程 - 张越 - 达观 WIKI"></a>浅谈 Python 异步编程 - 张越 - 达观 WIKI</h1><blockquote><h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>同步在计算机领域中的两种不同的解释:</p></blockquote><hr><h2 id="浅谈-Python-异步编程"><a href="#浅谈-Python-异步编程" class="headerlink" title="浅谈 Python 异步编程"></a>浅谈 Python 异步编程</h2><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>同步在计算机领域中的两种不同的解释:</p><ul><li>  指相关的事务对象必须同时存在或发生 - 举例: 电话</li><li>  多个相关事务的发生必须等待前一个事务的完成</li><li>  需要理解的部分: 同步意味着有序</li></ul><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>异步在计算机领域中有两种不同的解释:</p><ul><li>  指两个或两个以上的对象或事件不同时存在或发生 - 举例: 邮件</li><li>  多个相关事物的发生无需等待其前一个事物的完成</li><li>  需要理解的部分: 异步意味着无序</li></ul><h3 id="阻塞"><a href="#阻塞" class="headerlink" title="阻塞"></a>阻塞</h3><ul><li>  程序未得到所需计算资源时被挂起的状态。</li><li>  程序在等待某个操作完成期间，自身无法继续干别的事情，则称该程序在该操作上是阻塞的。</li><li>  常见的阻塞形式有：网络 I/O 阻塞、磁盘 I/O 阻塞、用户输入阻塞等。</li><li>  阻塞是无处不在的，包括 CPU 切换上下文时，所有的进程都无法真正干事情，它们也会被阻塞。（如果是多核 CPU 则正在执行上下文切换操作的核不可被利用。）</li></ul><h3 id="非阻塞"><a href="#非阻塞" class="headerlink" title="非阻塞"></a>非阻塞</h3><ul><li>  程序在等待某操作过程中，自身不被阻塞，可以继续运行干别的事情，则称该程序在该操作上是非阻塞的。</li><li>  非阻塞并不是在任何程序级别、任何情况下都可以存在的。</li><li>  仅当程序封装的级别可以囊括独立的子程序单元时，它才可能存在非阻塞状态。</li><li>  非阻塞的存在是因为阻塞存在，正因为某个操作阻塞导致的耗时与效率低下，我们才要把它变成非阻塞的。</li></ul><h2 id="Python-中异步的发展历程"><a href="#Python-中异步的发展历程" class="headerlink" title="Python 中异步的发展历程"></a>Python 中异步的发展历程</h2><p>在前面的预备知识中, 我们了解到了阻塞一般是网络 I/O 阻塞、磁盘 I/O 阻塞、用户输入阻塞等。I/O 阻塞是最常见的阻塞形式。 在 Linux 中, I/O 操作常见的有 5 种形式: 同步阻塞 I/O, 同步非阻塞 I/O, 多路复用 I/O,<br>信号驱动式 I/O, 异步 I/O</p><h3 id="同步阻塞-I-O"><a href="#同步阻塞-I-O" class="headerlink" title="同步阻塞 I/O"></a>同步阻塞 I/O</h3><p>同步阻塞 I/O 是最简单也是最符合逻辑的方式, 做一件事情只需要一步一步执行即可，无需考虑其他的问题。</p><p>同步阻塞 I/O 的操作流程如下:</p><p><img src="https://git.datagrand.com/zhangyue/evolutionary_path_of_python_asynchronous/raw/master/images/%E5%90%8C%E6%AD%A5%E9%98%BB%E5%A1%9E.png"></p><ol><li> 当用户程序进行 read 调用的时候，内核就已经开始了 IO 操作，进行数据的准备，比如说等待 socket 包的传输，再或者等待文件内容的加载。</li><li> 当内核完成了数据准备之后，会将准备好的数据由内核缓冲区拷贝到用户缓冲区（内存）中，然后告知用户程序，I/O 操作完成。</li></ol><p>Python 代码模拟同步阻塞 I/O:</p><h4 id="单进程运行"><a href="#单进程运行" class="headerlink" title="单进程运行"></a>单进程运行</h4><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>socket</code></p><p><code>def</code> <code>blocking_send ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>sock.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Close ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>resp</code></p><p><code>def</code> <code>sync_block_test ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>i </code><code>in</code> <code>range</code><code>(</code><code>50</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>blocking_send ()</code></p></div></td></tr></tbody></table><p>执行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【sync_block_test】运行时间：【29.26126503944397】秒</code></p></div></td></tr></tbody></table><h4 id="多进程运行"><a href="#多进程运行" class="headerlink" title="多进程运行"></a>多进程运行</h4><p>上面的运行方式花费了 29 秒, 既然每次请求都会造成阻塞, 那么如果我们多开几个进程来同时运行这些程序肯定要比单个进程等待效果要更好吧?</p><p>我们改进一下上面的代码, 通过多进程来运行:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>socket</code></p><p><code>from</code> <code>concurrent </code><code>import</code> <code>futures</code></p><p><code>def</code> <code>blocking_send ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>sock.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Close ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>resp</code></p><p><code>def</code> <code>multi_process_test ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>worker </code><code>=</code> <code>50</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>with futures.ProcessPoolExecutor (worker) as executor:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>future_tasks </code><code>=</code> <code>&#123;executor.Submit (blocking_send) </code><code>for</code> <code>_ </code><code>in</code> <code>range</code><code>(worker)&#125;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>[fut.Result () </code><code>for</code> <code>fut </code><code>in</code> <code>future_tasks]</code></p></div></td></tr></tbody></table><p>运行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【multi_process_test】运行时间：【0.8772151470184326】秒</code></p></div></td></tr></tbody></table><p>喔, 和单一进程运行相比, 有了一个质的飞跃, 从 29 秒缩减到 0.8 秒, 感觉还不错。但是当真正遇到高并发的场景，以及进行复杂的任务处理的时候， 你就会发现 速度会明显的慢下来，而且 cpu 的占用率极高。 因为当进程数超过 cpu<br>核心数的时候， 就需要不停地进程的切换，而这一过程极为耗费 cpu 。</p><h4 id="多线程运行"><a href="#多线程运行" class="headerlink" title="多线程运行"></a>多线程运行</h4><p>既然进程的切换极为消耗 cpu ,那我们是否可以使用线程, 将资源的切换固定在一个进程内?</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>socket</code></p><p><code>from</code> <code>concurrent </code><code>import</code> <code>futures</code></p><p><code>def</code> <code>blocking_send ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>sock.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Close ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>resp</code></p><p><code>def</code> <code>multi_thread_test ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>worker </code><code>=</code> <code>50</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>with futures.ThreadPoolExecutor (worker) as executor:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>future_tasks </code><code>=</code> <code>&#123;executor.Submit (blocking_send) </code><code>for</code> <code>_ </code><code>in</code> <code>range</code><code>(worker)&#125;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>[fut.Result () </code><code>for</code> <code>fut </code><code>in</code> <code>future_tasks]</code></p></div></td></tr></tbody></table><p>执行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【multi_thread_test】运行时间：【0.47679591178894043】秒</code></p></div></td></tr></tbody></table><p>只消耗了 0.47 秒， 结果是符合预期的。但是由于 GIL 的存在，依旧存在有很多的问题。 Python 的多线程只能在一个核心上运行，并不能发挥出多核的 优势。但是为什么依旧达到了预期的效果呢？因为在进行 send 和 recv<br>操作的时候， Python 释放了 GIL 锁， 让其他的线程也有了可以执行的机会。但是由于 线程使用的是竞争机制，每一个线程都有相同的运行机会。这并不利于流程的控制。因为你永远不知道下一刻谁会运行。</p><p>到此， 同步阻塞 I/O 的发展可以说是摸到天花板了。那我们是否可以换一种思路，既然阻塞耗费时间，那我们就使用非阻塞 I/O 这样不就不会耗费时间了？</p><h3 id="同步非阻塞-I-O"><a href="#同步非阻塞-I-O" class="headerlink" title="同步非阻塞 I/O"></a>同步非阻塞 I/O</h3><p>既然同步阻塞的方式走不通, 那我们是否可以换一种思路，既然阻塞耗费时间，那我们就使用非阻塞 I/O 这样是不是就不会耗费时间了？</p><p>同步非阻塞的 I/O 操作流程如下:</p><p><img src="https://git.datagrand.com/zhangyue/evolutionary_path_of_python_asynchronous/raw/master/images/%E5%90%8C%E6%AD%A5%E9%9D%9E%E9%98%BB%E5%A1%9E.png"></p><ol><li> 在用户发起 read 调用之后，如果内核处于数据准备的阶段，则直接返回，此时需要用户不停的进行轮询，查看数据是否准备完成。</li><li> 当用户的进程查询到数据准备完成之后，用户进程会进入 blocking 阻塞状态，直到内核将准备好的数据复制到用户缓冲区（内存）中。</li></ol><p>Python 代码模拟同步非阻塞 I/O:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>socket</code></p><p><code>def</code> <code>unblocking_send ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>BlockingIOError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>True</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>break</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>OSError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>True</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>sock.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>resp </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Close ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>break</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>OSError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>resp</code></p><p><code>def</code> <code>sync_unblock_test ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>i </code><code>in</code> <code>range</code><code>(</code><code>50</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>unblocking_send ()</code></p></div></td></tr></tbody></table><p>运行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【sync_unblock_test】运行时间：【27.857917070388794】秒</code></p></div></td></tr></tbody></table><p>运行结果居然花费了 27 秒 !!! 和同步阻塞状态几乎没有区别。明明在 connect 的时候已经变成非阻塞了啊? 这是为什么? 确实, 在 try 中进行 connect 之后, 就可以继续向下执行。但是由于 send 并不知道<br>Connect 是否准备完成，就需要 while 循环一直不停地尝试发送， 直到 connect 准备完成 recv 同理。 虽然 connect 与 recv 确实不再阻塞了， cpu 确实是空下来去做别的事情了，但是做得就是不停地循环，<br>查询 connect 的准备状态，并没有去做有意义的事情。 而且代码还更加复杂，既然如此，为什么还要用非阻塞？还不如同步阻塞呢。</p><h3 id="I-O-多路复用"><a href="#I-O-多路复用" class="headerlink" title="I/O 多路复用"></a>I/O 多路复用</h3><p>I/O 多路复用原理:</p><p><img src="https://git.datagrand.com/zhangyue/evolutionary_path_of_python_asynchronous/raw/master/images/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8.png"></p><ol><li> 进行 select/epoll 系统调用，查询可以读的连接。内核会查询所有 select 的可查询 socket 列表，当任何一个 socket 中的数据准备好了（不是准备完成），select 就会返回。</li><li> 用户线程获得了目标连接后，发起 read 系统调用，用户线程阻塞。内核开始复制数据。它就会将数据从内核缓冲区，拷贝到用户缓冲区（用户内存），然后返回结果。</li></ol><p>Python 代码实现:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>select</code></p><p><code>import</code> <code>socket</code></p><p><code>writeable_array </code><code>=</code> <code>[]</code></p><p><code>readable_array </code><code>=</code> <code>[]</code></p><p><code>results </code><code>=</code> <code>[]</code></p><p><code>def</code> <code>loop ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>True</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>readable, writeable, exceptional </code><code>=</code> <code>select.Select (readable_array, writeable_array, [])</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>writeable:&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>write_func </code><code>in</code> <code>writeable:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>write_func.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>writeable_array.Remove (write_func)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>readable_array.Append (write_func)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>readable:&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>read_func </code><code>in</code> <code>readable:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>read_func.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>results.Append (chunk)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>readable_array.Remove (read_func)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>not</code> <code>writeable_array </code><code>and</code> <code>not</code> <code>readable_array:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>break</code></p><p><code>def</code> <code>test_multi_io ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>i </code><code>in</code> <code>range</code><code>(</code><code>50</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>writeable_array.Append (sock)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>loop ()</code></p></div></td></tr></tbody></table><p>运行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【test_multi_io】运行时间：【13.757395029067993】秒</code></p></div></td></tr></tbody></table><p>看起来确实能够达到效果, 但是由于阻塞依旧存在, 而且 select 的效率不高, 所以并不是最优解。</p><h3 id="信号驱动式-I-O"><a href="#信号驱动式-I-O" class="headerlink" title="信号驱动式 I/O"></a>信号驱动式 I/O</h3><p>既然 I/O 多路复用的效果并不是特别理想, 我们是否还能从其他的方向入手, 解决阻塞的问题? 内核能够准备数据, 那我们是否可以让内核主动通知, 而不是自己去查询 的方式来避免阻塞呢? 于是就有了信号驱动式 I/O</p><p>信号驱动式 I/O 原理:</p><p><img src="https://git.datagrand.com/zhangyue/evolutionary_path_of_python_asynchronous/raw/master/images/%E4%BF%A1%E5%8F%B7%E9%A9%B1%E5%8A%A8%E5%BC%8FIO.png" alt="信号驱动式IO"></p><ol><li> 用户进程预先告知内核、并向内核注册一个信号处理函数，然后用户进程返回。这一步骤不阻塞。</li><li> 当内核数据就绪时会发送一个信号给进程，用户进程便在信号处理函数中调用 IO 读取数据到用户空间。这一步还是阻塞的。</li></ol><h3 id="异步-I-O"><a href="#异步-I-O" class="headerlink" title="异步 I/O"></a>异步 I/O</h3><p>很快我们就发现, 信号驱动式 I/O 只是通知我们准备就绪了, 还是要我们自己去进行操作，效率还是比较低的。就好比我雇了个人帮我排队买票，排到他了，他跑过来<br>告诉我，到我买票了。这显然不符合逻辑，所以是不是可以再优化一下，让内核不仅仅是通知我们，还直接帮我们把数据准备完成？</p><p>异步 I/O 的原理:</p><p><img src="https://git.datagrand.com/zhangyue/evolutionary_path_of_python_asynchronous/raw/master/images/%E5%BC%82%E6%AD%A5IO.png" alt="异步IO"></p><ol><li> 当用户线程调用了 read 系统调用，立刻就可以开始去做其它的事，用户线程不阻塞。</li><li> 内核开始了 IO 的第一个阶段：准备数据。当内核一直等到数据准备完成，它就会将数据从内核缓冲区，拷贝到用户缓冲区（用户内存）。</li><li> 内核会给用户线程发送一个信号（signal），或者回调用户线程注册的回调接口，告诉用户线程 read 操作完成了。</li><li> 用户线程读取用户缓冲区的数据，完成后续的业务操作。</li></ol><h4 id="Callback-回调式"><a href="#Callback-回调式" class="headerlink" title="Callback 回调式"></a>Callback 回调式</h4><p>通过上面的原理, 大家也都看明白了, 就是向内核注册回调函数, 让内核去调用注册好了的回调函数。</p><p>Python 代码实现:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p><p>45</p><p>46</p><p>47</p><p>48</p><p>49</p><p>50</p><p>51</p><p>52</p><p>53</p><p>54</p><p>55</p><p>56</p><p>57</p><p>58</p><p>59</p><p>60</p><p>61</p><p>62</p><p>63</p><p>64</p><p>65</p><p>66</p><p>67</p><p>68</p><p>69</p><p>70</p><p>71</p><p>72</p><p>73</p><p>74</p><p>75</p><p>76</p><p>77</p><p>78</p><p>79</p><p>80</p><p>81</p><p>82</p><p>83</p><p>84</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>socket</code></p><p><code>from</code> <code>selectors </code><code>import</code> <code>DefaultSelector, EVENT_READ, EVENT_WRITE</code></p><p><code>todo_count </code><code>=</code> <code>10</code></p><p><code>stopped </code><code>=</code> <code>False</code></p><p><code>selector </code><code>=</code> <code>DefaultSelector ()</code></p><p><code>class</code> <code>Foo:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.sock </code><code>=</code> <code>None</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.response </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>fetch (</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.sock.Setblocking (</code><code>False</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>BlockingIOError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (</code><code>self</code><code>.sock.Fileno (), EVENT_WRITE, </code><code>self</code><code>.request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>request (</code><code>self</code><code>, key, mask):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (key. Fd)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>b</code><code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (key. Fd, EVENT_READ, </code><code>self</code><code>.read_response)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>read_response (</code><code>self</code><code>, key, mask):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>global</code> <code>stopped, todo_count</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>self</code><code>.sock.Recv (</code><code>4096</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>chunk:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.response </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>else</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (key. Fd)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>todo_count </code><code>-</code><code>=</code> <code>1</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>not</code> <code>todo_count:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>stopped </code><code>=</code> <code>True</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>self</code><code>.response</code></p><p><code>def</code> <code>loop ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>not</code> <code>stopped:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>events </code><code>=</code> <code>selector.Select ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>event_key, event_mask </code><code>in</code> <code>events:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>event_func </code><code>=</code> <code>event_key. Data</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>res </code><code>=</code> <code>event_func (event_key, event_mask)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>res:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code><code>(res)</code></p><p><code>def</code> <code>test_callback ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>url </code><code>in</code> <code>range</code><code>(todo_count):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>foo </code><code>=</code> <code>Foo ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>foo.Fetch ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>loop ()</code></p></div></td></tr></tbody></table><p>运行结果:</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>【test_callback】运行时间：【0.4802360534667969】秒</code></p></div></td></tr></tbody></table><p>可以看的到, 它的运行结果只有 0.48 秒, 达到了多线程的效果, 而且并不会受到太多 GIL 锁的影响, 具体谁在执行, 下一步该做什么也变成了可控的。</p><h4 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h4><p>虽然我们通过 epoll + select 的方式简单的实现了 回调函数，达到了异步编程的效果。 但是在实际的开发过程中，由于回调式编程存在的问题, 我们需要自主的去 编排控制流程。比如：</p><p>有两个函数, 函数 b 的运行依赖于函数 a 的结果, 在正常的编程流程中, 我们只需要:</p><p>即可, 但是如果使用回调式编程, 那我们就需要在 a 执行结束的时候, 执行函数 b</p><table><tbody><tr><td><p>1</p></td><td><div title="Hint: double-click to select code"><p><code>do_func_a (do_func_b (...))</code></p></div></td></tr></tbody></table><p>这个过程需要我们自己来编排流程, 简直就是回调地狱。 但倘若只是编排调用流程也还好, 并非不可接受, 但是当我们在实际的开发环境中, 我们还需要考虑:</p><ul><li>  如果回调函数执行不正常该如何？</li><li>  如果回调里面还要嵌套回调怎么办？要嵌套很多层怎么办？</li><li>  如果嵌套了多层，其中某个环节出错了会造成什么后果？</li><li>  如果有个数据需要被每个回调都处理怎么办？</li><li>  …</li></ul><p>通过这些问题, 我们清楚地认识到异步编程的困难：异步任务何时执行完毕？接下来要对异步调用的返回结果做什么操作？ 其实这一部分我们已经通过上面的 <code>事件循环 + 回调事件</code> 的方式解决了,<br>但是回调会让程序变得很复杂。是否有方法能够避免其缺点?</p><p>仔细的思考一下, 我们就能发现, 其实异步最困难的不是了解自己何时执行完毕, 而是让程序知道自己现在在做什么, 已经做了什么, 未来要做什么。 因为程序要不停地在各个回调之间来回切换, 如何让程序知道自己的状态?</p><p>像之前的方法, 虽然我们能够完成任务, 但是由于是链式回调, 可能存在有 <strong>栈撕裂</strong><br>的问题。</p><p>这个时候，我们就想到了协程, 协作式多任务编程。每个任务之间可以进行相互通知, 还都保留有自己的状态, 这不就是完美地解决方案吗?</p><h4 id="基于生成器的协程"><a href="#基于生成器的协程" class="headerlink" title="基于生成器的协程"></a>基于生成器的协程</h4><p>早期的 Python 开发人员发现了一个问题, Python 中有一种特殊的对象 — 生成器 (Generator) 它的特点和协程很像, 每一次迭代之间会暂停执行, 进行下一次执行的时候并不会丢失先前的状态。</p><p>为了支持使用生成器构建简单的协程, Guido van Rossum, Phillip J. Eby 等人提出了 <a href="https://www.python.org/dev/peps/pep-0342/">PEP342</a><br>这次提案添加了 <code>yield</code> 语法，生成器可以通过 <code>yield</code> 暂停执行和向外返回数据。也可以通过 <code>send ()</code> 向内发送数据, 通过 <code>throw ()</code> 向内抛出异常, 终止生成器的运行。</p><p>下面, 我们一起来改写一下之前回调式的方法：</p><h5 id="Future-类"><a href="#Future-类" class="headerlink" title="Future 类"></a>Future 类</h5><p>首先, 因为我们要避免使用回调的方式, 所以我们需要来设计一个对象, 方便我们掌控异步回调结果。</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></td><td><div title="Hint: double-click to select code"><p><code>class</code> <code>Future:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.result </code><code>=</code> <code>None</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>._callbacks </code><code>=</code> <code>[]</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>add_done_callback (</code><code>self</code><code>, func):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>._callbacks.Append (func)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>set_result (</code><code>self</code><code>, result):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.result </code><code>=</code> <code>result</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>func </code><code>in</code> <code>self</code><code>._callbacks:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>func (</code><code>self</code><code>)</code></p></div></td></tr></tbody></table><p>因为异步意味着并不知道何时返回, 而且我们不使用回调的方式了, 如何来存放返回结果? 我们可以设置一个未来对象 Future, 通过未来对象来存放返回结果。该对象中有一个 <code>result</code> 属性, 还有一个 <code>set_result</code> 方法,<br>而且此方法会执行事先给 <code>future</code> 对象添加的回调, 而这个回调是通过 <code>add_down_callback</code> 方法进行添加的。</p><h5 id="重构-Foo-类"><a href="#重构-Foo-类" class="headerlink" title="重构 Foo 类"></a>重构 Foo 类</h5><p>在此之后，我们需要重构一下我们的 Foo 代码:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p></td><td><div title="Hint: double-click to select code"><p><code>class</code> <code>Foo:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.response </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>fetch (</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Setblocking (</code><code>False</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>on_connect ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.set_result (</code><code>None</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>on_read ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.set_result (sock.Recv (</code><code>4096</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect ((</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>BlockingIOError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>Future ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (sock.Fileno (), EVENT_WRITE, on_connect)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>yield</code> <code>f</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (sock.Fileno ())</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code><code>.encode (</code><code>"ascii"</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>global</code> <code>todo_count, stopped</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>True</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>Future ()&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (sock.Fileno (), EVENT_READ, on_read)&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>yield</code> <code>f&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (sock.Fileno ())&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>chunk:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.response </code><code>+</code><code>=</code> <code>chunk</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>else</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>todo_count </code><code>-</code><code>=</code> <code>1</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>not</code> <code>todo_count:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>stopped </code><code>=</code> <code>True</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>break</code></p></div></td></tr></tbody></table><h5 id="Task-类"><a href="#Task-类" class="headerlink" title="Task 类"></a>Task 类</h5><p>通过重构, 我们已经通过 yield 的方式替换掉了原来的方式, 但是大家都知道, yield 需要先使用 <code>next ()</code> 方法迭代或者使用 <code>send ()</code> 启动之后才能够 遇到 yield 之后暂停。 那我们如何让 <code>fetch ()</code><br>方法在 yield 之后继续恢复执行? 这是一个困扰人的问题。我们决定遵循单一职责的原则, 我们来定义一个 Task 类, 专门用于恢复生成器的执行以及管理生成器的状态。</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></td><td><div title="Hint: double-click to select code"><p><code>class</code> <code>Task:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>, coroutine):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.coroutine </code><code>=</code> <code>coroutine&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>Future ()&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.set_result (</code><code>None</code><code>)&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.step (f)&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>step (</code><code>self</code><code>, future):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>next_future </code><code>=</code> <code>self</code><code>.coroutine.Send (future. Result)&nbsp;</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>StopIteration:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>next_future. Add_done_callback (</code><code>self</code><code>.step)&nbsp;</code></p></div></td></tr></tbody></table><p>Task 中传入了 <code>Coroutine</code> 对象, 这里控制的是 <code>fetch</code> 生成器, <code>Task</code> 对象在初始化的时候会执行一次 <code>step</code> 方法, 此时会将初始化的结果 <code>None</code> 发送给 <code>fetch</code>,<br>目的就是为了启动执行。当 <code>send</code> 完成了之后, 我们就得到了下一次执行的 <code>Future</code> 对象, 为其添加 <code>step</code> 回调, 所以 <code>add_done_callback</code> 并不是用来执行业务逻辑的, 而是为了让 <code>fetch</code><br>再次将结果传回到 <code>step</code> 中。</p><p>返回来看 <code>fetch</code> 方法内， 这里包含了所有的业务逻辑代码, 包含了如何发送如何读取响应, 而且 <code>selector</code> 的注册回调相当简单, 就是给 <code>future</code> 结果绑定值。两个 <code>yield</code> 对象返回的都是 <code>Future</code><br>对象, 返回给 <code>Task. Step</code> , 这样就将 <code>Task</code>、<code>Future</code>、<code>Coroutine</code> 对象巧妙地连接在了一起。</p><h5 id="重构-loop"><a href="#重构-loop" class="headerlink" title="重构 loop"></a>重构 loop</h5><p>但是现在还存在一个问题，当我们仔细的查看代码, 当 <code>Task</code> 对象初始化之后, 进入 fetch 开始执行, 但是到了 Foo 第一次 <code>yield</code> 之后就停下了, 该如何继续执行呢? 这个时候我们需要对 loop 再进行重构一下。</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></td><td><div title="Hint: double-click to select code"><p><code>def</code> <code>loop ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>not</code> <code>stopped:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>events </code><code>=</code> <code>selector.Select ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>event_key, event_mask </code><code>in</code> <code>events:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>event_func </code><code>=</code> <code>event_key. Data</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>event_func ()&nbsp;</code></p></div></td></tr></tbody></table><p>此时的 loop 已经完全进化成了一个工具人的存在了, 我是谁? 我在哪? 我在做什么? 完全不需要再关心了, 它要做的事情就是不停地干活, 保证自己不停下来就行了。</p><h4 id="通过-yield-from-改进基于生成器的协程"><a href="#通过-yield-from-改进基于生成器的协程" class="headerlink" title="通过 yield from 改进基于生成器的协程"></a>通过 yield from 改进基于生成器的协程</h4><p>如果说 <code>fetch</code> 的容错能力要更强，业务功能也需要更完善，怎么办？而且技术处理的部分（socket 相关的）和业务处理的部分（请求与返回数据的处理）混在一起。</p><p>很多东西都是可以进一步抽象的, 比如 创建 socket 连接, 接收 response 请求。但是这些地方都已经有生成器了, 再次抽离也需要使用生成器。而且 <code>fetch</code> 本身也是个生成器。 如何才能在 生成器里玩生成器？为此<br>Python 官方引入了新的语法。</p><p>Yield from 是 Python 3.3 新引入的语法（PEP 380）。它主要解决的就是在生成器里玩生成器不方便的问题。它有两大主要功能：</p><ol><li> 让嵌套生成器不必通过循环迭代 yield，而是直接 yield from</li><li> 在子生成器和原生成器的调用者之间打开双向通道，两者可以直接通信。</li></ol><p>有了新的语法, 我们来将 socket 连接部分的代码抽离出来:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></td><td><div title="Hint: double-click to select code"><p><code>def</code> <code>connect (sock: socket. Socket, address: </code><code>tuple</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>Future ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Setblocking (</code><code>False</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>try</code><code>:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Connect (address)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>except</code> <code>BlockingIOError:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>pass</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>on_connect ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.set_result (</code><code>None</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (sock.Fileno (), EVENT_WRITE, on_connect)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>yield</code> <code>from</code> <code>f</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (sock.Fileno ())</code></p></div></td></tr></tbody></table><p>抽离完连接部分的代码后, 我们再来抽离 recv 相关的代码:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></td><td><div title="Hint: double-click to select code"><p><code>def</code> <code>read (sock):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>_read (_sock):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f </code><code>=</code> <code>Future ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>on_read ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>f.set_result (_sock.Recv (</code><code>4096</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>print</code><code>(f.result)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Register (_sock.Fileno (), EVENT_READ, on_read)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>yield</code> <code>from</code> <code>f</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>selector.Unregister (_sock.Fileno ())</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>response </code><code>=</code> <code>[b'']</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>yield</code> <code>from</code> <code>_read (sock)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>while</code> <code>chunk:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>response.Append (chunk)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>chunk </code><code>=</code> <code>yield</code> <code>from</code> <code>_read (sock)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>b''.Join (response)</code></p></div></td></tr></tbody></table><p>重构完成之后, 我们来使用 yield from 来对 Foo 类进行重构:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></td><td><div title="Hint: double-click to select code"><p><code>class</code> <code>Foo:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.response </code><code>=</code> <code>b""</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>@staticmethod</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>fetch ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>global</code> <code>stopped, todo_count</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock </code><code>=</code> <code>socket.Socket ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>yield</code> <code>from</code> <code>connect (sock, (</code><code>"httpbin. Org"</code><code>, </code><code>80</code><code>))</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>request </code><code>=</code> <code>"GET /get HTTP/1.0\r\nHost: httpbin. Com\r\n\r\n"</code><code>.encode (</code><code>"ascii"</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>sock.Send (request)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>response </code><code>=</code> <code>yield</code> <code>from</code> <code>read (sock)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>todo_count </code><code>-</code><code>=</code> <code>1</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code> <code>not</code> <code>todo_count:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>stopped </code><code>=</code> <code>True</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>response</code></p></div></td></tr></tbody></table><p>由于 yield from 和 yield 不同, yield 可以直接可以用作为 python 对象, 但 yield from 不行, 所以我们还需要对 Future 进行一次改造:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p></td><td><div title="Hint: double-click to select code"><p><code>class</code> <code>Future:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__init__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.result </code><code>=</code> <code>None</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>._callbacks </code><code>=</code> <code>[]</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>add_done_callback (</code><code>self</code><code>, func):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>._callbacks.Append (func)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>set_result (</code><code>self</code><code>, result):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>self</code><code>.result </code><code>=</code> <code>result</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>for</code> <code>func </code><code>in</code> <code>self</code><code>._callbacks:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>func (</code><code>self</code><code>)</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>def</code> <code>__iter__(</code><code>self</code><code>):</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>yield</code> <code>self</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>self</code><code>.result</code></p></div></td></tr></tbody></table><p>为其添加一个 <code>__iter__</code> 方法</p><h4 id="Async-await"><a href="#Async-await" class="headerlink" title="Async/await"></a>Async/await</h4><p>虽然到了 python 3.4 已经有了 yield from 这种方式, 但是由于协程在 Python 中发展的历史包袱所致，很多人仍然弄不明白生成器和协程的联系与区别, 也弄不明白 yield 和 yield from<br>的区别。这种混乱的状态也违背 Python 之禅的一些准则。</p><p>所以在 Python 3.5 中, 由新增了语法 async/await 语法 (PEP 492)。对协程有了明确而显式的支持，称之为原生协程。Async/await 和 yield from 这两种风格的协程底层复用共同的实现，而且相互兼容。</p><p>在 python 3.6 中, asyncio 正式的成为了 Python 标准库中的一员。下面我们用 原生的 async/await 语法实现一下请求:</p><table><tbody><tr><td><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></td><td><div title="Hint: double-click to select code"><p><code>import</code> <code>aiohttp</code></p><p><code>async </code><code>def</code> <code>fetch ():</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>async with aiohttp.ClientSession () as session:</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>res </code><code>=</code> <code>await response.Read ()</code></p><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>res</code></p></div></td></tr></tbody></table><p>至此, Python 的异步编程演化就已经完全讲完了, 我们已经深入的了解了什么是 异步编程, Python 中是如何实现异步编程的。<br>本文参考了大量的资料, 如果有不正确的地方希望大家能够指正, 如果有希望更深入了解异步编程的小伙伴欢迎与我交流 (￣▽￣)”</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li>  <a href="https://blog.csdn.net/crazymakercircle/article/details/85858596">从底层入手，图解 Java NIO BIO MIO AIO 四大IO模型与原理</a></li><li>  <a href="https://blog.csdn.net/hustzw07/article/details/108327644">五种IO类型简单了解</a></li><li>  <a href="https://medium.com/ing-blog/how-does-non-blocking-io-work-under-the-hood-6299d2953c74">How does non-blocking IO work under the hood?</a></li><li>  <a href="https://stackoverflow.com/questions/49005651/how-does-asyncio-actually-work">How does asyncio actually work?</a></li><li>  <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Asynchronous">MDN Web Docs</a></li><li>  <a href="https://www.python.org/dev/peps/pep-0342/">PEP342</a></li><li>  <a href="https://www.python.org/dev/peps/pep-0380/">PEP380</a></li><li>  <a href="https://www.python.org/dev/peps/pep-0492/">PEP492</a></li><li>  <a href="https://mp.weixin.qq.com/s/H-0pd3NcAJDbUckNi0-IEw">深入理解Python异步编程</a></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python fs</title>
      <link href="/2023/07/15/python/python%20fs/"/>
      <url>/2023/07/15/python/python%20fs/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a59738056ea837f641af8ce0d687e5a471d99f2fb624473fe0f6970c611b5cf3">a8896663a075a62411bb5095d4322c69722967a4979d73474253eaa1a82d6d74836f945e8a3d72197a0fdd7e4dce9a24c252a617f08f98e050072ef03e9ce499bee2a3bbf6c06ed8cc124238aec66b0bce2a965f8cd3e3b0f71a3c5214b49a1eee9214d1f2abba3532daec424fdb9c49b89e6edcfeeb8f725a9a3ce396958574227f6bc1f1a7525947c66cf5188fd6dbce2cc9bfd1d2a1acb8e623c268782a09ecac440494a3cbd2dd9c9a03dcfed3a65e300429f967f1a6a563e3f985d6bbe8380dd5aca285b1bc07b6505b66027fb9d10f17ce30e6f70060b11a8f4aada5a6132e79a75544c1070be00f2bcba461c4f49d46e5778fd89354dedb3ac0b485a454c7302380489b9cfd2f92b75aa39044d5be12b9ff2b0623f9e8efa4cec74c16db6cfd9e63ef861e35149afe15fadfa6ee71e1aeea6093c4d8955e74a0661fb578d7d4ac97afebf71c42401e709edaba2c2b7aa052a55799612d27fbbe711d13e1cbeba02c74416b1160cd05e576ce08ac23e12e9830f2de7b08f6f2a62d20470cb20aefa159cf55beab84b04218138f2e661ebee6f979560b0f3671afd2e67518c6f7dbca224befa55be9ff255881a9329eed47fcb30dc4c0f1491c96eed628ffe628c78bb43173cb785e4f70de167ff9c51b35c9eaf2f63db05ca9b1c7ed3bf26d801eed603b21db3f04d071de70a53157b0c32b3c8812b1bb99825c4afb7008d7eb00d86a817378c0c219c7df1596bac7d10d97a30e2b9d77eb15f29ab5e5718fc8770a2c8edaf7a602f694a00be46757fb26aaf6ba7f80a2d17b824a740f3bf0366e666b8cde0c734614f48176452e10845db3740b77f71f5e5aa535fdd928b84a34b6ec88e7a350834b284ca2e38733042fd639136c107f68adf2336b6408b337388c463230ea9bfa788f8491d98b45b5f79f130a337d51a8de81f4db367ee3d5c416c946fedc42900de27f23a222923ec8becf0d4344e24ef75babc329a637585a378385329a8030db383405df50726c0589b193cc97da936f0ee082c2e152292fe8564b86757a211f5cfacccdc910d430b035fb6890fb1361d4e467706cda3fe26ab82f7359d36531b656045a1b9f63a177621b2a98051e052c54dbadd3b7d4433e218374e750a92ee9b15cfa3c95c0c351c41b6d46b5ebaa2b9761a7ba6db6ec501aa2aece7d91cad8bb63df43ec36c5fc5f2ec09d0a43843d31351be6140dc643dd5844a8e09d7cd75f2990e327d0e280f6136ed0928931589c579893509428fa06872fc9dc2ad869bbd605423b74d6b49dea60494b365653d2d41df9b3fa0acdc2f22c13d2826c77717784ef3c7a3cfef043aa82697d5d9c8bd7d77def0ed1810d027ca65cf3866cf861d7c41f3e80c1ae1aa411497666c0f507a023a4df4dff3e35bf1f06a141dc2cb8332c7377fe06af744efff7c0cd00ffd99881abd864e2ee85eb17b9d5b5046404d5b787728037f5e4c667d1e61d1782d76f84948fd3c47156fe5b2eae4affaa96d9f5d99f93821faaf18cfe5f65db1f4829a37c9d2e9a51493b201706f2e4eda85aadc9df99e2cebaef6aaf0bd9bac2606d9678ec6909ec5c174b32193e3d6013933acf2a089972d550cfc95de9dcdd141dc10333aad7926c49961043f65b946b5158b15c943dc58b31a46cf02cfc5f7270b99c19706fa66722fc8a89feac3fc829b80406e1eedfa51fc7c1dd683ebd7bb0f74d97538f336df9bdcb53483a3bb540133a33a851f7b8a517b5753dae4c41118e584961fdde60a3d8b6a622466cfcdb013efc3e340f07f488a491e373c112590b0f0f7888fe1ee3a4f70b048b4682e5d2d5c3ea915acd96bf557a76dee5eb9c8ed62d9161d63a1b51b4c41cb97a10c708ef883b90c24cae3ef600811d6c843e93fce42f334c39109849e028945df6e01c6088b5a692d5743ad6afbcd5c17da4ce0da0bf769cb1e4d9ece7cb174d2f9721c5bebe753838fdecf72f51e6e2312d7163f8d449e2af019f576fbe51364a9dee1279344daea2904db93907af70708fa08f53fb148c206b2511d475104cc41f2b1b4b118a892328c71f9f7d363f87f32b387552bbbcc42ebb24390b04dddfb51c1db51f8536d9a9c7ee2c534c7223fd4baf7c2b70a89fb70aeb6262625ba7d460556c5a5d3b198fb05b4acf3d2cb04ec94eec561305c707bf01f2ebbf33a3ffb1492a56dce05ae702d63377e32ee9627ecb3ee5c841c1baf72cab43475ddd8fd6d09052b63d38ebd64e2a7d65c54e26e9cfc8dce2e5504cb224018b8e8d968387ea9bc3067131974359fbce7de9c2862378e05c0d35e919131f5c32d3aa27e26bd0eb8c5e7e484ac3c983af09cfa97c24f4b0f085c4bf5a26ae256468c1ac0747f42d5806aeb22851db5f0ee335abb0f02f143684a1a12a4d92b9a40fd175e0befe7bc227b8d3e254c169b0a66ea0c86235330c14545da03d5be51d7760d9e70fee0099eccfc8e8c4073c2d24ad44aad56ba37e740ac269609f9dec64dbcf2dfcda3b942c32768759116064617f61d4fd566dc7fea3a32b2d805b253c293a635317e251d59e8d0f6803caa8f265f6d09bd72abbdcd58a9d62c3d969e49fad54ad360047e01f3a5866738190fa1be837a847ab09b3dbbd7583d2e57ca3d537a4c72066c21ca5ea21210bbec43f97b5eabd715d70c1bd89a9023fbf7eff88434dc032bdd447b548ebfccfac165e36f9072e8288b330ec09ef00223864b9c5cb32920d07731b7e73f84af63b8e36e30ec9ff872d30e404d88bf69d96fb4a248966a780f874d886457593c221eb77906590e3ae09a073d68b88f36fe5bba38484c415484c900ed63af5cd06e42834bd66d9493b9da576162730eeaa3d8c5714e77d655cf0e1611f28155e77f1425a42d5532ddba25dfca5bb6672c3cb5a7dc77cfe01cf1d6d0574337fef4241821920a273762daf42b583d15260586acbdcbdc28aec7bc1f207292738793749bbf91cc6b225bad267d52525a5a8fdebd37598673929e20276cede3286294285df49dd45d1bc2f0841e56386b3ce0556c8d348d8911bb884b9cc5f7725029dc7ed7d0f6941cd54377e789c0a25922d8966528d0ff536d106baf7ac5fbc3ac4f3e8039669cb0d11c2dbc41569ea63d55b40424ff055bb6a8cd97c9528d9746217af55f4c817df1d3a0866c100dba9f81f9310ef3ba64113eb9e44af9a354ec52fc067adbaa15803c992264c7721d814e02fea3d8c399d50414adcfa188059b2e494fa944be3a3e4f4b2aa6d3067677e02b9e810184d99d05503c734dcb6ccd2e9af0e46a4dd5bf307ba795a94a156f8a64d7711b302f1f3b7066037e496628155c2e4f48acd6bf8cdb41b0d2caf8cca089559f93c579ec93a351972c2490d9c6cd453a2851fb956a0d392e9598e77dcb2f4d3c3f7afb25b9d6db142520a204816c84d4782930f69d4b9dca80935d54b8c364068023e5dada4da5e7a0f52c34fd7f6c3b66bf2413a1452a31f82818a6e43fb5cde11f7b7ddaf3b818162dbbd459eee6f59a5507ee81a4be0b5ea349a952058e2d359b532ed328266c815b8430d5ff395649d99c8ffd1ae73d4033f917832e16ec6aaa970f8acdbc036c5d755161a8e334c20d41b8afe2f9674aaa986181df55f76006aedc612fe3cde4cee8ef30e2f2099896639762f7c59f16ee256688548be42b8afea39e2993044efe54a01a29fa6d9968427153b92339d71367f038fe0ae5ba988d29d521ee8fbff8f7a5344224b890ed05503f206bac99de83bb25b8cb5b5e1024455a34376003f892e5588da3c3ba0b0a8ddf046c34a09cc814e4bda01240376dc51b76c16c50968c69ddb14c7e883f8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafna</title>
      <link href="/2023/06/22/docker/grafna/"/>
      <url>/2023/06/22/docker/grafna/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3.2&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  grafana:</span><br><span class="line">    image: portainer/template-swarm-monitoring:grafana-9.5.2</span><br><span class="line">    ports:</span><br><span class="line">      - target: 3000</span><br><span class="line">        published: 3000</span><br><span class="line">        protocol: tcp</span><br><span class="line">        mode: ingress</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 1</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.role == manager</span><br><span class="line">    volumes:</span><br><span class="line">      - type: volume</span><br><span class="line">        source: grafana-data</span><br><span class="line">        target: /var/lib/grafana</span><br><span class="line">    environment:</span><br><span class="line">      - GF_SECURITY_ADMIN_USER=admin</span><br><span class="line">      - GF_SECURITY_ADMIN_PASSWORD=datagrand@123</span><br><span class="line">      - GF_USERS_ALLOW_SIGN_UP=false</span><br><span class="line">    networks:</span><br><span class="line">      - net    </span><br><span class="line"></span><br><span class="line">  prometheus:</span><br><span class="line">    image: portainer/template-swarm-monitoring:prometheus-v2.44.0</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;--config.file=/etc/prometheus/prometheus.yml&#x27;</span><br><span class="line">      - &#x27;--log.level=error&#x27;</span><br><span class="line">      - &#x27;--storage.tsdb.path=/prometheus&#x27;</span><br><span class="line">      - &#x27;--storage.tsdb.retention.time=7d&#x27;</span><br><span class="line">    ports:</span><br><span class="line">      - target: 9090</span><br><span class="line">        published: 9090</span><br><span class="line">        protocol: tcp</span><br><span class="line">        mode: ingress</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 1</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">      placement:</span><br><span class="line">        constraints:</span><br><span class="line">          - node.labels.role == database</span><br><span class="line">    volumes:</span><br><span class="line">      - type: volume</span><br><span class="line">        source: prometheus-data</span><br><span class="line">        target: /prometheus</span><br><span class="line">    networks:</span><br><span class="line">      - net</span><br><span class="line"></span><br><span class="line">  cadvisor:</span><br><span class="line">    image: registry.cn-beijing.aliyuncs.com/luohuiwen20/cadvisor:v0.47.0</span><br><span class="line">    command: -logtostderr -docker_only</span><br><span class="line">    deploy:</span><br><span class="line">      mode: global</span><br><span class="line">      resources:</span><br><span class="line">        limits:</span><br><span class="line">          memory: 128M</span><br><span class="line">        reservations:</span><br><span class="line">          memory: 64M</span><br><span class="line">    volumes:</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /</span><br><span class="line">        target: /rootfs</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /var/run</span><br><span class="line">        target: /var/run</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /sys</span><br><span class="line">        target: /sys</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /var/lib/docker</span><br><span class="line">        target: /var/lib/docker</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /dev/disk</span><br><span class="line">        target: /dev/disk</span><br><span class="line">        read_only: true                        </span><br><span class="line">    networks:</span><br><span class="line">      - net</span><br><span class="line"></span><br><span class="line">  node-exporter:</span><br><span class="line">    image: prom/node-exporter:v1.5.0</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;--path.sysfs=/host/sys&#x27;</span><br><span class="line">      - &#x27;--path.procfs=/host/proc&#x27;</span><br><span class="line">      - &#x27;--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)&#x27;</span><br><span class="line">      - &#x27;--no-collector.ipvs&#x27;</span><br><span class="line">    deploy:</span><br><span class="line">      mode: global</span><br><span class="line">      resources:</span><br><span class="line">        limits:</span><br><span class="line">          memory: 128M</span><br><span class="line">        reservations:</span><br><span class="line">          memory: 64M</span><br><span class="line">    volumes:</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /</span><br><span class="line">        target: /rootfs</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /proc</span><br><span class="line">        target: /host/proc</span><br><span class="line">        read_only: true</span><br><span class="line">      - type: bind</span><br><span class="line">        source: /sys</span><br><span class="line">        target: /host/sys</span><br><span class="line">        read_only: true</span><br><span class="line">    networks:</span><br><span class="line">      - net</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  grafana-data:</span><br><span class="line">  prometheus-data:</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  net:</span><br><span class="line">    driver: overlay</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 网络配置</title>
      <link href="/2023/06/03/linux/linux%20%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/06/03/linux/linux%20%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="网络配置图形界面"><a href="#网络配置图形界面" class="headerlink" title="网络配置图形界面"></a>网络配置图形界面</h2><p>`</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmtui</span><br></pre></td></tr></table></figure><h2 id="查看所有网卡"><a href="#查看所有网卡" class="headerlink" title="查看所有网卡"></a>查看所有网卡</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show</span><br></pre></td></tr></table></figure><h2 id="关闭-开启网卡"><a href="#关闭-开启网卡" class="headerlink" title="关闭/开启网卡"></a>关闭/开启网卡</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set * up/down</span><br></pre></td></tr></table></figure><h2 id="linux-centos-配置无线网卡"><a href="#linux-centos-配置无线网卡" class="headerlink" title="linux centos 配置无线网卡"></a>linux centos 配置无线网卡</h2><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 1"></a>方法 1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip link set wlp0s20u2 up # 启用无线卡</span><br><span class="line">wpa_supplicant -B -i wlp0s20u2 -c &lt;(wpa_passphrase &quot;wgq3_b5&quot; &quot;wgq3b5wifi&quot;) #连接无线网</span><br><span class="line"></span><br><span class="line">dhclient wlp0s20u2  #分配IP地址，通过dhclient控制网卡进行网络操作获取IP</span><br></pre></td></tr></table></figure><h4 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2"></a>方法 2</h4><ol><li><p>安装 i w <a href="https://developer.aliyun.com/mirror/">Fetching Title#vf8d</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iw-4.3-2.el7.x86_64.rpm</span><br><span class="line">libnl-1.1.4-3.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>无线网卡 相关操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iw list #查看网卡</span><br><span class="line">iw dev #查看网口</span><br><span class="line">iw wls1 link #查看网口网络连接 </span><br><span class="line">iw wls1 scan | grep SSID</span><br></pre></td></tr></table></figure></li><li><p>连接 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">参考方法1</span><br></pre></td></tr></table></figure></li></ol><h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install NetworkManager-wifi</span><br></pre></td></tr></table></figure><p><a href="https://zhuanlan.zhihu.com/p/35143635">centos连接wifi无线网 - 知乎</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://zhuanlan.zhihu.com/p/35143635">centos连接wifi无线网 - 知乎</a></p><p><a href="https://juejin.cn/post/7159951033853018120">CentOS离线安装RPM及其依赖包 - 掘金</a></p><p><a href="https://www.cnblogs.com/tkid/p/3998721.html">Linux无线工具详解(Wireless tools for Linux) - tkid - 博客园</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu相关操作</title>
      <link href="/2023/05/08/linux/ubuntu%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/05/08/linux/ubuntu%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="离线包制作"><a href="#离线包制作" class="headerlink" title="离线包制作"></a>离线包制作</h2><ol><li><p>.查看依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apt-cache depends XXX</span><br></pre></td></tr></table></figure></li><li><p>下载 deb 及其依赖包</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances --no-pre-depends XXX | grep -v i386 | grep &quot;^\w&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>使用 dpkg 命令离线安装</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i *.deb</span><br></pre></td></tr></table></figure><h3 id="离线-vscode"><a href="#离线-vscode" class="headerlink" title="离线 vscode"></a>离线 vscode</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">commit_id=704ed70d4fd1c6bd6342c436f1ede30d1cff4710</span><br><span class="line">PATH_TO_YOUR_VSCODE_SERVER=/home/ycg</span><br><span class="line"></span><br><span class="line">mkdir -p ~/.vscode-server/bin/$&#123;commit_id&#125;</span><br><span class="line">cp $&#123;PATH_TO_YOUR_VSCODE_SERVER&#125;/vscode-server-linux-x64.tar.gz ~/.vscode-server/bin/$&#123;commit_id&#125;</span><br><span class="line"></span><br><span class="line">cd ~/.vscode-server/bin/$&#123;commit_id&#125;</span><br><span class="line">tar -xzf vscode-server-linux-x64.tar.gz &amp;&amp; rm vscode-server-linux-x64.tar.gz</span><br><span class="line">mv vscode-server-linux-x64/* . &amp;&amp; rm -r vscode-server-linux-x64</span><br><span class="line"></span><br><span class="line">mkdir -p ~/.vscode-server/extensions</span><br><span class="line">cp -r $&#123;PATH_TO_YOUR_VSCODE_EXTENSIONS&#125;/extensions/* ~/.vscode-server/extensions</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文心一言vsChatgpt</title>
      <link href="/2023/04/30/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%96%87%E5%BF%83%E4%B8%80%E8%A8%80vsChatgpt/"/>
      <url>/2023/04/30/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%96%87%E5%BF%83%E4%B8%80%E8%A8%80vsChatgpt/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202304301703338.png" alt="image.png"></p><p><img src="https://gitee.com/vincent_YE/markdown-images/raw/master/images/202304301703175.png" alt="image.png"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注意力机制</title>
      <link href="/2023/03/30/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6/"/>
      <url>/2023/03/30/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%B3%A8%E6%84%8F%E5%8A%9B%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 注意力机制 </tag>
            
            <tag> 特征筛选 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> 位置关系 </tag>
            
            <tag> 权重参数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quant-101</title>
      <link href="/2022/11/03/%E9%87%8F%E5%8C%96/quant-101/"/>
      <url>/2022/11/03/%E9%87%8F%E5%8C%96/quant-101/</url>
      
        <content type="html"><![CDATA[<h1 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h1><h2 id="Alpha"><a href="#Alpha" class="headerlink" title="Alpha"></a>Alpha</h2><pre><code>Alpha是投资者获得与市场波动无关的回报。比如投资者获得了15%的回报，其基准获得了10%的回报，那么Alpha或者价值增值的部分就是5%。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 量化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hardhat使用</title>
      <link href="/2022/09/04/WEB3/Hardhat/hardhat%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/09/04/WEB3/Hardhat/hardhat%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> WEB3 </tag>
            
            <tag> Hardhat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>solidity</title>
      <link href="/2022/07/09/WEB3/solidity/solidity/"/>
      <url>/2022/07/09/WEB3/solidity/solidity/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> WEB3 </tag>
            
            <tag> solidity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>私有链安装</title>
      <link href="/2022/07/07/WEB3/%E7%A7%81%E6%9C%89%E9%93%BE%E5%AE%89%E8%A3%85/"/>
      <url>/2022/07/07/WEB3/%E7%A7%81%E6%9C%89%E9%93%BE%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sh scripts/build_image.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker rm -f $(docker ps -qa -f name=eth)</span><br><span class="line"></span><br><span class="line">docker run -it --name eth -v /data/adpt/docker-app/ethereum/scripts/boot_start.sh:/root/boot_start.sh ccr.ccs.tencentyun.com/vincent/ethereum:20220705222003</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创世区块配置"><a href="#创世区块配置" class="headerlink" title="创世区块配置"></a>创世区块配置</h3><p> ![[Pasted image 20220707153401.png]]</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><ol><li><p><a href="https://medium.com/scb-digital/running-a-private-ethereum-blockchain-using-docker-589c8e6a4fe8">https://medium.com/scb-digital/running-a-private-ethereum-blockchain-using-docker-589c8e6a4fe8</a></p></li><li><p><a href="https://github.com/HuaRongSAO/ethereum-testnet-docker">https://github.com/HuaRongSAO/ethereum-testnet-docker</a></p></li><li><p><a href="https://github.com/Capgemini-AIE/ethereum-docker">https://github.com/Capgemini-AIE/ethereum-docker</a></p></li><li><p><a href="https://www.cnblogs.com/wanghui-garcia/p/10256520.html">https://www.cnblogs.com/wanghui-garcia/p/10256520.html</a></p></li><li><p><a href="https://www.cnblogs.com/wkfvawl/p/11211600.html">https://www.cnblogs.com/wkfvawl/p/11211600.html</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> WEB3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Geth</title>
      <link href="/2022/07/07/WEB3/Geth/"/>
      <url>/2022/07/07/WEB3/Geth/</url>
      
        <content type="html"><![CDATA[<h3 id="进入console"><a href="#进入console" class="headerlink" title="进入console"></a>进入console</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it ethereum_geth-rpc-endpoint_1 geth attach --datadir=&#x27;/root/blockchain_data&#x27;</span><br></pre></td></tr></table></figure><h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>这是一个交互式的Javascript执行环境，在这里面可以执行Javascript代码，其中&gt;是命令提示符。在这个环境里也内置了一些用来操作以太坊的Javascript对象，可以直接使用这些对象。这些对象主要包括：</p><ul><li>  eth：包含一些跟操作区块链相关的方法</li><li>  net：包含以下查看p2p网络状态的方法</li><li>  admin：包含一些与管理节点相关的方法</li><li>  miner：包含启动&amp;停止挖矿的一些方法</li><li>  personal：主要包含一些管理账户的方法</li><li>  txpool：包含一些查看交易内存池的方法</li><li>  web3：包含了以上对象，还包含一些单位换算的方法</li></ul><p>其中常用命令有：</p><ul><li>  personal.newAccount(‘133’)：创建账户；</li><li>  personal.unlockAccount(“0x0c00bd425d74357abc10b69599bb4ce7b203bbe7”, “tiatnain123”)：解锁账户；</li><li>  eth.accounts：枚举系统中的账户；</li><li>  eth.getBalance(“0xbce4f7e52556a32e0b44123749ef8baea65af5b3”)：查看账户余额，返回值的单位是 Wei（Wei - 是以太坊中最小货币面额单位，类似比特币中的聪，1 ether = 10^18 Wei）；</li><li>  eth.blockNumber：列出区块总数；</li><li>  eth.getTransaction()：获取交易；</li><li>  eth.getBlock()：获取区块；</li><li>  miner.start()：开始挖矿；</li><li>  miner.stop()：停止挖矿；</li><li>  web3.fromWei()：Wei 换算成以太币；</li><li>  web3.toWei()：以太币换算成 Wei；</li><li>  txpool.status：交易池中的状态；</li><li>  admin.addPeer()：连接到其他节点；</li></ul><h3 id="交易相关"><a href="#交易相关" class="headerlink" title="交易相关"></a>交易相关</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 账户解锁</span><br><span class="line">personal.unlockAccount(eth.accounts[0],&#x27;tiatnain123&#x27;, 1230000)</span><br><span class="line">personal.unlockAccount(eth.accounts[0],&#x27;133&#x27;, 1230000)</span><br><span class="line"># 获取账户余额</span><br><span class="line">web3.fromWei(eth.getBalance(eth.accounts[0]),&#x27;ether&#x27;)</span><br><span class="line">web3.fromWei(eth.getBalance(eth.accounts[1]),&#x27;ether&#x27;)</span><br><span class="line"></span><br><span class="line">## 发送交易</span><br><span class="line">amount = web3.toWei(5,&#x27;ether&#x27;)</span><br><span class="line">eth.sendTransaction(&#123;from:eth.accounts[0],to:&quot;0x57e60fafa998fab5ff85ef730e2f83c0a9d64ccc&quot;,value:amount&#125;)</span><br><span class="line">eth.sendTransaction(&#123;from:eth.accounts[0],to:&quot;0xfcf14de24a765787f1e8973e5387ac6869cb0c9a&quot;,value:amount&#125;)</span><br><span class="line"></span><br><span class="line">### 交易回调方式</span><br><span class="line">amount = web3.toWei(100,&#x27;ether&#x27;)</span><br><span class="line">eth.sendTransaction(&#123;from:eth.accounts[0],to:&quot;0x229f6d666b69e157b7f5f86c348276cc35f5b8ea&quot;,value:amount&#125;, function(err, transactionHash) &#123;</span><br><span class="line">  if (!err)</span><br><span class="line">    console.log(transactionHash); </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">### 获取交易信息</span><br><span class="line"></span><br><span class="line">eth.getTransaction(&quot;0x210ead7e297300ccfc5658d1798ec04050dc8a96333b2c769d062af3156531f6&quot;)</span><br><span class="line">eth.getTransaction(&quot;0x332c0627d917a68cfb03e66c432c98443bfbabc2c3cc263fdf1e27d55842fa73&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获取交易信息"><a href="#获取交易信息" class="headerlink" title="获取交易信息"></a>获取交易信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 获取区块个数</span><br><span class="line">eth.blockNumber </span><br><span class="line"></span><br><span class="line"># 获取区块信息</span><br><span class="line"></span><br><span class="line">eth.getBlock(180)</span><br><span class="line">eth.getBlock(&#x27;0x54340760e78a769cff2e4abce3a27df5f1e7f95b87f7d026b3901b61759deb2c&#x27;)</span><br><span class="line"></span><br><span class="line"># 获取交易数量</span><br><span class="line">eth.getTransactionCount(eth.accounts[0])</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> WEB3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫</title>
      <link href="/2022/05/02/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E7%88%AC%E8%99%AB/"/>
      <url>/2022/05/02/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="浏览器爬虫"><a href="#浏览器爬虫" class="headerlink" title="浏览器爬虫"></a>浏览器爬虫</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ol><li><p>webscraper</p><p> 教程: <a href="https://www.bilibili.com/video/BV1LJ411t7Gi?spm_id_from=333.999.0.0">Web Scraper 使用教程（一） 安装_哔哩哔哩_bilibili</a></p></li></ol><h3 id="APP-爬虫"><a href="#APP-爬虫" class="headerlink" title="APP 爬虫"></a>APP 爬虫</h3><h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-swarm-nfs</title>
      <link href="/2022/04/30/docker/docker-swarm-nfs/"/>
      <url>/2022/04/30/docker/docker-swarm-nfs/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="21d48492bd4d22a0d8b0b70896cca4d9e1a76adaafaad5053518604272c3cd25">a8896663a075a62411bb5095d4322c69af92f13515555639f3f9f4aceff81e91d7810e9b5463a70bcb132011eda28573ee3f62397511bb641ed1cb8cac6e59882663fce00b43dc441ca560acea7d1a6c74045f153d47cea1d6ff7919ed5795eec4f5b2babe040e009653c0cf31bd2daf64cdd77bbc59943214ee9165453881e9e8977c391d8df79bb63afd02fb5d86b0c554d5b2e5659d12be20d8f576813d796a2791bbb72579f7a9d6c02bb041ee135b304297b725f0b49264d2aec7b14de874394524ee340678b23cf63507a3590c38cb03085eb591387e8e18ad71ab5f0ba2de0a5b9009b0721b9e8f31540dbe2c69d0a4002d60716b6f7fbae30ae0d4486a58cc25456db6b488117beeacc17fba32656e77e22326d5facd6fb7e1202552f00d589907f965b703dee5674d3ea5e03c3273ab6ba2bd615c593c1572ba91ffb9cf8aa061025c7eee1d623d9a6179369dc71e58d366d08ae67d0c802ff7cf8a952d5d710bac6d88433bf529c31086ff158952d47c4aae161931ec758bfaa58bcbc0c4d2557020dcbb16278f638c1de1725577f99d6bada515202eec745c05bd0e1ad8f0c2a1f2d3f8f0fdf4559592304a615cd91ae093835ad6e21d04de6a9c591d98e3cb052ade551a43437ddef7c3e3617b632f1dfda838c78eb9c56ab66ce610b25b4a4429c1084f8968ef591cfc1c4547bdbaa6a537cfb7abc122e181c0dfb8ac6b5dd8cd66673282be570b8bc012fec2f5d1e007ecb98998309e145aec77dc660a0d3c904823d4ebddb70fe340b7bb6cd3a08db2b613db089ec0e0b51cdd49fdd6b4778217baf3451aef77973951f86eb71e3589735e6d6c4ef73d1cd98a78e45477196ba2568949c7dc5a3dcb2f8ed5d82f557474df7fab316f0dc361c35d36c49ed4b08efab9411ba6f7a3883899986b17da964c7d6c3a42df123091fb3ce33465aafd8f34ad6793f7250c609a635d8dce084d9dc30fb857a561d7f4c7fe6da1d82b624a62f6eef4be788a7d7ff1b516e9c3aafe37f18eb30b30fd20140d7688230712510d2bc85fdd9ca581bc3c015b14639090997a649eee09b36fa0316337993bd4fe9603fa59a8db9acdd99228e6ba94969c9c4a6c73c79beeb6623d37690fe18170d508795f3b169924afc0d4c0505695097633709b791f3443da541878d19caef70b9c03dea1ed0690e073c3fb6b2683a0cbbfe25b88b05c8f7ac6d00edab187b8e89f64a35f9579a6272635a848c0adee4016f69503c8cdad991e5a2070bd0ab26f27056389d337e4186c32604ad0ecec9a2bcf8d0b3dd8990a0605ff57dc696be8815c2bca01f57889b8223e941a3f2a7d5de8953601f13d287b90d4ae5beae1a42adec62d4c576816f2cf18ec21c69294ef24257161aeb263cd1d7a5225ca49fc2915f7dfec498fb255e085472feff9cc5924b2f48384730a4795b10f418b772844a76c917bede0a1c210a7fb2597768beddbf56266bc33f654fc82249442c56b5e14a3bf9802c34e646b7b697afac72a70482e8e16d07614362adafebc856aaef574d8b4f3f994e6eb46b1d039cdfb756532d8407a8c94d6ca76971e12a56ea694453c42292c0a86f4a984e5d96b58c861a3812036ec93a0936bbd7603a2a802710e7ec26d6c7fe1f2e8971e8c5df44f1452e7bb1e5792c2863a7824ac07882c4088d372709d321cd62a031a830d6b63e33aeedfb6aabc93255b22df484171330e3b17c9d43003d9cef0f730dca8e15f06ec9a84860d446e0e659d1bee47dcaf5af29047fd1dd8eab83cdc76aed116e081069c9a7310bbb7a3ef1cfd7a4e225bd9e24fd1fb3e2533fb3eafc8945d21036eac2bd39416258b4f02e26f46643fd02418ee379a29a71b3a478858e9b15bca7e2729c835a67b44232008ba7c4e64499e4c30dc00b5303e32678631f02d7281546d2b3179ab15b3c810b2d47e3106895f5fe83a5069fdb10c33bea2cf81549ab8a8bf287b7ce3ca0358b94266d8ecc42e6cf85bb4b4d8dd144dbfeb7689d8b6be64133e3010bf97e074990459ca8a5e23a15cf84b4cc57562232ec9ca2cefe4ae38f9193b353fd7bb88202f270de849933d5cc633082aaabd5b714731e1008ec2cf7c9a6c5d0056e25176d0fd6610e8b6036b8dd9c9a9b0b044a3f3a0d0a44bd01d1a26efbe72b3e3c24d588dd51b9d9056a811d5143bd75902ff1024e31bfbb7cc6612e5b3ab07c226cd72a2c5eb68c6ce53282de210ab3745e3defb573802778bf6d2425a243b96d963b2f27c2128c222ea7db85216103ef6c7cf49966d8857b43d40c561e9cf7c1c3ff65f66502ba0add7f6223f115a17dd20a65c03fd97afceadc2c5a66802a784b6da4cb85832f9f7ae7d4cc42e75b3d86f3b4cb5ff9e18db6f6372714aecd0dc311d59c6919597ec0bb0733791619a2f26cf559ad28a92ac34061c92171a0929ae75ef5566d63824e928b0fdf3bf94878927ed2ba857af07ef45be552f2902c528ba0702ffb5b3a02c33883e6c271f16ef69c43b0b10615728180b9b572cd0666f35758e12e990fb55bd9c685d8a9a80ac11ae561826621fdc65dedf2e9b40e82f8903ee45dad729bec73bd9f572e5ad4defb3f53ebb89499e4b77792a5972b404ce9197a2722b975d7f23fff1b1f0bbb6105492678954f6d5bc9b5e17cf6c9fd95c379efcf9bf651b95ed1ccdf3b399a9da83670d566d3ba6492b8c7f69766eadbb553a0d8a6395e02813badd49a5778746dd5e99264ee0a9213bb3fb58f25636f19724311d850f1a939443914b7f9496fde45d7eba3e7f06a1d03318762e3f4e9912d4bfc8e2106da2836d19d994b159e5d32c0a6169b20bf066126293b6cce9c6b3b541b1d18841f94f82c6cdb4191e5890e76acbf767bca4b985f95db77c8820ef3f2a35064747ab0d7b40964b70e02a4f5f6c83d27ff5048ebbb662f36a101dc30e6860a58193025112082a9c193021c74b5c8a4f7c4241be74d8a2d884807c63796b1fe1bd1cc6e5dc572120a6ca58cb77ca0448fc20a341745950fe4f753e609d09759e409c03fd7f11f3792b1a1b92ce8de4e229d90a2034c55292015368555ae26bf76c0761d5636e69e3e39f71d97f0ea49b6d3c1c37f2e16f61d0695cf5b57f932cdc7194a5194b2eed24631a9c062776121b2fe06ccfd2c717e149600162ac577be46f42d6ae371d8df6bce1a89e8752065c223021420f15a4e2c76c1a04e504cf8742a11926191dd1205691e02a80debd67dbc9812cb071f318b5ebcf350b5559f37c629e9d867368e12027b634b6a58da7c651e28cdef43ec3608685871260de413f4eddf4af6dfb2add24b4cc25893133196043311a2d7dbdaa976211122f19ea0cdc0b785fe71ee9ad95e7abe170d8e4ac8b32a27b966ad89ed7abcce724da9db3c92b7f417f23b0e29a724eeb5b0a30e726d6d0cd2722a58fb763c979e6f5faf062bf8995a173077cd07ac44f71fc8097b20091fc4f6db0b0c812a86ae7959357b1fb562388ecd19ecf1cc7d1affbbd2352e250bd09d4f96e4156bbe4945cb10e2fafae57b919013fb9f7decc245e0de5989e71fb76e4b810ef19cf5a36df200f39065323855a2543449a1500d4c935008d4f191c717a49594bb95ca2c93d8851d087f864a46da12b38440175be0f32d4ff26990929bbf0bfa7f41784e4e57e3a76ef457828e71889400a883a0cb1fb124b87fddbcdb43e2aae5bac917ba60ed7576866586e3d32037d8d466855f7add3c0242a89b81b6b9da5f1acc3f64b6b5b1a3f61924a9e33959c8f820e9665d34864f2336098a76983bcd117009cb96827cacc150b2f1ff04db6adde9b6c2691cbe556034bc8933435a2ac2db0e0c43d5a033b748631330b736532cbacd5198bde696e34ce4be627a3d6bd92efcf031e0498d7034c91f4f9595f69e3badf7973e37e2ef22e053755836cb6c437f37c17e3b3159cc314156c9d9734373ec7ddedc5851ddc150dafeb84490b87ac5de38640ae57e6e4cecf0e09e6a8fc7ce9530663032f616083c2b5098ea973ad39540fb4019694152b56ca1df661e61a348eb63864bc078f62243770cb7a6e89009d8ab2e323db58e901316ccd29467a0c4190ce68131e29ad97ed9f675624bdca6780bd6e317649122eb98d68c6fb4aa0943220b07c206c9dd57307c9c7b7b8a6e1d39c5054726e6ffc2b411fe7188bdc7d9824914e992b1b04b8eff0a1e8ea1804470a779935d2b687230d0755a0e6b854f315c9585b5c293272b4c5804424fc18d063a4c42bfdb98f039c15cc92abd176f38351eca16438f6c44ed964cf6372eb9aa7f203653e59bebb88ff00123708b1c9f4f2ed3daa04b1fb44affab3e889afd0bb783a7ef72bcde16ee86415d08b211996b2c183df5f4ebafc4f723b8b64b59d0a2e32506bfb7aa849a726cc32c8a8395054fd00e007d11326e0db3e397b7436517274981f7abfbff16453810eae8ef3e767bdd354475f025f9b4c1a056b44b02da12303c3db7dfa0864685fb9a145d4bb8e46ede7c7812f8126099638ade0bf990d154b2d5f6e489475c6b95b06ac87b5f63c25cb774a40bd6845adc02a075d5a1590a1d43ae9dcc7d8b0937d741c726a59473397c5d6a8dcc7ca01e343b7a3f203371be01872e29dee624694d5158b9184a2b92e4a8b7f8a3c813ebce60e79a065f8e2ddaa1c68dbcceb82cf8af5b8267f4394ff5c8a8f99faed759bf4ee2183e3dbc3cb017c31ce2e5c95ff21c0898287b92e60140f5c3d124f2cec8674d75e58a26f011ffd97826cb288748a76ae91a4a0009c3b128bc295ac61529c570d92ea4a5c110b61a8b87a7fad353071d3b859da0625c63ac26ab956e802cecdd75dd9031d6fafe3add1de5ae8d7f3e0e2be219887162b8b02564ac69372bf87cdd92154c357b571d310761465a87769ca824a2ce2fc0861336ffefb3a297702179f59096db4784a5b91659e931cc985873a8be04d0539353a105f3341db19169e7d38ee601b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>async_mysql</title>
      <link href="/2022/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/async_mysql/"/>
      <url>/2022/03/12/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/async_mysql/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Column</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> DateTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> ForeignKey</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> func</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Integer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> String</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Column, String, INTEGER, BOOLEAN, DATETIME, INTEGER, Column, true, Float, text, Boolean</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.asyncio <span class="keyword">import</span> AsyncSession</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.asyncio <span class="keyword">import</span> create_async_engine</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.future <span class="keyword">import</span> select</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> declarative_base</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> selectinload</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuildTask</span>(<span class="params">Base</span>):</span></span><br><span class="line"></span><br><span class="line">__tablename__ = <span class="string">&#x27;build_task&#x27;</span></span><br><span class="line"></span><br><span class="line">__table_args__ = &#123;<span class="string">&#x27;comment&#x27;</span>: <span class="string">&#x27;构建任务&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = Column(INTEGER, primary_key=<span class="literal">True</span>, autoincrement=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">active = Column(BOOLEAN, server_default=true(), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">create_time = Column(DATETIME, default=datetime.now, comment=<span class="string">&quot;修改时间&quot;</span>)</span><br><span class="line"></span><br><span class="line">last_update_time = Column(DATETIME, default=datetime.now, onupdate=datetime.now, comment=<span class="string">&quot;最近修改时间&quot;</span>, index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">name = Column(String(<span class="number">45</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">status = Column(String(<span class="number">10</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>), server_default=text(<span class="string">&quot;&#x27;INIT&#x27;&quot;</span>))</span><br><span class="line"></span><br><span class="line">progress = Column(Float(asdecimal=<span class="literal">True</span>), server_default=text(<span class="string">&quot;&#x27;0&#x27;&quot;</span>))</span><br><span class="line"></span><br><span class="line">flow_group_id = Column(String(<span class="number">100</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">desc = Column(String(<span class="number">255</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">task_id = Column(String(<span class="number">100</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>), nullable=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">task_type = Column(String(<span class="number">1</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>), comment=<span class="string">&#x27;构建任务的类型,0:三元组导入 1:标注导入 2:映射式构建导入&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>(<span class="params">Base</span>):</span></span><br><span class="line"></span><br><span class="line">__tablename__ = <span class="string">&quot;a&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">data = Column(String(<span class="number">100</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">create_date = Column(DateTime, server_default=func.now())</span><br><span class="line"></span><br><span class="line">bs = relationship(<span class="string">&quot;B&quot;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># required in order to access columns with server defaults</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or SQL expression defaults, subsequent to a flush, without</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># triggering an expired load</span></span><br><span class="line"></span><br><span class="line">__mapper_args__ = &#123;<span class="string">&quot;eager_defaults&quot;</span>: <span class="literal">True</span>&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>(<span class="params">Base</span>):</span></span><br><span class="line"></span><br><span class="line">__tablename__ = <span class="string">&quot;b&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">a_id = Column(ForeignKey(<span class="string">&quot;a.id&quot;</span>))</span><br><span class="line"></span><br><span class="line">data = Column(String(<span class="number">100</span>, <span class="string">&#x27;utf8mb4_bin&#x27;</span>))</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># async def async_main():</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># engine = create_async_engine(</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;mysql+aiomysql://root:root@127.0.0.1:3308/kg_db&quot;,</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># async with engine.begin() as conn:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # await conn.run_sync(Base.metadata.drop_all)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># await conn.run_sync(Base.metadata.create_all)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># # expire_on_commit=False will prevent attributes from being expired</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # after commit.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># async_session = sessionmaker(</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># engine, expire_on_commit=False, class_=AsyncSession</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># async with async_session() as session:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># async with session.begin():</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session.add_all(</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B(), B()], data=&quot;a1&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B()], data=&quot;a2&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B(), B()], data=&quot;a3&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># stmt = select(A).options(selectinload(A.bs))</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># result = await session.execute(stmt)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># for a1 in result.scalars():</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(a1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(f&quot;created at: &#123;a1.create_date&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for b1 in a1.bs:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(b1)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># result = await session.execute(select(A).order_by(A.id))</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># a1 = result.scalars().first()</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># a1.data = &quot;new data&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># await session.commit()</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># # access attribute subsequent to commit; this is what</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # expire_on_commit=False allows</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(a1.data)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># # for AsyncEngine created in function scope, close and</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # clean-up pooled connections</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># await engine.dispose()</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fetch_and_update_objects</span>(<span class="params">session</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;run traditional sync-style ORM code in a function that will be</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">invoked within an awaitable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># the session object here is a traditional ORM Session.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># all features are available here including legacy Query use.</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># stmt = select(A)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># result = session.execute(stmt)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for a1 in result.scalars():</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(a1)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># # lazy loads</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for b1 in a1.bs:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(b1)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># legacy Query use</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a1 = session.query(BuildTask).order_by(BuildTask.id).first()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a1 = session.query(BuildTask).order_by(BuildTask.id).first()</span></span><br><span class="line"></span><br><span class="line">a1 = BuildTask.query.<span class="built_in">filter</span>(</span><br><span class="line"></span><br><span class="line">BuildTask.which_graph == <span class="string">&#x27;origingraph&#x27;</span>).first()</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">a1.desc = <span class="string">&quot;new data&quot;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">async_main</span>():</span></span><br><span class="line"></span><br><span class="line">engine = create_async_engine(</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;mysql+aiomysql://root:root@127.0.0.1:3308/kg_db&quot;</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># async with engine.begin() as conn:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># await conn.run_sync(Base.metadata.drop_all)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># await conn.run_sync(Base.metadata.create_all)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">with</span> AsyncSession(engine) <span class="keyword">as</span> session:</span><br><span class="line"></span><br><span class="line"><span class="comment"># async with session.begin():</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># session.add_all(</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B(), B()], data=&quot;a1&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B()], data=&quot;a2&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A(bs=[B(), B()], data=&quot;a3&quot;),</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> session.run_sync(fetch_and_update_objects)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> session.commit()</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># for AsyncEngine created in function scope, close and</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># clean-up pooled connections</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> engine.dispose()</span><br><span class="line"></span><br><span class="line">asyncio.run(async_main())</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.cnblogs.com/ygy1997/p/11759490.html">aiomysql+sqlalchemy实现ORM框架【实现仿优酷系统添加用户】 - 杨归元 - 博客园</a></p><p><a href="https://cloud.tencent.com/developer/article/1625730">aiomysql异步操作mysql - 云+社区 - 腾讯云</a></p><p><a href="https://aiomysql.readthedocs.io/en/latest/sa.html#engine">Asynchronous I/O (asyncio) — SQLAlchemy 1.4 Documentation</a></p><p><a href="https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html#preventing-implicit-io-when-using-asyncsession">Asynchronous I/O (asyncio) — SQLAlchemy 1.4 Documentation</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dataclass</title>
      <link href="/2022/02/25/python/dataclass/"/>
      <url>/2022/02/25/python/dataclass/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">    一个使用内置的数据类表示数据的 demo</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import json</span><br><span class="line">from dataclasses import (</span><br><span class="line">    asdict, dataclass, field, fields, is_dataclass</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 对于一些嵌套的数据类，需要深度遍历</span><br><span class="line">class EnhancedJSONEncoder(json.JSONEncoder):</span><br><span class="line">    def default(self, o):</span><br><span class="line">        if is_dataclass(o):</span><br><span class="line">            return asdict(o)</span><br><span class="line">        return super().default(o)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dicts_to_dataclasses(instance):</span><br><span class="line">    &quot;&quot;&quot;将所有的数据类属性都转化到数据类中&quot;&quot;&quot;</span><br><span class="line">    cls = type(instance)</span><br><span class="line">    for f in fields(cls):</span><br><span class="line">        if not is_dataclass(f.type):</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        value = getattr(instance, f.name)</span><br><span class="line">        if not isinstance(value, dict):</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        new_value = f.type(**value)</span><br><span class="line">        setattr(instance, f.name, new_value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@dataclass</span><br><span class="line">class Base:</span><br><span class="line">    def __post_init__(self):</span><br><span class="line">        dicts_to_dataclasses(self)</span><br><span class="line"></span><br><span class="line">    def as_dict(self):</span><br><span class="line">        return asdict(self)</span><br><span class="line"></span><br><span class="line">    def as_json(self):</span><br><span class="line">        return json.dumps(self, cls=EnhancedJSONEncoder)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@dataclass</span><br><span class="line">class Cover(Base):</span><br><span class="line">    id: str = None</span><br><span class="line">    cover_id: str = None</span><br><span class="line">    offset_x: str = field(default=None, repr=False)</span><br><span class="line">    offset_y: str = field(default=None, repr=False)</span><br><span class="line">    source: str = field(default=None, repr=False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@dataclass</span><br><span class="line">class Page(Base):</span><br><span class="line">    id: str = None</span><br><span class="line">    about: str = field(default=&#x27;&#x27;, repr=False)</span><br><span class="line">    birthday: str = field(default=None, repr=False)</span><br><span class="line">    name: str = None</span><br><span class="line">    username: str = None</span><br><span class="line">    fan_count: int = field(default=None, repr=False)</span><br><span class="line">    cover: Cover = field(default=None, repr=False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    data = &#123;</span><br><span class="line">        &quot;id&quot;: &quot;20531316728&quot;,</span><br><span class="line">        &quot;about&quot;: &quot;The Facebook Page celebrates how our friends inspire us, support us, and help us discover the world when we connect.&quot;,</span><br><span class="line">        &quot;birthday&quot;: &quot;02/04/2004&quot;,</span><br><span class="line">        &quot;name&quot;: &quot;Facebook&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;facebookapp&quot;,</span><br><span class="line">        &quot;fan_count&quot;: 214643503,</span><br><span class="line">        &quot;cover&quot;: &#123;</span><br><span class="line">            &quot;cover_id&quot;: &quot;10158913960541729&quot;,</span><br><span class="line">            &quot;offset_x&quot;: 50,</span><br><span class="line">            &quot;offset_y&quot;: 50,</span><br><span class="line">            &quot;source&quot;: &quot;https://scontent.xx.fbcdn.net/v/t1.0-9/s720x720/73087560_10158913960546729_8876113648821469184_o.jpg?_nc_cat=1&amp;_nc_ohc=bAJ1yh0abN4AQkSOGhMpytya2quC_uS0j0BF-XEVlRlgwTfzkL_F0fojQ&amp;_nc_ht=scontent.xx&amp;oh=2964a1a64b6b474e64b06bdb568684da&amp;oe=5E454425&quot;,</span><br><span class="line">            &quot;id&quot;: &quot;10158913960541729&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    # 数据加载</span><br><span class="line">    p = Page(**data)</span><br><span class="line"></span><br><span class="line">    print(p.name)</span><br><span class="line">    print(p)</span><br><span class="line">    print(p.cover)</span><br><span class="line"></span><br><span class="line">    print(p.as_dict())</span><br><span class="line">    print(p.as_json())</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.jianshu.com/p/470aea3df22b">Python 数据类 dataclasses 实践 - 简书</a><br><a href="https://github.com/MerleLiuKun/my-python/blob/master/sundries/dataclass/demo3.py">https://github.com/MerleLiuKun/my-python/blob/master/sundries/dataclass/demo3.py</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rasa</title>
      <link href="/2022/01/18/Bot/rasa/"/>
      <url>/2022/01/18/Bot/rasa/</url>
      
        <content type="html"><![CDATA[<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rasa init </span><br></pre></td></tr></table></figure><h2 id="训练模型"><a href="#训练模型" class="headerlink" title="训练模型"></a>训练模型</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h2><ol><li>只运行 action </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Rasa-官方文档"><a href="#Rasa-官方文档" class="headerlink" title="Rasa 官方文档"></a>Rasa 官方文档</h2><p><a href="https://rasa.com/docs/rasa/pages/http-api#tag/Server-Information">Rasa Open Source Documentation</a></p><p><a href="https://www.rasachatbot.com/">Rasa 聊天机器人中文官方文档|磐创AI</a></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/andrexpert/article/details/104328946">Rasa中文聊天机器人开发指南(1)：入门篇_蒋东国的博客-CSDN博客_rasa调试</a></p><p><a href="https://terrifyzhao.github.io/2018/09/17/Rasa%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%9701.html">Rasa使用指南01 - Welcome to AI World</a></p><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p><a href="https://blog.csdn.net/Kangyucheng/article/details/82822202">python开源聊天机器人ChatterBot——聊天机器人搭建、流程分析、源码分析_康雨城-CSDN博客_python 中文聊天机器人</a><br><a href="https://www.jianshu.com/p/bd1bb573511c">多轮对话 - Core篇 - 简书</a><br><a href="https://zhuanlan.zhihu.com/p/32716205">多轮对话之对话管理(Dialog Management) - 知乎</a><br><a href="https://www.52nlp.cn/rasa%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97-%E5%88%9D%E8%AF%86rasa">Rasa 入坑指南一：初识 Rasa – 我爱自然语言处理</a></p><p><a href="https://www.jianshu.com/p/ad11f5815447">Rasa 聊天机器人框架使用 - 简书</a></p><h2 id="专栏"><a href="#专栏" class="headerlink" title="专栏"></a>专栏</h2><p><a href="https://www.zhihu.com/column/c_1318281710002663424">RASA框架应用 - 知乎</a><br><a href="https://cloud.tencent.com/developer/article/1558125">Rasa 聊天机器人专栏（五）：模型评估 - 云+社区 - 腾讯云</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTU5Njg4NQ==&mid=2247489834&idx=1&sn=941e052b379b3c9b348d63dd0ffdd32f&chksm=9bbffc10acc875064abf127e05a135d67633bbcb9193db303704817d12776190dcb7fccfcee9&scene=178&cur_album_id=2032260139549851649#rd">基于RASA开始中文机器人实现机制</a></p><h2 id="示例仓库"><a href="#示例仓库" class="headerlink" title="示例仓库"></a>示例仓库</h2><p><a href="http://www.crownpku.com/2017/07/27/%E7%94%A8Rasa_NLU%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AD%E6%96%87NLU%E7%B3%BB%E7%BB%9F.html">用Rasa NLU构建自己的中文NLU系统</a></p><p><a href="https://blog.csdn.net/m0_49501453/article/details/120113135?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.pc_relevant_default&utm_relevant_index=2">RASA2.0 搭建中文聊天机器人（附gitee源码）_m0_49501453的博客-CSDN博客_rasa中文聊天机器人</a></p><p><a href="https://gitcode.net/mirrors/jiangdongguo/chitchatassistant?utm_source=csdn_github_accelerator">mirrors / jiangdongguo / chitchatassistant · GitCode</a></p><p><a href="https://github.com/paschmann/rasa-ui">https://github.com/paschmann/rasa-ui</a></p><p><a href="https://github.com/crownpku/awesome-chinese-nlp#qa--chatbot-%E9%97%AE%E7%AD%94%E5%92%8C%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA-1">https://github.com/crownpku/awesome-chinese-nlp#qa–chatbot-问答和聊天机器人-1</a></p><p><a href="https://github.com/paschmann/rasa-ui">https://github.com/paschmann/rasa-ui</a></p><p><a href="https://github.com/crownpku/Rasa_NLU_Chi">https://github.com/crownpku/Rasa_NLU_Chi</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Bot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s用helm 部署gitlab</title>
      <link href="/2022/01/05/kubernetes/k8s%E7%94%A8helm%20%E9%83%A8%E7%BD%B2gitlab/"/>
      <url>/2022/01/05/kubernetes/k8s%E7%94%A8helm%20%E9%83%A8%E7%BD%B2gitlab/</url>
      
        <content type="html"><![CDATA[<h2 id="下载-helm-包"><a href="#下载-helm-包" class="headerlink" title="下载 helm 包"></a>下载 helm 包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 添加 gitlab repo 源</span></span><br><span class="line">helm repo add gitlab https://charts.gitlab.io/</span><br><span class="line"><span class="comment"># 下载 chart</span></span><br><span class="line">helm gull --untar gitlab/gitlab</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内网安装"><a href="#内网安装" class="headerlink" title="内网安装"></a>内网安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">helm upgrade --install gitlab gitlab/gitlab   --timeout 600s   --<span class="built_in">set</span> global.hosts.domain=example.com   --<span class="built_in">set</span> global.hosts.externalIP=10.10.10.10   --<span class="built_in">set</span> certmanager-issuer.email=me@example.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://cloud.tencent.com/developer/article/1433261">Kubernetes 集群使用 Helm 搭建 GitLab 并配置 Ingress - 云+社区 - 腾讯云</a><br><a href="https://cloud.tencent.com/developer/article/1471464">使用 Helm 部署 Gitlab - 云+社区 - 腾讯云</a></p><p><a href="https://www.yisu.com/zixun/22871.html">helm3安装gitlab - 云计算 - 亿速云</a><br><a href="https://docs.gitlab.com/charts/installation/deployment.html">Deployment Guide | GitLab</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubeboard</title>
      <link href="/2022/01/03/kubernetes/kubeboard/"/>
      <url>/2022/01/03/kubernetes/kubeboard/</url>
      
        <content type="html"><![CDATA[<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://press.demo.kuboard.cn/install/history-k8s/install-k8s-1.21.x.html">使用kubeadm安装kubernetes_v1.21.x | Kuboard</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql AppendQuery</title>
      <link href="/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/bugfix/mysql%20AppendQuery/"/>
      <url>/2021/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/bugfix/mysql%20AppendQuery/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TypeError: object of <span class="built_in">type</span> <span class="string">&#x27;AppenderQuery&#x27;</span> has no len()</span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><blockquote><p>  级联关系 修改为 <code>lazy=&#39;dynamic&#39;</code></p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>使用AppenderQuery的 count 方法获取长度</p><p><img src="https://i.imgur.com/uRyUKuZ.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://stackoverflow.com/questions/45723102/how-to-get-length-of-query-result-sqlalchemy">How to get length of query result SqlAlchemy</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> bugfix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arrango 批量导入测试</title>
      <link href="/2021/12/29/%E6%95%B0%E6%8D%AE%E5%BA%93/Arrango%20DB/arrango%20%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/12/29/%E6%95%B0%E6%8D%AE%E5%BA%93/Arrango%20DB/arrango%20%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ba4ac9f11b7c63e92c9d669d7b3dcbe35fbb81fecac5268137c1ed500010f2ab"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> Arrango DB </tag>
            
            <tag> Arrango 探索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>obsdian 学习</title>
      <link href="/2021/12/27/obsdian/obsdian%20%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/12/27/obsdian/obsdian%20%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="插件学习"><a href="#插件学习" class="headerlink" title="插件学习"></a>插件学习</h3><h4 id="mindmap-插件"><a href="#mindmap-插件" class="headerlink" title="mindmap 插件"></a>mindmap 插件</h4><p><a href="https://www.bilibili.com/video/BV1344y1k7qK?t=25">Johnny学OB 第2集 - 自动生成思维导图，一键做视频笔记时间戳，OB的这些功能，可别错过了 | Obsidian 黑曜石 教程_哔哩哔哩_bilibili</a></p><h4 id="PDF标注插件"><a href="#PDF标注插件" class="headerlink" title="PDF标注插件"></a>PDF标注插件</h4><p><a href="https://www.bilibili.com/video/BV1YQ4y1C7Fy?t=29.3">Johnny学OB 第13集 - 在OB里直接标注PDF，可以高亮，标注，加页面备注，当然也可以加标签。大大提高用PDF资料进行学习的体验。Obsidian教程_哔哩哔哩_bilibili</a></p><h3 id="看板"><a href="#看板" class="headerlink" title="看板"></a>看板</h3><h3 id="任务管理"><a href="#任务管理" class="headerlink" title="任务管理"></a>任务管理</h3><p><a href="https://www.bilibili.com/video/BV1bL4y1z7Fd?t=53.2">[Obs＃54] Obsidian的任务管理技巧汇总_哔哩哔哩_bilibili</a></p><p><a href="https://matthewmeye.rs/obsidian-kanban/How%20do%20I/Add%20an%20image%20to%20a%20card/">Add an image to a card - Obsidian Kanban</a></p><p><a href="https://www.bilibili.com/video/BV1iZ4y1X7xW?t=54.1">Obsidian Kanban自动修改卡片标签_哔哩哔哩_bilibili</a></p><p><a href="https://matthewmeye.rs/obsidian-kanban/Settings/">Settings - Obsidian Kanban</a></p><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><p><a href="https://jasper1024.com/jasper/20210914033602/">obsidian + hexo = my blog | 默</a><br><a href="https://github.com/avirut/obsidian-metatemplates">GitHub - avirut/obsidian-metatemplates: Take advantage of YAML front-matter in generating notes from templates (for obsidian.md)</a><br><a href="https://github.com/garyng/obsidian-temple">GitHub - garyng/obsidian-temple: A plugin for templating in Obsidian, powered by Nunjucks.</a></p><h3 id="个人主页"><a href="#个人主页" class="headerlink" title="个人主页"></a>个人主页</h3><ol><li><p><a href="https://www.bilibili.com/video/BV1k341117vt/?spm_id_from=333.788.recommend_more_video.3">Johnny学OB 第34集 用OB搭建个人数字主页，高效整合你的工作、生活和学习，挽回那些被浪费的时间 | Obsidian 教程_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1mq4y1d7KL/?spm_id_from=333.788.recommend_more_video.-1">Johnny学OB 第35集 用OB搭建个人数字主页 第2集——利用Admonition插件让你的主页更清爽整洁 Obsidian教程_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV14u411Z7sJ/?spm_id_from=333.788.recommend_more_video.-1">Johnny学OB 第36集 用QuickAdd 快速记录你乍现的灵感，以及Button和Sidebar的用法 Obsidian教程_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1qQ4y1q7Gs/?spm_id_from=333.788.recommend_more_video.-1">Johnny学OB 第38集 用OB搭建个人首页收尾篇，用Quickadd, Kanban, Buttons 把之前的坑都补上吧 Obsidian教程_哔哩哔哩_bilibili</a></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> obsdian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K8s常见问题：Service 不能访问排查流程</title>
      <link href="/2021/12/22/kubernetes/K8s%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9AService%20%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E6%8E%92%E6%9F%A5%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/12/22/kubernetes/K8s%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%EF%BC%9AService%20%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E6%8E%92%E6%9F%A5%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="kube-proxy-报错"><a href="#kube-proxy-报错" class="headerlink" title="kube-proxy 报错"></a>kube-proxy 报错</h3><p><code>graceful_termination.go:93] lw: remote out of the list:</code><br><a href="https://stackoverflow.com/questions/58860745/no-route-to-host-from-some-kubernetes-containers-to-other-containers-in-same-clu">project calico - No route to host from some Kubernetes containers to other containers in same cluster - Stack Overflow</a></p><p><a href="https://www.coder.work/article/7317214">kubernetes - 从某些Kubernetes容器到同一集群中其他容器的主机没有路由 - IT工具网</a></p><p><a href="https://jishuin.proginn.com/p/763bfbd4d120">K8s常见问题：Service 不能访问排查流程-技术圈</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab ci cd</title>
      <link href="/2021/12/20/linux/gitlab%20ci%20cd/"/>
      <url>/2021/12/20/linux/gitlab%20ci%20cd/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.bookstack.cn/read/gitlab-doc-zh/docs-204.md">Using SSH keys with GitLab CI/CD - 《Gitlab 中文文档》 - 书栈网 · BookStack</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时任务框架 ndscheduler</title>
      <link href="/2021/12/20/python/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%A1%86%E6%9E%B6%20ndscheduler/"/>
      <url>/2021/12/20/python/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%A1%86%E6%9E%B6%20ndscheduler/</url>
      
        <content type="html"><![CDATA[<h2 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h2><p>在应用系统中开发中通常会遇有定时任务任务开发的需求。 python 的定时任务框架有<a href="https://apscheduler.readthedocs.io/en/3.x/">APSScheduler.</a>  通常的这些框架都是面对后端开发的。 定时任务的开始， 状态监控, 日志查询， 这些工作都需要开发后台维护。 因此需要一个针对定时任务的UI框架进行任务的维护与监控。 </p><h2 id="选型对比"><a href="#选型对比" class="headerlink" title="选型对比"></a>选型对比</h2><p><a href="https://github.com/rq/rq-scheduler">GitHub - rq/rq-scheduler: A lightweight library that adds job scheduling capabilities to RQ (Redis Queue)</a><br><a href="https://github.com/Nextdoor/ndscheduler#web-ui">GitHub - Nextdoor/ndscheduler: A flexible python library for building your own cron-like system, with REST APIs and a Web UI.</a></p><h2 id="yaml"><a href="#yaml" class="headerlink" title="yaml"></a>yaml</h2> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">kg-pipeline-scheduler:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env_file:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/global_config/global_config.env</span></span><br><span class="line"></span><br><span class="line"><span class="attr">image:</span> <span class="string">dockerhub.datagrand.com/yskg/kg-pipeline-scheduler:test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/kg-pipeline/data:/kg-pipeline-scheduler/kg_pipeline_scheduler/data</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/kg-pipeline/process:/kg-pipeline-scheduler/kg_pipeline_scheduler/process</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/kg-pipeline/pipeline_template/custom:/kg-pipeline-scheduler/kg_pipeline_scheduler/pipeline_template/custom</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/kg-pipeline/logs:/kg-pipeline-scheduler/kg_pipeline_scheduler/logs</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="string">./data/share_data/oracle/instantclient_11_2:/opt/instantclient_11_2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 安装</title>
      <link href="/2021/12/16/docker/docker%20%E5%AE%89%E8%A3%85/"/>
      <url>/2021/12/16/docker/docker%20%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h1><p>yum  添加 docker </p><p><code>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code></p><p><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code></p><p>yum  下载离线包</p><p><a href="https://www.cnblogs.com/testway/p/13235683.html">docker离线安装</a></p><p><a href="https://docs.docker.com/engine/install/binaries/[[install-daemon-and-client-binaries-on-linux]]">Install Docker Engine from binaries</a></p><ul><li>修改数据挂载</li></ul><p><a href="https://blog.csdn.net/z924139546/article/details/104228516"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 安装ngrok 并配置</title>
      <link href="/2021/12/16/docker/docker%20%E5%AE%89%E8%A3%85ngrok%20%E5%B9%B6%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/12/16/docker/docker%20%E5%AE%89%E8%A3%85ngrok%20%E5%B9%B6%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-安装ngrok-并配置"><a href="#docker-安装ngrok-并配置" class="headerlink" title="docker 安装ngrok 并配置"></a>docker 安装ngrok 并配置</h1><p>Created: May 9, 2021 3:58 PM</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker run --rm -it -e DOMAIN=<span class="string">&quot;ngrok.17beauty.vip&quot;</span> -v /root/ngrok:/myfiles hteen/ngrok /bin/sh /build.sh</span><br><span class="line"></span><br><span class="line">docker run -idt --name ngrok-server  -v /root/ngrok:/myfiles -p 81:80 -p 444:443 -p 4443:4443 -e DOMAIN=<span class="string">&#x27;ngrok.17beauty.vip&#x27;</span> hteen/ngrok /bin/sh /server.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">map <span class="variable">$scheme</span> <span class="variable">$proxy_port</span> &#123;</span><br><span class="line">    <span class="string">&quot;http&quot;</span>  <span class="string">&quot;8080&quot;</span>;</span><br><span class="line">    <span class="string">&quot;https&quot;</span> <span class="string">&quot;8081&quot;</span>;</span><br><span class="line">    default <span class="string">&quot;8080&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    listen      [::]:80;</span><br><span class="line">    listen      443;</span><br><span class="line">    listen      [::]:443;</span><br><span class="line">    server_name ngrok.fengqi.me *.ngrok.fengqi.me;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass  <span class="variable">$scheme</span>://127.0.0.1:<span class="variable">$proxy_port</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate /opt/ngrok/ngrok.fengqi.me.crt;</span><br><span class="line">    ssl_certificate_key /opt/ngrok/ngrok.fengqi.me.key;</span><br><span class="line"></span><br><span class="line">    proxy_set_header    X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header    Host <span class="variable">$http_host</span>;</span><br><span class="line">    proxy_set_header    X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">    access_log off;</span><br><span class="line">    log_not_found off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/53c72ae1446c">自建ngrok服务实现内网穿透</a></p><p><a href="https://blog.csdn.net/random0708/article/details/105778056/?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-2&spm=1001.2101.3001.4242"></a></p><p><a href="https://twindy.org/nginx-ngrock-net-through/">Nginx配合ngrok实现内网穿透</a></p><p><a href="https://fengqi.me/unix/409.html">[原创]搭建自己的 Ngrok 服务器, 并与 Nginx 并存</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建私有仓库</title>
      <link href="/2021/12/16/docker/%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/"/>
      <url>/2021/12/16/docker/%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4625d2560c94cb7116a775fab17f34a7586e6abfd22ad6bfff13c63a06cce1e1">c196cafda8389b7d2f2d99a9cfcc95062b775d7c178d99aa2e121cf8ebafa6fce4d9b93d4589b474faca3198a1729d1d22f523ce7c132dc298e5dd2797344ca5f2e85c7a7694ee75d7ea6311cc3426e020f41f4d360ab6a558e16da0686ae9a23fdb10f6cb2b52fb0daf5e4fc7a788a220869020bee7c94faecdae452c879d48c3df1959c940c4587edecc6b7a0ba4285b52a0899a23fb8cf97a85c7d089d4b5d9fa2594061a1f97106c22297466284ebacdd3b3f211b8929f96d9705debd5e2879c8b0ac38a9f7ac22f2689e1e13a6a3478404580eb5a1dc148b77daed5f027826bfbcd37cb7686723108f1bce230d463534e7c14c209b26b4a01c54d5ad15bf3a56ea0abbe09282ceabd9e5fdfdb22a3b909deefa6f3d8b84af9146a7cf4bfdff2c178c3d1cabfaa55595d15f6b346a30c2f10ef9762da0e2126b276e762423e91943f007643e2d2d715581b39ca2c1ddcbd7997bf28b7631497a80347b4547c06285e7430cc3ff43e06dca1af90a01bc01a6d9b5a075725553e75accaa8cf7a7dc8f66ed2f3990294ade6962eb1c6cd2cf6ad531285eb9c2ed237a90b6a5518a10d7693a184b8641e44031c7cc6fb832e048838a93528cb486cc6a2638713f80e99e7c1f630627f291b2fc5d1b0e60024ff13d911f03a056590969c3a73dd12c254f6003470f4a8225060092aff098dc23c28591431b6ad88991c3699d5d34863184980411277d2524c4f850ea0627927c5e4dc06e226d35c1fac633fe5e8089d67d25a4439b1fa4868d21b12ef88c1983952e2f04bd4be80e380ecfd4ee67b96eb9a9c22f146f58c757621db7fda491db41f46b571fc64bb8e1a455a3d5b194a8f27d7a38c921d47e730143b67a60f2149645f08ceccf1ba999bbc95b16648b74a8a6e63c739989a10c8a531b018167875587b84b2bb5a4d92edbbbfaefcd14fe42b30ef6679c1c99530663bf593b05eab9b9578b3242db04fb31e44da34888801dbdb53f3d900a657f027a79dc1b7ee643b0e272c709290e0f540b1967358af2b8a00e1d5819b01dbef033909981f2c48e8ea15f295d8d93ab81b4d7c230c6cdadee70b789e43b2cf76e514ab6f3b527f4eea0b1d6643fbf4d3e61382b464412992ecec56723b5b9c360339a101a891bb3d66a08f7ba6cbd0469624d77f5d75568b8eb172ad73dee55a96227cc5267b00e919b4af9cb45d8ae7b39906e4417891de97568a5e8007982dfddc4ded0ca4b31efd270d5d71fd8432611b028beeebb22b5ae0dcfee655652e14c93e717d2a58e0f93c7e4ec33574a5340051e10cc8a2adfcf058262f63d8e5885786cf45ff1dbff25c3c995a991d3e492a5469532c5685231b802edb6bd90588046dd064281b8f4d666d224ddd51ba0c207793c0a4e98bfef0be8b8b47c96e1c4a3329092b3a86d42c34a1aaf69d04b77b51eeb01abf67eea351c521a773374d6948d48eece6ca608e2f07a9ecf4c90c0868630efd505d82d9df52e2543f93d913157261371c5bee3aedb2d0655a72259bec6283092f1d48c5175790675d4200e0dff7567e139b9bc663028d66a3a800561b5587116d05d8c695724016c94dd6228809a71b3f6322af82439221e467a140ce0b23843210e0c44cfa3c781b6fe3c603b00c146cc99fcacfeebc4d4b83bca14e8413969e55a87a25c3f86ca672a2552cec91ad7a43fad0ae6988996820bce777b68399ab5546bf02f85bc283d01e463d75f02d29282fbecf2d6c4e65cb22897205ed7e36669a7e55f555a610495534a2f03204902a59ba02c5fd3bd4cfc5e5d24d4006f1f548b4c0ec39702bbed6936407843784d27e74bc05d965bfcff9a1d4350e86080644052e42ab7a284c6f80be16d2d578271d3ab2ccd4c45b5ffaa3506ea042d644d517aeb50064a6079949fde5ac86db1bcc94459b8076cf9a6780d36833a7203a4c5e5da62e60952db341dd9767db89b7853143ec4fea0bc1cf3f6f8664fdf4b3cd71713e131aadbcd2ecf24be3ff5f42215ef303c6cf105a180448bedca4322d02d5eb9dc2c5310d0a453bb8d7ca6be6bb8bd3a7ef3d1d3da2e320de87683e1fea1da1b8d17ae43d6b6880fbac9fd9ac7369b3e9ef645d82ae01f9f6472bef411d7973ba993c7081ef4756154b05d4da02b72c029eff1663c106ad793b7b473362fc37dac0c5dfab2609e34a8cb7c8e91e0c76eac882bbd281c416c2c933c7d78e4e96188f239a5dbe82cb16d62efcbc27e6be30abd81bf96514fa1d836d3687bbd0453b8a32af4794d8915610d42e9fda454e3ec4f59d855db45e4d275109f4f51f1f0603858fb47e94d701f18fff6c3b35cb70968feee157c7a0b7e826f0fa78147eb12ea5bbd14cdfc8f3568e66dbca318c87e2a506249922b439da6d444c7041fbf77c23f5b7e6c36cee64221cb97fe7671e106a49762edf3f0de265299a5fcf38448c6a1998eb1623225c78c0f0a023ad0f4f7178838787877d41c68551d5729263a0c9602da6c47dc04a4d8cdd11c21c5b78a253ce9e658d8d7ce74e90fe438eb7fb1c2bfa61a011a8d48ae895c575f30c5d9abab01cb1c9a0935ba95b8c8660a0717e822cfb8db4691fce04930fd439d67643209fb2c710f7bcab6d3571d5234b115a2969c659999b95cd7896aa60d98c56ed10d50d0b43e1461e145646adef6ea95a02cec5e90dee9d3625b18571b662e1f61428716bfdb1a4d00a62d8e8a7a4a724df35f584315b1bf99d6b6650b2674a1279ef62888637fe26c399736d1223d83300a5a3fe969315060dd08b061507a8ae02a5d9621c0936232ba220d2e7f17a49cfffea9b5ad8b3c5f941a6ee0d423cfd79d57dad039062e0a42c3566cbc3539de60aafaa1952e1e84a744fcfbf4e945d8633ce059f5a0ddb2feacc0e5d158a98367d960fa56973a8c3bb555f45fe7f039cb16604e6a2e2abf0a62c29fde74101887f8f17a2e6c90468eca17b41cde9e55d9449500d0e469ee194ef23732d37165ed0cfcf9f37843dc7972b898efe563fadb309a20d504605a74467fe32c0f8dab808311d21170f8970bbb314036384569017fc67ab79fd2bc55342de18c2dc4cee9ed44d8c2b8cefb3a14fe815d507956cb6ca0f33b33a0d584cf40d5de77ddcdb99e1f330d96faa2db195ef4c5e744c9faa8dc0cad237509531fb54d4361dfba45651393d68e5cd180573226ca5a4d6bcbaf1568b141fa2fd2c1d34031ea963df653616b91fbf333f0d784fc70a0ad99de853d5eef2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 私人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>问题集合</title>
      <link href="/2021/12/16/docker/%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/"/>
      <url>/2021/12/16/docker/%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="问题集合"><a href="#问题集合" class="headerlink" title="问题集合"></a>问题集合</h1><h3 id="Error-response-from-daemon-Cannot-restart-container-f6-OCI-runtime-create-failed-container-linux-go-346-starting-container-process-caused-“process-linux-go-319-getting-the-final-child’s-pid-from-pipe-caused-quot-EOF-quot-“-unknown"><a href="#Error-response-from-daemon-Cannot-restart-container-f6-OCI-runtime-create-failed-container-linux-go-346-starting-container-process-caused-“process-linux-go-319-getting-the-final-child’s-pid-from-pipe-caused-quot-EOF-quot-“-unknown" class="headerlink" title="Error response from daemon: Cannot restart container f6: OCI runtime create failed: container_linux.go:346: starting container process caused “process_linux.go:319: getting the final child’s pid from pipe caused &quot;EOF&quot;“: unknown"></a>Error response from daemon: Cannot restart container f6: OCI runtime create failed: container_linux.go:346: starting container process caused “process_linux.go:319: getting the final child’s pid from pipe caused &quot;EOF&quot;“: unknown</h3><p><a href="https://www.cnblogs.com/yanglei-xyz/p/container_linux_go_346.html">OCI runtime create failed: container_linux.go:346</a></p><h2 id="docker-网络问题"><a href="#docker-网络问题" class="headerlink" title="docker 网络问题"></a>docker 网络问题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service docker stop</span><br><span class="line">$ sudo pkill docker</span><br><span class="line">$ sudo iptables -t nat -F</span><br><span class="line">$ sudo ifconfig docker0 down</span><br><span class="line">$ sudo brctl delbr docker0</span><br><span class="line">$ sudo service docker start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fix BUG</title>
      <link href="/2021/12/16/kubernetes/Fix%20BUG/"/>
      <url>/2021/12/16/kubernetes/Fix%20BUG/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">min_depth: number (default: 2)</span><br><span class="line">max_depth: number (default: 6)</span><br></pre></td></tr></table></figure><h1 id="Fix-BUG"><a href="#Fix-BUG" class="headerlink" title="Fix BUG"></a>Fix BUG</h1><h3 id="1-kafka-启动报错"><a href="#1-kafka-启动报错" class="headerlink" title="1. kafka 启动报错"></a>1. kafka 启动报错</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">2021</span><span class="number">-03</span><span class="number">-16</span> <span class="number">05</span>:<span class="number">42</span>:<span class="number">12</span>,<span class="number">957</span>] ERROR Exiting Kafka due to fatal exception (kafka.Kafka$)</span><br><span class="line">org.apache.kafka.common.config.ConfigException: Invalid value tcp:<span class="comment">//172.21.3.194:9092 for configuration port: Not a number of type INT</span></span><br><span class="line">        at org.apache.kafka.common.config.ConfigDef.parseType(ConfigDef.java:<span class="number">726</span>)</span><br><span class="line">        at org.apache.kafka.common.config.ConfigDef.parseValue(ConfigDef.java:<span class="number">474</span>)</span><br><span class="line">        at org.apache.kafka.common.config.ConfigDef.parse(ConfigDef.java:<span class="number">467</span>)</span><br><span class="line">        at org.apache.kafka.common.config.AbstractConfig.&lt;init&gt;(AbstractConfig.java:<span class="number">108</span>)</span><br><span class="line">        at org.apache.kafka.common.config.AbstractConfig.&lt;init&gt;(AbstractConfig.java:<span class="number">142</span>)</span><br><span class="line">        at kafka.server.KafkaConfig.&lt;init&gt;(KafkaConfig.scala:<span class="number">1235</span>)</span><br><span class="line">        at kafka.server.KafkaConfig.&lt;init&gt;(KafkaConfig.scala:<span class="number">1238</span>)</span><br><span class="line">        at kafka.server.KafkaConfig$.fromProps(KafkaConfig.scala:<span class="number">1218</span>)</span><br><span class="line">        at kafka.server.KafkaServerStartable$.fromProps(KafkaServerStartable.scala:<span class="number">34</span>)</span><br><span class="line">        at kafka.server.KafkaServerStartable$.fromProps(KafkaServerStartable.scala:<span class="number">29</span>)</span><br><span class="line">        at kafka.Kafka$.main(Kafka.scala:<span class="number">68</span>)</span><br><span class="line">        at kafka.Kafka.main(Kafka.scala)</span><br></pre></td></tr></table></figure><p><a href="https://github.com/wurstmeister/kafka-docker/issues/122">Invalid value tcp://10.0.35.234:9092 for configuration port: Not a number of type INT · Issue #122 · wurstmeister/kafka-docker</a></p><h3 id="2-pvc-pv-不能删除"><a href="#2-pvc-pv-不能删除" class="headerlink" title="2. pvc pv 不能删除"></a>2. pvc pv 不能删除</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n yskg  patch pvc yskg-pvc -p &#x27;&#123;<span class="attr">&quot;metadata&quot;</span>:&#123;<span class="attr">&quot;finalizers&quot;</span>: []&#125;&#125;&#x27; --type=merge</span><br></pre></td></tr></table></figure><h3 id="Kafka-manager"><a href="#Kafka-manager" class="headerlink" title="Kafka manager"></a>Kafka manager</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ./bin/zkCli.sh</span><br><span class="line">[zk: localhost:2181(CONNECTED) 2] ls /kafka-manager</span><br><span class="line">[configs, deleteClusters, clusters]</span><br><span class="line">[zk: localhost:2181(CONNECTED) 3] create /kafka-manager/mutex &quot;&quot;</span><br><span class="line">Created /kafka-manager/mutex</span><br><span class="line">[zk: localhost:2181(CONNECTED) 5] create /kafka-manager/mutex/locks &quot;&quot;</span><br><span class="line">Created /kafka-manager/mutex/locks</span><br><span class="line">[zk: localhost:2181(CONNECTED) 6] create /kafka-manager/mutex/leases &quot;&quot;</span><br><span class="line">Created /kafka-manager/mutex/leases</span><br></pre></td></tr></table></figure><h2 id="Refrence"><a href="#Refrence" class="headerlink" title="Refrence"></a>Refrence</h2><ul><li><a href="https://www.cnblogs.com/rexcheny/p/10925464.html">PV、PVC、StorageClass讲解 - 昀溪 - 博客园</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Volume</title>
      <link href="/2021/12/16/kubernetes/Volume/"/>
      <url>/2021/12/16/kubernetes/Volume/</url>
      
        <content type="html"><![CDATA[<h1 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h1><h2 id="Storageclass"><a href="#Storageclass" class="headerlink" title="Storageclass"></a>Storageclass</h2><blockquote><p>要使用 StorageClass，我们就得安装对应的自动配置程序，比如我们这里存储后端使用的是 nfs，那么我们就需要使用到一个 nfs-client 的自动配置程序，我们也叫它 Provisioner，这个程序使用我们已经配置好的 nfs 服务器，来自动创建持久卷，也就是自动帮我们创建 PV。</p></blockquote><h3 id="部署阿里云的nas-做为-sc"><a href="#部署阿里云的nas-做为-sc" class="headerlink" title="部署阿里云的nas 做为 sc"></a>部署阿里云的nas 做为 sc</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">nas</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">nfs-provisioner-runner</span></span><br><span class="line">   <span class="attr">namespace:</span> <span class="string">nas</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;services&quot;</span>, <span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>,<span class="string">&quot;create&quot;</span>,<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>,<span class="string">&quot;update&quot;</span>]</span><br><span class="line">   <span class="bullet">-</span>  <span class="attr">apiGroups:</span> [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">      <span class="attr">resources:</span> [<span class="string">&quot;podsecuritypolicies&quot;</span>]</span><br><span class="line">      <span class="attr">resourceNames:</span> [<span class="string">&quot;nfs-provisioner&quot;</span>]</span><br><span class="line">      <span class="attr">verbs:</span> [<span class="string">&quot;use&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">run-nfs-provisioner</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-provisioner</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">nas</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-provisioner-runner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">alicloud-nas-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">nas</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">     <span class="attr">matchLabels:</span></span><br><span class="line">       <span class="attr">app:</span> <span class="string">alicloud-nas-controller</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">alicloud-nas-controller</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">preference:</span></span><br><span class="line">              <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">      <span class="attr">priorityClassName:</span> <span class="string">system-node-critical</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">nfs-provisioner</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-provisioner</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">egistry.cn-shanghai.aliyuncs.com/jieee/alicloud-nas-controller:v1.14.3.8</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROVISIONER_NAME</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">alicloud/nas</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">nas</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/data</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nas</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ali-nas</span></span><br><span class="line"><span class="attr">mountOptions:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">noresvport</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">vers=4.0</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">&quot;abcdefg-hijk.cn-shanghai.nas.aliyuncs.com:/&quot;</span> <span class="comment"># 服务地址</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">nfs</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">alicloud/nas</span> <span class="comment"># 此处需要与控制器中的PROVISIONER_NAME保存一致</span></span><br><span class="line"><span class="attr">reclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.kubernetes.org.cn/4022.html">kunbernetes-基于NFS的存储_Kubernetes中文社区</a></p><p><a href="https://kubernetes.io/zh/docs/concepts/storage/volumes/">卷</a></p><p><a href="https://www.kubernetes.org.cn/1146.html">Kubernetes 中的 StorageClass 和动态卷供给_Kubernetes中文社区</a></p><p><a href="https://www.yuque.com/xiaowei-trt7k/tw/nbn41g">13.Volumes · 语雀</a></p><p><a href="https://blog.csdn.net/m0_38039437/article/details/109516958">k8s-NFS Provisioner 为 NFS 提供StorageClass的动态存储动态分配卷-8_Bruce小鬼-CSDN博客_nfs-provisioner</a></p><p><a href="https://developer.aliyun.com/article/713441">Kubernetes环境中使用NAS动态存储卷-阿里云开发者社区</a></p><p><a href="https://www.lingjie.tech/article/2020-11-07/22">K8S配置StoregeClass(nfs,ceph-rdb,cephfs,阿里云NAS)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes</title>
      <link href="/2021/12/16/kubernetes/kubernetes/"/>
      <url>/2021/12/16/kubernetes/kubernetes/</url>
      
        <content type="html"><![CDATA[<h2 id="kubernetes"><a href="#kubernetes" class="headerlink" title="kubernetes"></a>kubernetes</h2><h3 id="k8s-快速安装"><a href="#k8s-快速安装" class="headerlink" title="k8s 快速安装"></a>k8s 快速安装</h3><p><a href="http://press.demo.kuboard.cn/install/install-k8s.html#%E6%96%87%E6%A1%A3%E7%89%B9%E7%82%B9">使用kubeadm安装kubernetes_v1.22.x | Kuboard</a></p><h3 id="K-8-s-命令-cmd-k8s"><a href="#K-8-s-命令-cmd-k8s" class="headerlink" title="K 8 s 命令 #cmd #k8s"></a>K 8 s 命令 #cmd #k8s</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k get pvc|grep Pending|awk &#x27;&#123;print $1&#125;&#x27;|xargs -n 1 k delete pvc </span><br></pre></td></tr></table></figure><h2 id="K-8-s-证书更新"><a href="#K-8-s-证书更新" class="headerlink" title="K 8 s 证书更新"></a>K 8 s 证书更新</h2><p><a href="https://zhuanlan.zhihu.com/p/184948611#:~:text=%E6%9B%B4%E6%96%B0kubeconfig%EF%BC%88%2Fetc%2Fkubernetes%EF%BC%89%20%28master2%2C%20master3%29%20kubeadm%20alpha%20certs%20renew%20admin.conf,controller-manager.conf%20kubeadm%20alpha%20certs%20renew%20scheduler.conf%20%23%20%E4%BB%A5%E4%B8%8B%E5%91%BD%E4%BB%A4%E4%B8%AD%E4%BB%A5master2%E3%80%81master3%E4%B8%BA%E4%BE%8B%EF%BC%8C%E8%AF%B7%E6%A0%B9%E6%8D%AE%E9%9B%86%E7%BE%A4%E5%AE%9E%E9%99%85%E8%8A%82%E7%82%B9%E5%90%8D%E7%A7%B0%E6%9B%BF%E6%8D%A2%E3%80%82">kubernetes证书更新 - 知乎</a></p><p>Created: March 12, 2021 4:11 PM</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h3 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h3><p><a href="http://docs.kubernetes.org.cn/">Kubernetes(K8S)中文文档_Kubernetes中文社区</a></p><p><a href="https://kubernetes.io/zh/docs/home/">Kubernetes 文档</a></p><p><a href="https://www.yuque.com/xiaowei-trt7k/tw/gd08dk">31.k8s集群安装prometheus-operator · 语雀</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kuberneters kafka</title>
      <link href="/2021/12/16/kubernetes/kuberneters%20kafka/"/>
      <url>/2021/12/16/kubernetes/kuberneters%20kafka/</url>
      
        <content type="html"><![CDATA[<h1 id="kuberneters-kafka"><a href="#kuberneters-kafka" class="headerlink" title="kuberneters kafka"></a>kuberneters kafka</h1><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote></blockquote><ol><li>kafak deployment 环境变量需要调价<ul><li>name: KAFKA_LISTENERS<br>value: PLAINTEXT://0.0.0.0:9092</li><li>name: KAFKA_ADVERTISED_LISTENERS<br>value: PLAINTEXT://kafka:9092</li></ul></li><li>指定hostname<br> hostname: kafka</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zoo1</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">client</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2181</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">follower</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">2888</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">leader</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">3888</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">zookeeper-1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-service</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kafka</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9092</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">kafka-port</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">zookeeper-deployment-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">zookeeper-1</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">zoo1</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">digitalwonderland/zookeeper</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">2181</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOOKEEPER_ID</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ZOOKEEPER_SERVER_1</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">zoo1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-broker0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">kafka</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostname:</span> <span class="string">kafka-service</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka-service</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">wurstmeister/kafka</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9092</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_ADVERTISED_PORT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;9092&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_ADVERTISED_HOST_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">kafka-service</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_LISTENERS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">PLAINTEXT://0.0.0.0:9092</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_ADVERTISED_LISTENERS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">PLAINTEXT://kafka-service:9092</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_ZOOKEEPER_CONNECT</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">zoo1:2181</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_BROKER_ID</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">KAFKA_CREATE_TOPICS</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">sample.topic:1:1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kafka-cat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">kafka-cat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kafka-cat</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">confluentinc/cp-kafkacat</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>]</span><br><span class="line">          <span class="attr">args:</span> [<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;trap : TERM INT; sleep infinity &amp; wait&quot;</span>]</span><br></pre></td></tr></table></figure><p><a href="http://www.smartjava.org/content/minimal-kafka-instance-for-k8s/">Running a minimal Kafka instance on K8S</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打污点</title>
      <link href="/2021/12/16/kubernetes/%E6%89%93%E6%B1%A1%E7%82%B9/"/>
      <url>/2021/12/16/kubernetes/%E6%89%93%E6%B1%A1%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="打污点"><a href="#打污点" class="headerlink" title="打污点"></a>打污点</h1><p><a href="https://www.cnblogs.com/zhanglianghhh/p/14022018.html">Kubernetes K8S之Taints污点与Tolerations容忍详解 - 踏歌行666 - 博客园</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置私有化仓库</title>
      <link href="/2021/12/16/kubernetes/%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89%E5%8C%96%E4%BB%93%E5%BA%93/"/>
      <url>/2021/12/16/kubernetes/%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89%E5%8C%96%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5894ce4d61e5f7ad0f2f852ecd1790903f70bd034fa0aa301b94249813bf7092"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Tornado</title>
      <link href="/2021/12/16/python/Python%20Tornado/"/>
      <url>/2021/12/16/python/Python%20Tornado/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-Tornado"><a href="#Python-Tornado" class="headerlink" title="Python Tornado"></a>Python Tornado</h1><p><a href="https://www.osgeo.cn/tornado/">Tornado Web Server - Tornado 6.1b1 文档</a><br><a href="https://iworkh.gitee.io/blog/2020/06/08/python_tornado_info/">👍Tornado入门这一篇足以 | iworkh blog</a><br>中文文档</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中实现PHP的魔术方法call和callStatic</title>
      <link href="/2021/12/16/python/Python%E4%B8%AD%E5%AE%9E%E7%8E%B0PHP%E7%9A%84%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95call%E5%92%8CcallStatic/"/>
      <url>/2021/12/16/python/Python%E4%B8%AD%E5%AE%9E%E7%8E%B0PHP%E7%9A%84%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95call%E5%92%8CcallStatic/</url>
      
        <content type="html"><![CDATA[<h1 id="Python中实现PHP的魔术方法call和callStatic"><a href="#Python中实现PHP的魔术方法call和callStatic" class="headerlink" title="Python中实现PHP的魔术方法call和callStatic"></a>Python中实现PHP的魔术方法call和callStatic</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MagicMeta</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    调用MagicCall不存在的方法时，会调用其元类的getattr方法</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, method_name</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            <span class="built_in">getattr</span>(self, <span class="string">&#x27;_callStaticMethod&#x27;</span>)(method_name, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MagicCall</span>():</span></span><br><span class="line">    <span class="string">&quot;重定义类的元类&quot;</span></span><br><span class="line">    __metaclass__ = MagicMeta</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, method_name</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">            self._callMethod(method_name, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> func</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_callStaticMethod</span>(<span class="params">method_name, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        调用不存在的静态方法时执行的函数</span></span><br><span class="line"><span class="string">        :param method_name: 方法名</span></span><br><span class="line"><span class="string">        :param args:   方法参数</span></span><br><span class="line"><span class="string">        :param kwargs: 方法参数</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_callMethod</span>(<span class="params">self, method_name, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        调用不存在的方法时执行的函数</span></span><br><span class="line"><span class="string">        :param method_name: 方法名</span></span><br><span class="line"><span class="string">        :param args:   方法参数</span></span><br><span class="line"><span class="string">        :param kwargs: 方法参数</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>(<span class="params">MagicCall</span>):</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_callStaticMethod</span>(<span class="params">method_name, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(method_name, args, kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_callMethod</span>(<span class="params">self, method_name, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(method_name, args, kwargs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span> :</span><br><span class="line">    ins = MyClass()</span><br><span class="line">    ins.hello(<span class="string">&#x27;xx&#x27;</span>, <span class="string">&#x27;pp&#x27;</span>)</span><br><span class="line">    MyClass.hello(<span class="string">&#x27;xxx&#x27;</span>, <span class="string">&#x27;ppp&#x27;</span>, xname=<span class="string">&#x27;linxianlong&#x27;</span>)</span><br><span class="line">    MethodProxy.hello()</span><br></pre></td></tr></table></figure><p><a href="http://longlog.me/2017/07/24/python-call-callStatic/">Python中实现PHP的魔术方法call和callStatic</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python celery</title>
      <link href="/2021/12/16/python/python%20celery/"/>
      <url>/2021/12/16/python/python%20celery/</url>
      
        <content type="html"><![CDATA[<h1 id="python-celery"><a href="#python-celery" class="headerlink" title="python celery"></a>python celery</h1><p>中文文档</p><p><a href="https://www.celerycn.io/yong-hu-zhi-nan/tiao-yong-ren-wu-calling-tasks">调用任务：Calling Tasks</a></p><p>英文文档</p><p><a href="https://docs.celeryproject.org/en/stable/index.html">Celery - Distributed Task Queue - Celery 5.1.2 documentation</a></p><p>celery exchange 配置</p><p><a href="https://www.cnblogs.com/ajianbeyourself/p/4950758.html">使用celery之深入celery配置（转）</a></p><p><strong>MySQL在 celery 任务期间不断失去连接</strong></p><p><a href="https://www.coder.work/article/4643613">python - MySQL在 celery 任务期间不断失去连接</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 单例模式</title>
      <link href="/2021/12/16/python/python%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/12/16/python/python%20%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="python-单例模式"><a href="#python-单例模式" class="headerlink" title="python 单例模式"></a>python 单例模式</h1><p>#学习</p><p><strong>使用 new 关键字实现单例模式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(cls,<span class="string">&quot;_instance&quot;</span>):</span><br><span class="line">            cls._instance = <span class="built_in">super</span>(Singleton, cls).__new__(cls, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls._instance</span><br><span class="line"></span><br><span class="line">s1 = Singleton()</span><br><span class="line">s2 = Singleton()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> s1 <span class="keyword">is</span> s2</span><br></pre></td></tr></table></figure><p><strong>使用 metaclass 实现单例模式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;__init__&quot;</span></span><br><span class="line">        self.__instance = <span class="literal">None</span></span><br><span class="line">        <span class="built_in">super</span>(Singleton,self).__init__(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;__call__&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.__instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.__instance = <span class="built_in">super</span>(Singleton,self).__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> self.__instance</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __metaclass__ = Singleton [[在代码执行到这里的时候，元类中的__new__方法和__init__方法其实已经被执行了，而不是在Foo]]实例化的时候执行。且仅会执行一次。</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">type</span></span>):</span></span><br><span class="line">    _instances = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> cls._instances:</span><br><span class="line">            cls._instances[cls] = <span class="built_in">super</span>(Singleton, cls).__call__(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls._instances[cls]</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cls4</span>(<span class="params">metaclass=Singleton</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cls1 = Cls4()</span><br><span class="line">cls2 = Cls4()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(cls1) == <span class="built_in">id</span>(cls2))</span><br></pre></td></tr></table></figure><p><strong>使用类装饰器实现单例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, cls</span>):</span></span><br><span class="line">        self._cls = cls</span><br><span class="line">        self._instance = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self._cls <span class="keyword">not</span> <span class="keyword">in</span> self._instance:</span><br><span class="line">            self._instance[self._cls] = self._cls()</span><br><span class="line">        <span class="keyword">return</span> self._instance[self._cls]</span><br><span class="line"></span><br><span class="line"><span class="meta">@Singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cls2</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cls1 = Cls2()</span><br><span class="line">cls2 = Cls2()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(cls1) == <span class="built_in">id</span>(cls2))</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/tkqasn/p/6524879.html">苍松</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SFTP</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/SFTP/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/SFTP/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="e98abeb3ede2f57774cc4d3c776b63223bf9f9fd5704fb00632d18dcc18f682d">a8896663a075a62411bb5095d4322c699a045991c4bca83378b9b0275aeafd25bbb5228c7cd8b34e0d725db2cdf3f1906243bc8825e4bbe71d3cd0876288259ce3ad4b2987acab858e500a7b7ed52dc4a5d051951c40fadb965e1df5d34e5e996e3b342b70a85a7eccb6295157c91fb4f937c97cc7d49fd5ff9e98481e02e06c4013724a4375e119a4ad688681b57fe085370fb897fe0eda95bdf4269ab61ee9f7b860d9dfda86a9cfea8406a623b72a47e6f2a3a0471cfcb965899d2f3b5acb3a33754fac1f4f0f79221671753279f920601cdc6271e58588a11e4a8ff9d07df08684a1ad028a3651a660f79c673e0c6f6aff5a1fcfff08f426e051d2b9e939b4afcf49bc5fae5112ceacd0549dd556aae4dabd113f1142ed6f478a2799c98f5c1486b428aca168295bdf0eeff4757a2804598d787705c67f7088d0d5a0d55423bfb0f03c28abbb43ebc9f26304d419b174cdc6febdbf21c6a23553b7abe6b6c1e32b582a83d9cce292b7e1fbfcf22273d9722b8811fbd3c5e7a7def28b8e7c50dba19698ddfae7a8a9c2d8c297bf821eb4aa31047566437bec1303420285e58bfe43eafda3d71af9793f820f31354cf063c4ef4b2ded9c8177ca3764eea9974bf2b92a5811a1cd0034964dd6b07c9abde44ed1b9f57263721205ed2a9c4981f305f9ffd1aea30f133734706012d2eb8d04d753a1d714dee8b08050d57d7ef1789b5a60b9e4db4acff782385239e58d89ea4f2d574d168ca606afb28b5c64de1fbe4e874ac3d2757c4f2c3dc4c7de5f041b2931f90366325767cbe6a25b32a9601fdcccd1a018ca1741d0e61660942a92acf668d302be2445c17f404126fee5727a1f38b317a0020f98c1b4402c7ce33429a4cbda583768946fc0175f84afaa4e1c53121db7b43d54190e613e71305f4f60adfae6f759a1d6d9e73b1c10cdd40ccbc7b86eddb0f23fda4e49adfacf489763fdd41f58aa125e45289eae23056a95eeef043be0c13f831bf5655b5237c90aadf5c08b8f716f563ee7ceb606b64776c0248c59b902a1eff737c4a18c223f7c3e690466518b2454ca813275114d6d159af7106172f87ce01b65e4d7788c9e83eeb9f9b19371b03f46976b891633cacd3280416a73f94a2fc513d5cd9adc3445101f9e992d597de219cb1404b33180a9cbc21a8e21cc26c1bccd0fc3c495e28490b5871c796ee04985e2a0854d0540c44daecfa73deda4ed73feac1b1cf75275d6fc532289d5c605973e67c540d17a3155018081287aadaa6b39618842e1ca0fd5b1259ca5a2c31bb6be64bdfc327a83737b0d091c0a059e61169388b7ba52aceb218a2b4eca6fa14571c2891916c5fd0dce9b911db447c33f7b64cbe42dbd90006011827c9a3b01e332c3320bcd8f7a20e9218e2da6efa79d1ce49e1f3dcf40538e8cc8fb132cd0e8b77097defc7a57bfd2759eec895ed0d9ac5ce3b09c6393c86ecc3335d9c116dda9f4ddd4c5e8383a00c8587aebe2ac2a069362cecae0583d1437e18c8fc6c054486e4d62a073c7d31443d110f9acbedeb8fb4062ca12345d6fbc51ebc97da85c11b5bd6e1c9e4f09612819ab8cfabbd6e1125aebdea126ed78e929a555c4e3de5a75acb67694a5ad466d87a5b28033c6f96e20921a4bcde7ce74703d37ac809157f0be7f5a129a9061532bbaec6400118e64373ac73a4545c557ab534060ee937c65fae02a8145a950eb184f1e9a8b15d6a94cc9aaf299eacaa1c23a3d537ebdbd90bfd6ee70dbb6d6eaf7bb713ea78b76595828f91df2f8ecb989a0ec278d5f2cba51e8f947d9dd0f2d0854fb4f54f28e74df0aec18f9f5757e2653997a2636d983eb4df073a3862f51f97bdbdd97f65ac39453d1be5528b44d649f8fd3d41b96e8f55f6d107d8e25cf6230f2b2bc8729161b4961ed75a0fcd021358671a8b822f8fb294bf1931e86ff02fd5388fa98872506cca266d75fcfb357e132818c8103456f6d156dbe793e57b47c458e7fb79694734c4bc3471e4ccbe5dfe990d2a30f1f40757fe554d6bafc145478763261371170ee8186890d2efae976d0d53a8e1cab78a64c41f90085caa50ddf09ba98869012f06f645d31e9619edca7e80a9fa0261ab3e1295980034f3e2375663cf94ad8ac239de31d8d9e2b2f0ceb4c6a8e465f553a439f4af0b3066e12421f40536af3d586ca23ecd15199cfb9b1ec550d0eb9f38354dc59854ef3530396b64f2da16f97af410d8fc6a9278fa5c31babf4387edf5f768d16eefa1f2625cf60f48814199d3f48e7324f4736b48de636ff108f414d065c38e617a28f54b85faefed4f977840d4167a5ec4772afe53d1ddf1679243ae397891710fae84f907317e5dabdfb7e4f9dbff6bc904649fdcf693e1b19d336e51afbeb571894cc2c4aec663d644bfab1939cbca4a6ea924f467011c1ead6844c5af7fc8307608c9715392a2885812c6e7fa05ed3a4b6755f025a0813fe26f9d2122cb1aae6da7f3e5b0066e9ac0db841fbbe73663c69bf7c2b32c6e7ca66a3cf6cbccffc77bedc7e2a740f39aa052ac3e445c02f78e364cc5e0ee4f64c1823261a044e8976bdfccec9ee79f3d00257499f42e9d9c3475b5cecec31f80cc2f92d80e82339981357475e7fdede02924daca6d6f6202c22275cdc430803cca777b395bfffcc9a891ae033c5d6b9d3802d31db12fa77e0da6078b239dcddffd505a3ea063d99ae10853f822de7c4dbc5ffac328f3091fe04e64e50636cf9cf28e408041cc17b16416d762a0d5c97cffabc1fcb29cc10658b408c87c0bdcb77f554054b3353e47abd7e0ea20c47f42e47ec271e7a0b236b836fe999f7530e5e3b654e24c6eff2b770aff37587f7e84eef5b6e55e56ff8e2a557c81cca4ffa1ac68dfe7083b607c55148595f5b9cc2ef4170f4b5c6b8dacc27dcbba82c365c3269160afd9f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/git/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/git/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="GIT-添加-ssh"><a href="#GIT-添加-ssh" class="headerlink" title="GIT 添加 ssh"></a>GIT 添加 ssh</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="operator">-</span>agent bash</span><br><span class="line">ssh<span class="operator">-</span><span class="keyword">add</span> <span class="operator">~</span><span class="operator">/</span>.ssh<span class="operator">/</span>yecg</span><br></pre></td></tr></table></figure><h1 id="Git-加速"><a href="#Git-加速" class="headerlink" title="Git 加速"></a>Git 加速</h1><p><a href="https://qu.js.cn/how-to-speed-github/">国内加速Github的几种方案</a></p><h3 id="centos-升级git"><a href="#centos-升级git" class="headerlink" title="centos 升级git"></a>centos 升级git</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 添加源</span><br><span class="line">[root@CentOS ~]<span class="comment"># yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.9-1.x86_64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. 安装 Git <span class="number">2</span>.x</span><br><span class="line">[root@CentOS ~]<span class="comment"># yum -y install git</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>. 验证</span><br><span class="line">[root@CentOS ~]<span class="comment"># git --version</span></span><br><span class="line">git version <span class="number">2.30</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="加速合集"><a href="#加速合集" class="headerlink" title="加速合集"></a>加速合集</h2><h3 id="npm-加速"><a href="#npm-加速" class="headerlink" title="npm 加速"></a>npm 加速</h3><p><a href="https://nvm.p6p.net/use/mirror.html">nvm 切换国内镜像 | NVM</a></p><h2 id="Nvm"><a href="#Nvm" class="headerlink" title="Nvm"></a>Nvm</h2><h4 id="Nvm-设置默认-node"><a href="#Nvm-设置默认-node" class="headerlink" title="Nvm 设置默认 node"></a>Nvm 设置默认 node</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm alias default 18.17.0</span><br></pre></td></tr></table></figure><h4 id="全平台加速"><a href="#全平台加速" class="headerlink" title="全平台加速"></a>全平台加速</h4><p><a href="https://gitee.com/RubyMetric/chsrc">chsrc: chsrc 全平台通用换源工具与框架. Change Source everywhere for every software</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nfs</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/nfs/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/nfs/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d7b630410daeb796704a63a8ca46263cc5fe80107c594c1471931beb7fde322"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/vscode/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/vscode/</url>
      
        <content type="html"><![CDATA[<h1 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h1><h2 id="vscode-画流程图"><a href="#vscode-画流程图" class="headerlink" title="vscode 画流程图"></a>vscode 画流程图</h2><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/[[/zh-cn/diagrams]]">Markdown Preview Enhanced</a></p><p>markdown Preview Enhanced</p><p><a href="https://www.cnblogs.com/wanghaokun/p/12485152.html">markdown画流程图-mermaid工具 - 爱吃柠檬不加糖 - 博客园</a></p><p>mermaid语法</p><p><a href="https://www.imooc.com/wiki/markdownlesson/markdownflowchart.html">21 Markdown 流程图丨慕课网教程</a></p><p><a href="https://cloud.tencent.com/developer/article/1820557">markdown小技巧：mermaid绘图工具介绍</a></p><p><a href="https://mermaid-js.github.io/mermaid/[[/sequenceDiagram]]">mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TB</span></span><br><span class="line"><span class="code">    imported_anno_tasks[找到该图谱下所有已经导入的标注文档] </span></span><br><span class="line"><span class="code">    imported_task_ids[ids]</span></span><br><span class="line"><span class="code">    subgraph clear_annot_tsk</span></span><br><span class="line"><span class="code">    imported_anno_tasks --&gt; imported_task_ids</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    </span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">  A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">  subgraph T [&quot;Test&quot;]</span><br><span class="line">    A</span><br><span class="line">    B</span><br><span class="line">  end</span><br><span class="line">  classDef Test fill:[[F84E68]],stroke:#333,color:white;</span><br><span class="line">  class A,T Test</span><br><span class="line">  classDef TestSub fill:green;</span><br><span class="line">  class T TestSub</span><br><span class="line">  linkStyle 0 color:orange, stroke: orange;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">flowchart TB</span><br><span class="line">    c1--&gt;a2</span><br><span class="line">    subgraph one</span><br><span class="line">    a1--&gt;a2</span><br><span class="line">    end</span><br><span class="line">    subgraph two</span><br><span class="line">    b1--&gt;b2</span><br><span class="line">    end</span><br><span class="line">    subgraph three</span><br><span class="line">    c1--&gt;c2</span><br><span class="line">    end</span><br><span class="line">    one --&gt; two</span><br><span class="line">    three --&gt; two</span><br><span class="line">    two --&gt; c2</span><br></pre></td></tr></table></figure><p>```</p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>太极</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E5%A4%AA%E6%9E%81/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E5%A4%AA%E6%9E%81/</url>
      
        <content type="html"><![CDATA[<h1 id="太极"><a href="#太极" class="headerlink" title="太极"></a>太极</h1><p>#学习 </p><p>太极问题：</p><ol><li>在其他软件不能分享到微信。</li></ol><p><a href="https://taichi.cool/zh/">太极</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜像脚本</title>
      <link href="/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E9%95%9C%E5%83%8F%E8%84%9A%E6%9C%AC/"/>
      <url>/2021/12/16/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/%E9%95%9C%E5%83%8F%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="镜像脚本"><a href="#镜像脚本" class="headerlink" title="镜像脚本"></a>镜像脚本</h1><h3 id="解析镜像"><a href="#解析镜像" class="headerlink" title="解析镜像"></a>解析镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cat ./deployment/*.yaml | grep image | grep -v <span class="string">&#x27;#&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|grep -P <span class="string">&#x27;\G\S&#x27;</span>|sort|uniq &gt; nlp_platform.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">## 针对k8s的镜像</span></span><br><span class="line"> grep -rh image:  temp|sed <span class="string">&#x27;s/^[[:space:]]*//&#x27;</span>|grep <span class="string">&#x27;^image&#x27;</span>|grep <span class="string">&#x27;dockerhub&#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|sort|uniq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep -rh image:  ./ | grep image | grep -v <span class="string">&#x27;#&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|grep -P <span class="string">&#x27;\G\S&#x27;</span>|sort|uniq </span><br></pre></td></tr></table></figure><h3 id="对比镜像"><a href="#对比镜像" class="headerlink" title="对比镜像"></a>对比镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v -f exist.txt nlp_platform.txt &gt; lost_nlp_platform.txt</span><br></pre></td></tr></table></figure><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat lost_idps.txt | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    docker pull <span class="variable">$&#123;line&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">cat nlp_demo.txt |xargs -n1 docker pull</span><br><span class="line"></span><br><span class="line">find . -<span class="built_in">type</span> f -name <span class="string">&quot;*.yml&quot;</span>|xargs grep -h image: |sed <span class="string">&#x27;s/^[[:space:]]*//&#x27;</span>|grep <span class="string">&#x27;^image&#x27;</span>|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|sort|uniq|xargs -n1 docker pull</span><br><span class="line"></span><br><span class="line">docker save $(cat test.txt) &gt; yskg.tar &amp;&amp; gzip yskg.tar</span><br></pre></td></tr></table></figure><h3 id="打包镜像"><a href="#打包镜像" class="headerlink" title="打包镜像"></a>打包镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">images_dir=images_idps_`date +<span class="string">&quot;%Y-%m-%d&quot;</span>`</span><br><span class="line">mkdir <span class="variable">$images_dir</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">save_image</span></span> () &#123;</span><br><span class="line">    <span class="built_in">pushd</span> <span class="variable">$images_dir</span></span><br><span class="line">    image=<span class="variable">$1</span></span><br><span class="line">    saved_file=`<span class="built_in">echo</span> <span class="variable">$&#123;image&#125;</span> | awk -F / <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> | sed <span class="string">&#x27;s/:/-/g&#x27;</span>`.tar</span><br><span class="line">    zipped_file=<span class="variable">$saved_file</span>.gz</span><br><span class="line">    <span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$zipped_file</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;saving <span class="variable">$image</span> ...&quot;</span></span><br><span class="line">      docker save <span class="variable">$image</span> &gt; <span class="variable">$&#123;saved_file&#125;</span></span><br><span class="line">      tar -czvf <span class="variable">$&#123;zipped_file&#125;</span> <span class="variable">$&#123;saved_file&#125;</span></span><br><span class="line">      rm <span class="variable">$&#123;saved_file&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">popd</span></span><br><span class="line">&#125;</span><br><span class="line">cat lost_nlp_platform.txt | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    save_image <span class="variable">$&#123;line&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 一行</span></span><br><span class="line">docker save $(cat temp.txt) &gt; yskg.tar &amp;&amp; gzip yskg.tar</span><br></pre></td></tr></table></figure><p>镜像tag修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/host\/namespace/host\/namespace/g&quot;</span> `grep <span class="string">&#x27;iamge: &#x27;</span> -rl deployment/`</span><br></pre></td></tr></table></figure><p>删除特定行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sed -e <span class="string">&#x27;/resource/,+6d&#x27;</span> deployment/backendapi-deployment.yaml</span><br></pre></td></tr></table></figure><p>注释资源限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/resources/,/memory/s/^/#/&#x27;</span> `grep <span class="string">&#x27;image: &#x27;</span> -rl deployment/`</span><br><span class="line">sed -i <span class="string">&#x27;/limits/,/memory/s/^/#/&#x27;</span> `grep <span class="string">&#x27;image: &#x27;</span> -rl deployment/`</span><br></pre></td></tr></table></figure><p>反注释资源限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/resources/,/memory/s/#//&#x27;</span> auto_rule_extract_offline.yaml</span><br></pre></td></tr></table></figure><h3 id="批量-tag-并-push-仓库"><a href="#批量-tag-并-push-仓库" class="headerlink" title="批量 tag 并 push 仓库"></a>批量 tag 并 push 仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep -rh image:  middleware|grep -v &#x27;#&#x27;|awk &#x27;&#123;print $2&#125;&#x27;|sort|uniq|xargs -I&#123;&#125; sh -c &#x27;new_image=$(echo &#123;&#125; | sed &quot;s#/\([^/]*\)/#\/fiks\/#&quot;); docker tag &#123;&#125; $new_image;docker push $new_image&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sed &#x27;s|/|__|2g; s|dockerhub.datagrand.com|ccr.ccs.tencentyun.com/vincent/|&#x27;</span><br></pre></td></tr></table></figure><p><code>datagrand 镜像推到腾讯云</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -rh image:  temp|sed &#x27;s/^[[:space:]]*//&#x27;|grep &#x27;^image&#x27;|grep &#x27;dockerhub&#x27;|awk &#x27;&#123;print $2&#125;&#x27;|sort|uniq|xargs -I&#123;&#125; sh -c &#x27;new_image=$(echo &#123;&#125;|sed &quot;s|/|__|2g; s|dockerhub.datagrand.com|ccr.ccs.tencentyun.com/vincent|&quot;);docker pull &#123;&#125;;docker tag &#123;&#125; $new_image; docker push $new_image; docker rmi $new_image; docker rmi &#123;&#125;&#x27;</span><br></pre></td></tr></table></figure><h5 id="读取-txt-重新-tag-并推送"><a href="#读取-txt-重新-tag-并推送" class="headerlink" title="读取 txt 重新 tag 并推送"></a>读取 txt 重新 tag 并推送</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -rh image:  deploy_iwriting_stable|sed &#x27;s/^[[:space:]]*//&#x27;|grep &#x27;^image&#x27;|grep &#x27;dockerhub&#x27;|awk &#x27;&#123;print $2&#125;&#x27;|sort|uniq|xargs -n1  docker pull </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat image.txt |xargs -I&#123;&#125; sh -c &#x27;new_image=$(echo &#123;&#125;|sed &quot;s|/|__|2g; s|dockerhub.datagrand.com|ccr.ccs.tencentyun.com/vincent|&quot;);docker tag &#123;&#125; $new_image; docker push $new_image; docker rmi $new_image;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s#/\([^/]*\)/#\/fiks\/#&quot; `grep &#x27;image: &#x27; -rl deployment/`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 奇技淫巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arrango DB</title>
      <link href="/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/Arrango%20DB/Arrango%20DB/"/>
      <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/Arrango%20DB/Arrango%20DB/</url>
      
        <content type="html"><![CDATA[<h1 id="Arrango-DB"><a href="#Arrango-DB" class="headerlink" title="Arrango DB"></a>Arrango DB</h1><hr><h1 id="Reference-List"><a href="#Reference-List" class="headerlink" title="Reference List"></a>Reference List</h1><hr><p><a href="https://github.com/threatify/arango-orm">threatify/arango-orm</a></p><p><em><strong>arango-orm</strong></em></p><p><a href="https://www.arangodb.com/docs/stable/getting-started-querying-the-database.html">Querying the Database | Getting Started | Manual | ArangoDB Documentation</a></p><p>arrango 文档</p><p><a href="https://python-driver-for-arangodb.readthedocs.io/en/master/index.html">Compatibility - python-arango 6.1.0 documentation</a></p><p><em><strong>python-arrango</strong></em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Arrango DB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elastcsearch 自定义评分</title>
      <link href="/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch/Elastcsearch%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%84%E5%88%86/"/>
      <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch/Elastcsearch%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%84%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Elastcsearch-自定义评分"><a href="#Elastcsearch-自定义评分" class="headerlink" title="Elastcsearch 自定义评分"></a>Elastcsearch 自定义评分</h1><p>Created: March 2, 2021 4:59 PM</p><h2 id="Boosting-类型"><a href="#Boosting-类型" class="headerlink" title="Boosting 类型"></a>Boosting 类型</h2><p>boosting分为两种类型：</p><p>第一种：索引期间修改文档的相关性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUT my_index</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;boost&quot;</span>: <span class="number">2</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">**<span class="comment">// 索引期间修改相关性的弊端非常明显：修改boost值的唯一方式是重建索引，reindex数据，成本太高了！**</span></span><br></pre></td></tr></table></figure><p>   第二种：查询的时候修改文档的相关性。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;boosting&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;positive&quot;</span> : &#123;</span><br><span class="line">                <span class="attr">&quot;term&quot;</span> : &#123;</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span> : <span class="string">&quot;apple&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;negative&quot;</span> : &#123;</span><br><span class="line">                 <span class="attr">&quot;term&quot;</span> : &#123;</span><br><span class="line">                     <span class="attr">&quot;text&quot;</span> : <span class="string">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;negative_boost&quot;</span> : <span class="number">0.5</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>boost取值：0 - 1 之间的值，如：0.2，代表降低评分；</p><p>boost取值：&gt; 1， 如：1.5，代表提升评分。</p><h2 id="Function-score-自定义评分"><a href="#Function-score-自定义评分" class="headerlink" title="Function_score 自定义评分"></a>Function_score 自定义评分</h2><h3 id="1-通过script-score进行评分"><a href="#1-通过script-score进行评分" class="headerlink" title="1. 通过script_score进行评分"></a>1. 通过script_score进行评分</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;function_score&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;广发01&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;script_score&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;script&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;lang&quot;</span>: <span class="string">&quot;painless&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;inline&quot;</span>: <span class="string">&quot;0.9* _score + 0.1* doc[&#x27;importance&#x27;].value&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-通过functions进行评分"><a href="#2-通过functions进行评分" class="headerlink" title="2. 通过functions进行评分"></a>2. 通过functions进行评分</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;function_score&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;query&quot;</span>: &#123; <span class="attr">&quot;match_all&quot;</span>: &#123;&#125; &#125;,</span><br><span class="line">          <span class="attr">&quot;boost&quot;</span>: <span class="string">&quot;5&quot;</span>, </span><br><span class="line">          <span class="attr">&quot;functions&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="attr">&quot;filter&quot;</span>: &#123; <span class="attr">&quot;match&quot;</span>: &#123; <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;bar&quot;</span> &#125; &#125;,</span><br><span class="line">                  <span class="attr">&quot;random_score&quot;</span>: &#123;&#125;, </span><br><span class="line">                  <span class="attr">&quot;weight&quot;</span>: <span class="number">23</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="attr">&quot;filter&quot;</span>: &#123; <span class="attr">&quot;match&quot;</span>: &#123; <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;cat&quot;</span> &#125; &#125;,</span><br><span class="line">                  <span class="attr">&quot;weight&quot;</span>: <span class="number">42</span></span><br><span class="line">              &#125;</span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">&quot;max_boost&quot;</span>: <span class="number">42</span>,</span><br><span class="line">          <span class="attr">&quot;score_mode&quot;</span>: <span class="string">&quot;max&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;boost_mode&quot;</span>: <span class="string">&quot;multiply&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;min_score&quot;</span> : <span class="number">42</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://www.jianshu.com/p/7dd9a2dca65c">Elasticsearch 7.x 深入【7】文档打分</a></p><p><a href="http://doc.codingdict.com/elasticsearch/251/">Function Score 查询</a></p><p><a href="https://cloud.tencent.com/developer/article/1600163">实战 | Elasticsearch自定义评分的N种方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>myql 多对多级联删除</title>
      <link href="/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/myql%20%E5%A4%9A%E5%AF%B9%E5%A4%9A%E7%BA%A7%E8%81%94%E5%88%A0%E9%99%A4/"/>
      <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/myql%20%E5%A4%9A%E5%AF%B9%E5%A4%9A%E7%BA%A7%E8%81%94%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="myql-多对多级联删除"><a href="#myql-多对多级联删除" class="headerlink" title="myql 多对多级联删除"></a>myql 多对多级联删除</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">task <span class="operator">=</span> relationship(</span><br><span class="line">        <span class="string">&#x27;AnnoTaskEntity&#x27;</span>, secondary<span class="operator">=</span><span class="string">&#x27;anno_task_group&#x27;</span>,</span><br><span class="line">        backref<span class="operator">=</span>db.backref(<span class="string">&#x27;group&#x27;</span>,  lazy<span class="operator">=</span><span class="string">&#x27;dynamic&#x27;</span>), </span><br><span class="line">        lazy<span class="operator">=</span><span class="string">&#x27;dynamic&#x27;</span>,</span><br><span class="line">        cascade<span class="operator">=</span><span class="string">&#x27;all, delete-orphan&#x27;</span>,</span><br><span class="line">        single_parent<span class="operator">=</span><span class="literal">True</span></span><br><span class="line">    #     passive_deletes<span class="operator">=</span><span class="literal">True</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h3 id="lazy-字段解释"><a href="#lazy-字段解释" class="headerlink" title="lazy 字段解释"></a>lazy 字段解释</h3><p>/</p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="https://docs.sqlalchemy.org/en/14/orm/cascades.html#using-foreign-key-on-delete-with-many-to-many-relationships">SQLAlchemy 1.4 Documentation</a></p><p><a href="https://blog.csdn.net/gymaisyl/article/details/88556478">sqlalchemy中多对多关系级联删除的问题_gymaisyl的博客-CSDN博客</a></p><p><a href="https://www.osgeo.cn/sqlalchemy/orm/session_basics.html#deleting">SQLAlchemy 1.4 Documentation</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql/"/>
      <url>/2021/12/16/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><h2 id="更新datetime-TO-timestamp"><a href="#更新datetime-TO-timestamp" class="headerlink" title="更新datetime  TO timestamp"></a>更新datetime  TO timestamp</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATE data_grand_tb_event</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> ( <span class="keyword">SELECT</span> log_id, unix_timestamp(log_data_time) <span class="keyword">as</span> <span class="type">time</span> <span class="keyword">FROM</span> data_grand_tb_event ) c <span class="keyword">ON</span> data_grand_tb_event.log_id <span class="operator">=</span> c.log_id</span><br><span class="line"><span class="keyword">SET</span> data_grand_tb_event.time_stamp <span class="operator">=</span> c.time</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Mysql-运维"><a href="#Mysql-运维" class="headerlink" title="Mysql 运维"></a>Mysql 运维</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 确认有没有锁等待:</span><br><span class="line">show status like &#x27;innodb_row_lock%&#x27;;</span><br><span class="line">select * from information_schema.innodb_trx;</span><br><span class="line"></span><br><span class="line"># 查询锁等待详细信息</span><br><span class="line">select * from sys.innodb_lock_waits; ----&gt; blocking_pid(锁源的连接线程)</span><br><span class="line"></span><br><span class="line"># 通过连接线程ID找SQL线程语句</span><br><span class="line">select * from performance_schema.threads;</span><br><span class="line"></span><br><span class="line"># 通过SQL线程找到SQL语句</span><br><span class="line">select * from performance_schema.events_statements_history;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT * FROM information_schema.innodb_trx; 查看连接事物</span><br><span class="line"></span><br><span class="line">trx_tables_locked  字段表示锁定的表</span><br><span class="line"></span><br><span class="line">SELECT * FROM information_schema.innodb_lock_waits;</span><br><span class="line">SHOW ENGINE INNODB STATUS;</span><br><span class="line"></span><br><span class="line">SHOW PROCESSLIST;;</span><br><span class="line">UPDATE pangu_knowledge_item_history SET current_use=0, update_time=now() WHERE pangu_knowledge_item_history.id = 64918</span><br><span class="line"></span><br><span class="line">KILL 190;</span><br></pre></td></tr></table></figure><h3 id="Mysql-查看表锁定状态"><a href="#Mysql-查看表锁定状态" class="headerlink" title="Mysql 查看表锁定状态"></a>Mysql 查看表锁定状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    lw.requesting_trx_id AS &#x27;Requesting Transaction ID&#x27;,</span><br><span class="line">    lw.blocking_trx_id AS &#x27;Blocking Transaction ID&#x27;,</span><br><span class="line">    l.lock_table AS &#x27;Locked Table&#x27;,</span><br><span class="line">    l.lock_mode AS &#x27;Lock Mode&#x27;</span><br><span class="line">FROM</span><br><span class="line">    information_schema.innodb_lock_waits lw</span><br><span class="line">JOIN </span><br><span class="line">    information_schema.innodb_locks l ON lw.requested_lock_id = l.lock_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT trx_id, trx_state, trx_started, trx_tables_locked</span><br><span class="line">FROM information_schema.innodb_trx LIMIT 100</span><br></pre></td></tr></table></figure><p><a href="https://www.osgeo.cn/sqlalchemy/orm/loading_columns.html#deferred-column-loading">SQLAlchemy 1.4 Documentation</a></p><h2 id="Mysql-容器-内存占用特别高"><a href="#Mysql-容器-内存占用特别高" class="headerlink" title="Mysql 容器 内存占用特别高"></a>Mysql 容器 内存占用特别高</h2><p><code>只会在麒麟操作系统会有这个问题</code></p><h3 id="尝试修改-deemon-json"><a href="#尝试修改-deemon-json" class="headerlink" title="尝试修改 deemon. json"></a>尝试修改 deemon. json</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [</span><br><span class="line">        &quot;https://hub.uuuadc.top&quot;,</span><br><span class="line">        &quot;https://docker.anyhub.us.kg&quot;,</span><br><span class="line">        &quot;https://dockerhub.jobcher.com&quot;,</span><br><span class="line">        &quot;https://dockerhub.icu&quot;,</span><br><span class="line">        &quot;https://docker.ckyl.me&quot;,</span><br><span class="line">        &quot;https://docker.awsl9527.cn&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">    &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">    &quot;storage-opts&quot;: [&quot;overlay2.override_kernel_check=true&quot;],</span><br><span class="line">    &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">    &quot;log-opts&quot;: &#123;</span><br><span class="line">        &quot;max-size&quot;: &quot;100m&quot;,</span><br><span class="line">        &quot;max-file&quot;: &quot;3&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;oom-score-adjust&quot;: -1000,</span><br><span class="line">    &quot;bip&quot;: &quot;172.20.0.1/16&quot;,</span><br><span class="line">    &quot;data-root&quot;: &quot;/data/docker&quot;,</span><br><span class="line">    &quot;metrics-addr&quot;: &quot;0.0.0.0:9323&quot;,</span><br><span class="line">    &quot;experimental&quot;: true,</span><br><span class="line">    &quot;default-ulimits&quot;: &#123;</span><br><span class="line">        &quot;nofile&quot;: &#123;</span><br><span class="line">            &quot;Name&quot;: &quot;nofile&quot;,</span><br><span class="line">            &quot;Hard&quot;: 65535,</span><br><span class="line">            &quot;Soft&quot;: 65535</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;nproc&quot;: &#123;</span><br><span class="line">            &quot;Name&quot;: &quot;nproc&quot;,</span><br><span class="line">            &quot;Hard&quot;: 4096,</span><br><span class="line">            &quot;Soft&quot;: 4096</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;default-address-pools&quot;: [</span><br><span class="line">        &#123;&quot;base&quot;: &quot;10.252.0.0/16&quot;, &quot;size&quot;: 24&#125;,</span><br><span class="line">        &#123;&quot;base&quot;: &quot;10.252.1.0/16&quot;, &quot;size&quot;: 24&#125;,</span><br><span class="line">        &#123;&quot;base&quot;: &quot;10.252.2.0/16&quot;, &quot;size&quot;: 24&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h3><p><a href="https://blog.csdn.net/2401_82795112/article/details/135828959?spm=1001.2014.3001.5501">【Docker】（全网首发）Kylin V10 下 MySQL 容器内存占用异常的解决方法_kylin10 mysql docker-CSDN博客</a></p><p><a href="https://blog.csdn.net/2401_82795112/article/details/137280764">【Docker】（全网首发）Kylin V10 下 MySQL 容器内存占用异常的解决方法（续）_修改 kylin v10 服务器版下 容器默认 open files-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
